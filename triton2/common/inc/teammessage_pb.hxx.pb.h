// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_teammessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_teammessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coremessage_pb.hxx.pb.h"
#include "property_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();

class CMessageCreateTeamSelf;
class CMessageTeamInvite;
class CMessageTeamInviteRtn;
class CMessageTeamInvitedRequestCallBack;
class CMessageTeamSearch;
class CMessageTeamRequest;
class CMessageTeamRequestRtn;
class CMessageTeamLeave;
class CMessageTeamNewHead;
class CMessageTeamTick;
class CMessageTeamEnd;
class CMessageTeamRequestPlayerCallBack;
class CMessageTeamNotifyCallBack;
class CMessageTeamCallBack;
class CMessageTeamEndCallBack;
class CMessageTeamInviteAskCallBack;
class CMessageTeamTickCallBack;
class CMessageTeamErrMsgCallBack;
class CMessageTeamAskTeamMsg;
class CMessageTeamAskTeamCallBack;
class CMessageTeamConscribeMsg;
class CMessageTeamConscribeCallBack;
class CMessageTeamPropertyNotifyCallBack;
class CMessageTeamChangeDistribute;
class CMessageTeamChangeDistributeCallBack;
class CMessageTeamNotifyBuffCallBack;
class CMessageTeamBuffCallBack;
class CMessageTeamClearRequestList;
class CMessageTeamClearInviteList;
class CMessageTeamClearRequestCallBack;
class CMessageTeamClearInviteCallBack;
class CMessageTeamSearchMsg;
class CMessageTeamSearchMsgCallBack;
class CMessageTeamSearchConscribeMsg;
class CMessageTeamSearchConscribeCallBack;
class CMessageTeamDeleteMsg;
class CMessageTeamDeleteMsgCallBack;
class CMessageTeamOrderFollow;
class CMessageTeamOrderFollowCallBack;
class CMessageTeamRequestFollow;
class CMessageTeamRequestFollowCallBack;
class CMessageTeamTwoParamCallBack;
class CMessageTeamStateChange;
class CMessageRedirectJoinTeamResponse;
class CMessageRedirectTeamRelationNotice;
class CMessageRedirectCreateTeamNotice;
class CMessageTeamNotice;

enum TeamMessageID {
  ID_C2S_REQUEST_CREATETEAM = 7169,
  ID_C2S_REQUEST_INVITE = 7170,
  ID_C2S_REQUEST_INVITERTN = 7171,
  ID_C2S_REQUEST_INVITEDREQUEST = 7684,
  ID_C2S_REQUEST_SEARCH = 7173,
  ID_C2S_REQUEST_ASKFORJOIN = 7174,
  ID_C2S_REQUEST_APPLYRTN = 7175,
  ID_C2S_REQUEST_LEAVE = 7176,
  ID_C2S_REQUEST_NEWHEAD = 7177,
  ID_C2S_REQUEST_TICK = 7178,
  ID_C2S_REQUEST_ENDTEAM = 7179,
  ID_S2C_REQUEST_PROPOSERRTN = 7692,
  ID_S2C_NOTIFY_SYNITEMLIST = 7693,
  ID_S2C_NOTIFY_ITEMLIST = 7182,
  ID_S2C_NOTIFY_ENDTEAM = 7183,
  ID_S2C_NOTIFY_ASKJOINRTN = 7696,
  ID_S2C_NOTIFY_TICKRTN = 7185,
  ID_S2C_NOTIFY_ERRORMSG = 7698,
  ID_C2S_NOTIFY_ASKTEAMMSG = 7187,
  ID_S2C_NOTIFY_ASKTEAMTRN = 7188,
  ID_S2C_NOTIFY_CONSCRIBERTN = 7189,
  ID_C2S_NOTIFY_CONSCRIBEMSG = 7190,
  ID_S2C_NOTIFY_SYNPROPERTY = 7703,
  ID_C2S_REQUEST_CHANGEDISTRIBUTE = 7192,
  ID_S2C_NOTIFY_CHANGEDISTRIBUTERTN = 7193,
  ID_S2C_NOTIFY_SYNBUFF = 7194,
  ID_C2S_REQUEST_BUFFRTN = 7195,
  ID_C2S_REQUEST_ALIVESTATE = 7708,
  ID_C2S_REQUEST_CLEARREQUESTLIST = 7197,
  ID_C2S_REQUEST_CLEARINVITELIST = 7198,
  ID_S2C_NOTIFY_CLEARREQUESTCALLBACK = 7199,
  ID_S2C_NOTIFY_CLEARINVITECALLBACK = 7200,
  ID_C2S_REQUEST_SEARCHMSG = 7201,
  ID_C2S_REQUEST_SRHCONSCRIBEMSG = 7202,
  ID_S2C_NOTIFY_SEARCHMSGCALLBACK = 7715,
  ID_S2C_NOTIFY_SRHCONSCRIBECALLBACK = 7716,
  ID_C2S_REQUEST_DELMSG = 7205,
  ID_S2C_NOTIFY_DELMSGCALLBACK = 7206,
  ID_C2S_REQUEST_ORDERFOLLOW = 7207,
  ID_C2S_REQUEST_REQUESTFOLLOW = 7208,
  ID_S2C_NOTIFY_ORDERFOLLOWRTN = 7209,
  ID_S2C_NOTIFY_REQUESTFOLLOWRTN = 7210,
  ID_S2C_NOTIFY_2PARAMNOTIFY = 7211,
  ID_S2C_NOTIFY_CHANGETEAMSTATE = 7212,
  ID_S2S_RESPONSE_REDIRECTJOINTEAM = 7725,
  ID_S2S_NOTIFY_REDIRECTRELATION = 7726,
  ID_S2S_NOTIFY_REDIRECTCREATETEAM = 7727,
  ID_S2C_NOTIFY_TEAMNOTICE = 7216
};
const ::google::protobuf::EnumDescriptor* TeamMessageID_descriptor();
bool TeamMessageID_IsValid(int value);
const TeamMessageID TeamMessageID_MIN = ID_C2S_REQUEST_CREATETEAM;
const TeamMessageID TeamMessageID_MAX = ID_S2S_NOTIFY_REDIRECTCREATETEAM;

inline const ::std::string& TeamMessageID_Name(TeamMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    TeamMessageID_descriptor(), value);
}
inline bool TeamMessageID_Parse(
    const ::std::string& name, TeamMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeamMessageID>(
    TeamMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageCreateTeamSelf : public ::google::protobuf::Message {
 public:
  CMessageCreateTeamSelf();
  virtual ~CMessageCreateTeamSelf();
  
  CMessageCreateTeamSelf(const CMessageCreateTeamSelf& from);
  
  inline CMessageCreateTeamSelf& operator=(const CMessageCreateTeamSelf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateTeamSelf& default_instance();
  void Swap(CMessageCreateTeamSelf* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateTeamSelf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateTeamSelf& from);
  void MergeFrom(const CMessageCreateTeamSelf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateTeamSelf* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamInvite : public ::google::protobuf::Message {
 public:
  CMessageTeamInvite();
  virtual ~CMessageTeamInvite();
  
  CMessageTeamInvite(const CMessageTeamInvite& from);
  
  inline CMessageTeamInvite& operator=(const CMessageTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamInvite& default_instance();
  void Swap(CMessageTeamInvite* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamInvite& from);
  void MergeFrom(const CMessageTeamInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamInviteRtn : public ::google::protobuf::Message {
 public:
  CMessageTeamInviteRtn();
  virtual ~CMessageTeamInviteRtn();
  
  CMessageTeamInviteRtn(const CMessageTeamInviteRtn& from);
  
  inline CMessageTeamInviteRtn& operator=(const CMessageTeamInviteRtn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamInviteRtn& default_instance();
  void Swap(CMessageTeamInviteRtn* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamInviteRtn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamInviteRtn& from);
  void MergeFrom(const CMessageTeamInviteRtn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 InviteID = 2;
  inline bool has_inviteid() const;
  inline void clear_inviteid();
  static const int kInviteIDFieldNumber = 2;
  inline ::google::protobuf::uint32 inviteid() const;
  inline void set_inviteid(::google::protobuf::uint32 value);
  
  // optional uint32 InviteEntityID = 3;
  inline bool has_inviteentityid() const;
  inline void clear_inviteentityid();
  static const int kInviteEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 inviteentityid() const;
  inline void set_inviteentityid(::google::protobuf::uint32 value);
  
  // optional uint32 HeadCharID = 4;
  inline bool has_headcharid() const;
  inline void clear_headcharid();
  static const int kHeadCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 headcharid() const;
  inline void set_headcharid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 5;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 5;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 inviteid_;
  ::google::protobuf::uint32 inviteentityid_;
  ::google::protobuf::uint32 headcharid_;
  ::google::protobuf::uint32 teamid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamInviteRtn* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamInvitedRequestCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamInvitedRequestCallBack();
  virtual ~CMessageTeamInvitedRequestCallBack();
  
  CMessageTeamInvitedRequestCallBack(const CMessageTeamInvitedRequestCallBack& from);
  
  inline CMessageTeamInvitedRequestCallBack& operator=(const CMessageTeamInvitedRequestCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamInvitedRequestCallBack& default_instance();
  void Swap(CMessageTeamInvitedRequestCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamInvitedRequestCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamInvitedRequestCallBack& from);
  void MergeFrom(const CMessageTeamInvitedRequestCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 AccoutID = 2;
  inline bool has_accoutid() const;
  inline void clear_accoutid();
  static const int kAccoutIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accoutid() const;
  inline void set_accoutid(::google::protobuf::uint32 value);
  
  // optional string InviteeName = 3;
  inline bool has_inviteename() const;
  inline void clear_inviteename();
  static const int kInviteeNameFieldNumber = 3;
  inline const ::std::string& inviteename() const;
  inline void set_inviteename(const ::std::string& value);
  inline void set_inviteename(const char* value);
  inline void set_inviteename(const char* value, size_t size);
  inline ::std::string* mutable_inviteename();
  
  // optional uint32 InviteID = 4;
  inline bool has_inviteid() const;
  inline void clear_inviteid();
  static const int kInviteIDFieldNumber = 4;
  inline ::google::protobuf::uint32 inviteid() const;
  inline void set_inviteid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 5;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 5;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional string InviteName = 7;
  inline bool has_invitename() const;
  inline void clear_invitename();
  static const int kInviteNameFieldNumber = 7;
  inline const ::std::string& invitename() const;
  inline void set_invitename(const ::std::string& value);
  inline void set_invitename(const char* value);
  inline void set_invitename(const char* value, size_t size);
  inline ::std::string* mutable_invitename();
  
  // optional uint32 Nationality = 8;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 8;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 InviteeID = 9;
  inline bool has_inviteeid() const;
  inline void clear_inviteeid();
  static const int kInviteeIDFieldNumber = 9;
  inline ::google::protobuf::uint32 inviteeid() const;
  inline void set_inviteeid(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 10;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 10;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 11;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 11;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 12;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 12;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 accoutid_;
  ::std::string* inviteename_;
  static const ::std::string _default_inviteename_;
  ::google::protobuf::uint32 inviteid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 level_;
  ::std::string* invitename_;
  static const ::std::string _default_invitename_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 inviteeid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 face_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamInvitedRequestCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamSearch : public ::google::protobuf::Message {
 public:
  CMessageTeamSearch();
  virtual ~CMessageTeamSearch();
  
  CMessageTeamSearch(const CMessageTeamSearch& from);
  
  inline CMessageTeamSearch& operator=(const CMessageTeamSearch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamSearch& default_instance();
  void Swap(CMessageTeamSearch* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamSearch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamSearch& from);
  void MergeFrom(const CMessageTeamSearch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamSearch* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageTeamRequest();
  virtual ~CMessageTeamRequest();
  
  CMessageTeamRequest(const CMessageTeamRequest& from);
  
  inline CMessageTeamRequest& operator=(const CMessageTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamRequest& default_instance();
  void Swap(CMessageTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamRequest& from);
  void MergeFrom(const CMessageTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamRequestRtn : public ::google::protobuf::Message {
 public:
  CMessageTeamRequestRtn();
  virtual ~CMessageTeamRequestRtn();
  
  CMessageTeamRequestRtn(const CMessageTeamRequestRtn& from);
  
  inline CMessageTeamRequestRtn& operator=(const CMessageTeamRequestRtn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamRequestRtn& default_instance();
  void Swap(CMessageTeamRequestRtn* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamRequestRtn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamRequestRtn& from);
  void MergeFrom(const CMessageTeamRequestRtn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamRequestRtn* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamLeave : public ::google::protobuf::Message {
 public:
  CMessageTeamLeave();
  virtual ~CMessageTeamLeave();
  
  CMessageTeamLeave(const CMessageTeamLeave& from);
  
  inline CMessageTeamLeave& operator=(const CMessageTeamLeave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamLeave& default_instance();
  void Swap(CMessageTeamLeave* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamLeave& from);
  void MergeFrom(const CMessageTeamLeave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamLeave* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamNewHead : public ::google::protobuf::Message {
 public:
  CMessageTeamNewHead();
  virtual ~CMessageTeamNewHead();
  
  CMessageTeamNewHead(const CMessageTeamNewHead& from);
  
  inline CMessageTeamNewHead& operator=(const CMessageTeamNewHead& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamNewHead& default_instance();
  void Swap(CMessageTeamNewHead* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamNewHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamNewHead& from);
  void MergeFrom(const CMessageTeamNewHead& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamNewHead* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamTick : public ::google::protobuf::Message {
 public:
  CMessageTeamTick();
  virtual ~CMessageTeamTick();
  
  CMessageTeamTick(const CMessageTeamTick& from);
  
  inline CMessageTeamTick& operator=(const CMessageTeamTick& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamTick& default_instance();
  void Swap(CMessageTeamTick* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamTick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamTick& from);
  void MergeFrom(const CMessageTeamTick& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamTick* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamEnd : public ::google::protobuf::Message {
 public:
  CMessageTeamEnd();
  virtual ~CMessageTeamEnd();
  
  CMessageTeamEnd(const CMessageTeamEnd& from);
  
  inline CMessageTeamEnd& operator=(const CMessageTeamEnd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamEnd& default_instance();
  void Swap(CMessageTeamEnd* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamEnd& from);
  void MergeFrom(const CMessageTeamEnd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamEnd* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamRequestPlayerCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamRequestPlayerCallBack();
  virtual ~CMessageTeamRequestPlayerCallBack();
  
  CMessageTeamRequestPlayerCallBack(const CMessageTeamRequestPlayerCallBack& from);
  
  inline CMessageTeamRequestPlayerCallBack& operator=(const CMessageTeamRequestPlayerCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamRequestPlayerCallBack& default_instance();
  void Swap(CMessageTeamRequestPlayerCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamRequestPlayerCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamRequestPlayerCallBack& from);
  void MergeFrom(const CMessageTeamRequestPlayerCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 3;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 3;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 4;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 4;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional string Name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 AccoutID = 6;
  inline bool has_accoutid() const;
  inline void clear_accoutid();
  static const int kAccoutIDFieldNumber = 6;
  inline ::google::protobuf::uint32 accoutid() const;
  inline void set_accoutid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 8;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 8;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 9;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 9;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 10;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 10;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 nationality_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 accoutid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamRequestPlayerCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamNotifyCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamNotifyCallBack();
  virtual ~CMessageTeamNotifyCallBack();
  
  CMessageTeamNotifyCallBack(const CMessageTeamNotifyCallBack& from);
  
  inline CMessageTeamNotifyCallBack& operator=(const CMessageTeamNotifyCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamNotifyCallBack& default_instance();
  void Swap(CMessageTeamNotifyCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamNotifyCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamNotifyCallBack& from);
  void MergeFrom(const CMessageTeamNotifyCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 Code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional .PBMember Member = 3;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 3;
  inline const ::PBMember& member() const;
  inline ::PBMember* mutable_member();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 code_;
  ::PBMember* member_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamNotifyCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamCallBack();
  virtual ~CMessageTeamCallBack();
  
  CMessageTeamCallBack(const CMessageTeamCallBack& from);
  
  inline CMessageTeamCallBack& operator=(const CMessageTeamCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamCallBack& default_instance();
  void Swap(CMessageTeamCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamCallBack& from);
  void MergeFrom(const CMessageTeamCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string HeaderName = 1;
  inline bool has_headername() const;
  inline void clear_headername();
  static const int kHeaderNameFieldNumber = 1;
  inline const ::std::string& headername() const;
  inline void set_headername(const ::std::string& value);
  inline void set_headername(const char* value);
  inline void set_headername(const char* value, size_t size);
  inline ::std::string* mutable_headername();
  
  // optional uint32 Count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional string Buff = 3;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 3;
  inline const ::std::string& buff() const;
  inline void set_buff(const ::std::string& value);
  inline void set_buff(const char* value);
  inline void set_buff(const char* value, size_t size);
  inline ::std::string* mutable_buff();
  
  // optional uint32 HeadEtyID = 4;
  inline bool has_headetyid() const;
  inline void clear_headetyid();
  static const int kHeadEtyIDFieldNumber = 4;
  inline ::google::protobuf::uint32 headetyid() const;
  inline void set_headetyid(::google::protobuf::uint32 value);
  
  // repeated .PBMember Member = 5;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMember >& member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMember >* mutable_member();
  inline const ::PBMember& member(int index) const;
  inline ::PBMember* mutable_member(int index);
  inline ::PBMember* add_member();
  
  // optional uint32 BuffSize = 6;
  inline bool has_buffsize() const;
  inline void clear_buffsize();
  static const int kBuffSizeFieldNumber = 6;
  inline ::google::protobuf::uint32 buffsize() const;
  inline void set_buffsize(::google::protobuf::uint32 value);
  
  // optional uint32 Distribute = 7;
  inline bool has_distribute() const;
  inline void clear_distribute();
  static const int kDistributeFieldNumber = 7;
  inline ::google::protobuf::uint32 distribute() const;
  inline void set_distribute(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* headername_;
  static const ::std::string _default_headername_;
  ::google::protobuf::uint32 count_;
  ::std::string* buff_;
  static const ::std::string _default_buff_;
  ::google::protobuf::uint32 headetyid_;
  ::google::protobuf::RepeatedPtrField< ::PBMember > member_;
  ::google::protobuf::uint32 buffsize_;
  ::google::protobuf::uint32 distribute_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamEndCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamEndCallBack();
  virtual ~CMessageTeamEndCallBack();
  
  CMessageTeamEndCallBack(const CMessageTeamEndCallBack& from);
  
  inline CMessageTeamEndCallBack& operator=(const CMessageTeamEndCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamEndCallBack& default_instance();
  void Swap(CMessageTeamEndCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamEndCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamEndCallBack& from);
  void MergeFrom(const CMessageTeamEndCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamEndCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamInviteAskCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamInviteAskCallBack();
  virtual ~CMessageTeamInviteAskCallBack();
  
  CMessageTeamInviteAskCallBack(const CMessageTeamInviteAskCallBack& from);
  
  inline CMessageTeamInviteAskCallBack& operator=(const CMessageTeamInviteAskCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamInviteAskCallBack& default_instance();
  void Swap(CMessageTeamInviteAskCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamInviteAskCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamInviteAskCallBack& from);
  void MergeFrom(const CMessageTeamInviteAskCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 Count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional string HeadName = 3;
  inline bool has_headname() const;
  inline void clear_headname();
  static const int kHeadNameFieldNumber = 3;
  inline const ::std::string& headname() const;
  inline void set_headname(const ::std::string& value);
  inline void set_headname(const char* value);
  inline void set_headname(const char* value, size_t size);
  inline ::std::string* mutable_headname();
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Nationality = 5;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 5;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // repeated .PBMember Member = 6;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMember >& member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMember >* mutable_member();
  inline const ::PBMember& member(int index) const;
  inline ::PBMember* mutable_member(int index);
  inline ::PBMember* add_member();
  
  // optional uint32 BuffLen = 7;
  inline bool has_bufflen() const;
  inline void clear_bufflen();
  static const int kBuffLenFieldNumber = 7;
  inline ::google::protobuf::uint32 bufflen() const;
  inline void set_bufflen(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 8;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 8;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 9;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 9;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 10;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 10;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
  // optional uint32 Distribute = 11;
  inline bool has_distribute() const;
  inline void clear_distribute();
  static const int kDistributeFieldNumber = 11;
  inline ::google::protobuf::uint32 distribute() const;
  inline void set_distribute(::google::protobuf::uint32 value);
  
  // optional string Buff = 12;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 12;
  inline const ::std::string& buff() const;
  inline void set_buff(const ::std::string& value);
  inline void set_buff(const char* value);
  inline void set_buff(const char* value, size_t size);
  inline ::std::string* mutable_buff();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 count_;
  ::std::string* headname_;
  static const ::std::string _default_headname_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::RepeatedPtrField< ::PBMember > member_;
  ::google::protobuf::uint32 bufflen_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 distribute_;
  ::std::string* buff_;
  static const ::std::string _default_buff_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamInviteAskCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamTickCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamTickCallBack();
  virtual ~CMessageTeamTickCallBack();
  
  CMessageTeamTickCallBack(const CMessageTeamTickCallBack& from);
  
  inline CMessageTeamTickCallBack& operator=(const CMessageTeamTickCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamTickCallBack& default_instance();
  void Swap(CMessageTeamTickCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamTickCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamTickCallBack& from);
  void MergeFrom(const CMessageTeamTickCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamTickCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamErrMsgCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamErrMsgCallBack();
  virtual ~CMessageTeamErrMsgCallBack();
  
  CMessageTeamErrMsgCallBack(const CMessageTeamErrMsgCallBack& from);
  
  inline CMessageTeamErrMsgCallBack& operator=(const CMessageTeamErrMsgCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamErrMsgCallBack& default_instance();
  void Swap(CMessageTeamErrMsgCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamErrMsgCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamErrMsgCallBack& from);
  void MergeFrom(const CMessageTeamErrMsgCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamErrMsgCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamAskTeamMsg : public ::google::protobuf::Message {
 public:
  CMessageTeamAskTeamMsg();
  virtual ~CMessageTeamAskTeamMsg();
  
  CMessageTeamAskTeamMsg(const CMessageTeamAskTeamMsg& from);
  
  inline CMessageTeamAskTeamMsg& operator=(const CMessageTeamAskTeamMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamAskTeamMsg& default_instance();
  void Swap(CMessageTeamAskTeamMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamAskTeamMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamAskTeamMsg& from);
  void MergeFrom(const CMessageTeamAskTeamMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ConscribeType = 1;
  inline bool has_conscribetype() const;
  inline void clear_conscribetype();
  static const int kConscribeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 conscribetype() const;
  inline void set_conscribetype(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 2;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
  // optional string Msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 conscribetype_;
  ::google::protobuf::uint32 subtype_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamAskTeamMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamAskTeamCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamAskTeamCallBack();
  virtual ~CMessageTeamAskTeamCallBack();
  
  CMessageTeamAskTeamCallBack(const CMessageTeamAskTeamCallBack& from);
  
  inline CMessageTeamAskTeamCallBack& operator=(const CMessageTeamAskTeamCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamAskTeamCallBack& default_instance();
  void Swap(CMessageTeamAskTeamCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamAskTeamCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamAskTeamCallBack& from);
  void MergeFrom(const CMessageTeamAskTeamCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 4;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 5;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 5;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 ConscribeType = 6;
  inline bool has_conscribetype() const;
  inline void clear_conscribetype();
  static const int kConscribeTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 conscribetype() const;
  inline void set_conscribetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 conscribetype_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamAskTeamCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamConscribeMsg : public ::google::protobuf::Message {
 public:
  CMessageTeamConscribeMsg();
  virtual ~CMessageTeamConscribeMsg();
  
  CMessageTeamConscribeMsg(const CMessageTeamConscribeMsg& from);
  
  inline CMessageTeamConscribeMsg& operator=(const CMessageTeamConscribeMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamConscribeMsg& default_instance();
  void Swap(CMessageTeamConscribeMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamConscribeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamConscribeMsg& from);
  void MergeFrom(const CMessageTeamConscribeMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ConscribeType = 1;
  inline bool has_conscribetype() const;
  inline void clear_conscribetype();
  static const int kConscribeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 conscribetype() const;
  inline void set_conscribetype(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 2;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 3;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional string Msg = 4;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // optional uint32 MinLevel = 5;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 6;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 6;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 conscribetype_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::uint32 maxlevel_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 metier_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamConscribeMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamConscribeCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamConscribeCallBack();
  virtual ~CMessageTeamConscribeCallBack();
  
  CMessageTeamConscribeCallBack(const CMessageTeamConscribeCallBack& from);
  
  inline CMessageTeamConscribeCallBack& operator=(const CMessageTeamConscribeCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamConscribeCallBack& default_instance();
  void Swap(CMessageTeamConscribeCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamConscribeCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamConscribeCallBack& from);
  void MergeFrom(const CMessageTeamConscribeCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MaxLevel = 1;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 2;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 2;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional string Msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // optional uint32 Count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 5;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 ConscribeType = 6;
  inline bool has_conscribetype() const;
  inline void clear_conscribetype();
  static const int kConscribeTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 conscribetype() const;
  inline void set_conscribetype(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 7;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
  // optional string HeaderName = 8;
  inline bool has_headername() const;
  inline void clear_headername();
  static const int kHeaderNameFieldNumber = 8;
  inline const ::std::string& headername() const;
  inline void set_headername(const ::std::string& value);
  inline void set_headername(const char* value);
  inline void set_headername(const char* value, size_t size);
  inline ::std::string* mutable_headername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 metier_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 conscribetype_;
  ::google::protobuf::uint32 subtype_;
  ::std::string* headername_;
  static const ::std::string _default_headername_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamConscribeCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamPropertyNotifyCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamPropertyNotifyCallBack();
  virtual ~CMessageTeamPropertyNotifyCallBack();
  
  CMessageTeamPropertyNotifyCallBack(const CMessageTeamPropertyNotifyCallBack& from);
  
  inline CMessageTeamPropertyNotifyCallBack& operator=(const CMessageTeamPropertyNotifyCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamPropertyNotifyCallBack& default_instance();
  void Swap(CMessageTeamPropertyNotifyCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamPropertyNotifyCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamPropertyNotifyCallBack& from);
  void MergeFrom(const CMessageTeamPropertyNotifyCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // repeated .PBMember ItemPro = 2;
  inline int itempro_size() const;
  inline void clear_itempro();
  static const int kItemProFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMember >& itempro() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMember >* mutable_itempro();
  inline const ::PBMember& itempro(int index) const;
  inline ::PBMember* mutable_itempro(int index);
  inline ::PBMember* add_itempro();
  
  // optional uint32 ItemSize = 3;
  inline bool has_itemsize() const;
  inline void clear_itemsize();
  static const int kItemSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 itemsize() const;
  inline void set_itemsize(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::RepeatedPtrField< ::PBMember > itempro_;
  ::google::protobuf::uint32 itemsize_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamPropertyNotifyCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamChangeDistribute : public ::google::protobuf::Message {
 public:
  CMessageTeamChangeDistribute();
  virtual ~CMessageTeamChangeDistribute();
  
  CMessageTeamChangeDistribute(const CMessageTeamChangeDistribute& from);
  
  inline CMessageTeamChangeDistribute& operator=(const CMessageTeamChangeDistribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamChangeDistribute& default_instance();
  void Swap(CMessageTeamChangeDistribute* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamChangeDistribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamChangeDistribute& from);
  void MergeFrom(const CMessageTeamChangeDistribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Distribute = 1;
  inline bool has_distribute() const;
  inline void clear_distribute();
  static const int kDistributeFieldNumber = 1;
  inline ::google::protobuf::uint32 distribute() const;
  inline void set_distribute(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 distribute_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamChangeDistribute* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamChangeDistributeCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamChangeDistributeCallBack();
  virtual ~CMessageTeamChangeDistributeCallBack();
  
  CMessageTeamChangeDistributeCallBack(const CMessageTeamChangeDistributeCallBack& from);
  
  inline CMessageTeamChangeDistributeCallBack& operator=(const CMessageTeamChangeDistributeCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamChangeDistributeCallBack& default_instance();
  void Swap(CMessageTeamChangeDistributeCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamChangeDistributeCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamChangeDistributeCallBack& from);
  void MergeFrom(const CMessageTeamChangeDistributeCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Distribute = 1;
  inline bool has_distribute() const;
  inline void clear_distribute();
  static const int kDistributeFieldNumber = 1;
  inline ::google::protobuf::uint32 distribute() const;
  inline void set_distribute(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 distribute_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamChangeDistributeCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamNotifyBuffCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamNotifyBuffCallBack();
  virtual ~CMessageTeamNotifyBuffCallBack();
  
  CMessageTeamNotifyBuffCallBack(const CMessageTeamNotifyBuffCallBack& from);
  
  inline CMessageTeamNotifyBuffCallBack& operator=(const CMessageTeamNotifyBuffCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamNotifyBuffCallBack& default_instance();
  void Swap(CMessageTeamNotifyBuffCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamNotifyBuffCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamNotifyBuffCallBack& from);
  void MergeFrom(const CMessageTeamNotifyBuffCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 IsAdd = 1;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 1;
  inline ::google::protobuf::uint32 isadd() const;
  inline void set_isadd(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 4;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 4;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 isadd_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 buffid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamNotifyBuffCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamBuffCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamBuffCallBack();
  virtual ~CMessageTeamBuffCallBack();
  
  CMessageTeamBuffCallBack(const CMessageTeamBuffCallBack& from);
  
  inline CMessageTeamBuffCallBack& operator=(const CMessageTeamBuffCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamBuffCallBack& default_instance();
  void Swap(CMessageTeamBuffCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamBuffCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamBuffCallBack& from);
  void MergeFrom(const CMessageTeamBuffCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BuffSize = 1;
  inline bool has_buffsize() const;
  inline void clear_buffsize();
  static const int kBuffSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 buffsize() const;
  inline void set_buffsize(::google::protobuf::uint32 value);
  
  // optional string BuffList = 2;
  inline bool has_bufflist() const;
  inline void clear_bufflist();
  static const int kBuffListFieldNumber = 2;
  inline const ::std::string& bufflist() const;
  inline void set_bufflist(const ::std::string& value);
  inline void set_bufflist(const char* value);
  inline void set_bufflist(const char* value, size_t size);
  inline ::std::string* mutable_bufflist();
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BuffCount = 5;
  inline bool has_buffcount() const;
  inline void clear_buffcount();
  static const int kBuffCountFieldNumber = 5;
  inline ::google::protobuf::uint32 buffcount() const;
  inline void set_buffcount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 buffsize_;
  ::std::string* bufflist_;
  static const ::std::string _default_bufflist_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 buffcount_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamBuffCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamClearRequestList : public ::google::protobuf::Message {
 public:
  CMessageTeamClearRequestList();
  virtual ~CMessageTeamClearRequestList();
  
  CMessageTeamClearRequestList(const CMessageTeamClearRequestList& from);
  
  inline CMessageTeamClearRequestList& operator=(const CMessageTeamClearRequestList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamClearRequestList& default_instance();
  void Swap(CMessageTeamClearRequestList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamClearRequestList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamClearRequestList& from);
  void MergeFrom(const CMessageTeamClearRequestList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamClearRequestList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamClearInviteList : public ::google::protobuf::Message {
 public:
  CMessageTeamClearInviteList();
  virtual ~CMessageTeamClearInviteList();
  
  CMessageTeamClearInviteList(const CMessageTeamClearInviteList& from);
  
  inline CMessageTeamClearInviteList& operator=(const CMessageTeamClearInviteList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamClearInviteList& default_instance();
  void Swap(CMessageTeamClearInviteList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamClearInviteList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamClearInviteList& from);
  void MergeFrom(const CMessageTeamClearInviteList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamClearInviteList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamClearRequestCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamClearRequestCallBack();
  virtual ~CMessageTeamClearRequestCallBack();
  
  CMessageTeamClearRequestCallBack(const CMessageTeamClearRequestCallBack& from);
  
  inline CMessageTeamClearRequestCallBack& operator=(const CMessageTeamClearRequestCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamClearRequestCallBack& default_instance();
  void Swap(CMessageTeamClearRequestCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamClearRequestCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamClearRequestCallBack& from);
  void MergeFrom(const CMessageTeamClearRequestCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamClearRequestCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamClearInviteCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamClearInviteCallBack();
  virtual ~CMessageTeamClearInviteCallBack();
  
  CMessageTeamClearInviteCallBack(const CMessageTeamClearInviteCallBack& from);
  
  inline CMessageTeamClearInviteCallBack& operator=(const CMessageTeamClearInviteCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamClearInviteCallBack& default_instance();
  void Swap(CMessageTeamClearInviteCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamClearInviteCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamClearInviteCallBack& from);
  void MergeFrom(const CMessageTeamClearInviteCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamClearInviteCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamSearchMsg : public ::google::protobuf::Message {
 public:
  CMessageTeamSearchMsg();
  virtual ~CMessageTeamSearchMsg();
  
  CMessageTeamSearchMsg(const CMessageTeamSearchMsg& from);
  
  inline CMessageTeamSearchMsg& operator=(const CMessageTeamSearchMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamSearchMsg& default_instance();
  void Swap(CMessageTeamSearchMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamSearchMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamSearchMsg& from);
  void MergeFrom(const CMessageTeamSearchMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ConscibeType = 1;
  inline bool has_conscibetype() const;
  inline void clear_conscibetype();
  static const int kConscibeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 conscibetype() const;
  inline void set_conscibetype(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 2;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
  // optional uint32 PageIndex = 3;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
  // optional uint32 MsgType = 4;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 conscibetype_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::uint32 pageindex_;
  ::google::protobuf::uint32 msgtype_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamSearchMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamSearchMsgCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamSearchMsgCallBack();
  virtual ~CMessageTeamSearchMsgCallBack();
  
  CMessageTeamSearchMsgCallBack(const CMessageTeamSearchMsgCallBack& from);
  
  inline CMessageTeamSearchMsgCallBack& operator=(const CMessageTeamSearchMsgCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamSearchMsgCallBack& default_instance();
  void Swap(CMessageTeamSearchMsgCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamSearchMsgCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamSearchMsgCallBack& from);
  void MergeFrom(const CMessageTeamSearchMsgCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 TotalPage = 2;
  inline bool has_totalpage() const;
  inline void clear_totalpage();
  static const int kTotalPageFieldNumber = 2;
  inline ::google::protobuf::uint32 totalpage() const;
  inline void set_totalpage(::google::protobuf::uint32 value);
  
  // optional bytes MsgBuff = 3;
  inline bool has_msgbuff() const;
  inline void clear_msgbuff();
  static const int kMsgBuffFieldNumber = 3;
  inline const ::std::string& msgbuff() const;
  inline void set_msgbuff(const ::std::string& value);
  inline void set_msgbuff(const char* value);
  inline void set_msgbuff(const void* value, size_t size);
  inline ::std::string* mutable_msgbuff();
  
  // optional uint32 MsgSize = 4;
  inline bool has_msgsize() const;
  inline void clear_msgsize();
  static const int kMsgSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 msgsize() const;
  inline void set_msgsize(::google::protobuf::uint32 value);
  
  // optional uint32 PageIndex = 5;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
  // optional uint32 BuffLen = 6;
  inline bool has_bufflen() const;
  inline void clear_bufflen();
  static const int kBuffLenFieldNumber = 6;
  inline ::google::protobuf::uint32 bufflen() const;
  inline void set_bufflen(::google::protobuf::uint32 value);
  
  // optional uint32 MsgType = 7;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
  // optional uint32 MsgCount = 8;
  inline bool has_msgcount() const;
  inline void clear_msgcount();
  static const int kMsgCountFieldNumber = 8;
  inline ::google::protobuf::uint32 msgcount() const;
  inline void set_msgcount(::google::protobuf::uint32 value);
  
  // repeated .PBTeamMsg Msg = 9;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >& msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >* mutable_msg();
  inline const ::PBTeamMsg& msg(int index) const;
  inline ::PBTeamMsg* mutable_msg(int index);
  inline ::PBTeamMsg* add_msg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 totalpage_;
  ::std::string* msgbuff_;
  static const ::std::string _default_msgbuff_;
  ::google::protobuf::uint32 msgsize_;
  ::google::protobuf::uint32 pageindex_;
  ::google::protobuf::uint32 bufflen_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 msgcount_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamMsg > msg_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamSearchMsgCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamSearchConscribeMsg : public ::google::protobuf::Message {
 public:
  CMessageTeamSearchConscribeMsg();
  virtual ~CMessageTeamSearchConscribeMsg();
  
  CMessageTeamSearchConscribeMsg(const CMessageTeamSearchConscribeMsg& from);
  
  inline CMessageTeamSearchConscribeMsg& operator=(const CMessageTeamSearchConscribeMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamSearchConscribeMsg& default_instance();
  void Swap(CMessageTeamSearchConscribeMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamSearchConscribeMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamSearchConscribeMsg& from);
  void MergeFrom(const CMessageTeamSearchConscribeMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MsgType = 1;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 2;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 PageIndex = 3;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 4;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 ConscribeType = 5;
  inline bool has_conscribetype() const;
  inline void clear_conscribetype();
  static const int kConscribeTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 conscribetype() const;
  inline void set_conscribetype(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 6;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 6;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 7;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 pageindex_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 conscribetype_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 subtype_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamSearchConscribeMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamSearchConscribeCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamSearchConscribeCallBack();
  virtual ~CMessageTeamSearchConscribeCallBack();
  
  CMessageTeamSearchConscribeCallBack(const CMessageTeamSearchConscribeCallBack& from);
  
  inline CMessageTeamSearchConscribeCallBack& operator=(const CMessageTeamSearchConscribeCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamSearchConscribeCallBack& default_instance();
  void Swap(CMessageTeamSearchConscribeCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamSearchConscribeCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamSearchConscribeCallBack& from);
  void MergeFrom(const CMessageTeamSearchConscribeCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional bytes MsgBuff = 2;
  inline bool has_msgbuff() const;
  inline void clear_msgbuff();
  static const int kMsgBuffFieldNumber = 2;
  inline const ::std::string& msgbuff() const;
  inline void set_msgbuff(const ::std::string& value);
  inline void set_msgbuff(const char* value);
  inline void set_msgbuff(const void* value, size_t size);
  inline ::std::string* mutable_msgbuff();
  
  // optional uint32 BuffLen = 3;
  inline bool has_bufflen() const;
  inline void clear_bufflen();
  static const int kBuffLenFieldNumber = 3;
  inline ::google::protobuf::uint32 bufflen() const;
  inline void set_bufflen(::google::protobuf::uint32 value);
  
  // optional uint32 MsgType = 4;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
  // optional uint32 MsgCount = 5;
  inline bool has_msgcount() const;
  inline void clear_msgcount();
  static const int kMsgCountFieldNumber = 5;
  inline ::google::protobuf::uint32 msgcount() const;
  inline void set_msgcount(::google::protobuf::uint32 value);
  
  // optional uint32 PageIndex = 6;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
  // repeated .PBTeamMsg Msg = 7;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >& msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >* mutable_msg();
  inline const ::PBTeamMsg& msg(int index) const;
  inline ::PBTeamMsg* mutable_msg(int index);
  inline ::PBTeamMsg* add_msg();
  
  // optional uint32 MsgSize = 8;
  inline bool has_msgsize() const;
  inline void clear_msgsize();
  static const int kMsgSizeFieldNumber = 8;
  inline ::google::protobuf::uint32 msgsize() const;
  inline void set_msgsize(::google::protobuf::uint32 value);
  
  // optional uint32 TotalPage = 9;
  inline bool has_totalpage() const;
  inline void clear_totalpage();
  static const int kTotalPageFieldNumber = 9;
  inline ::google::protobuf::uint32 totalpage() const;
  inline void set_totalpage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* msgbuff_;
  static const ::std::string _default_msgbuff_;
  ::google::protobuf::uint32 bufflen_;
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 msgcount_;
  ::google::protobuf::uint32 pageindex_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamMsg > msg_;
  ::google::protobuf::uint32 msgsize_;
  ::google::protobuf::uint32 totalpage_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamSearchConscribeCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamDeleteMsg : public ::google::protobuf::Message {
 public:
  CMessageTeamDeleteMsg();
  virtual ~CMessageTeamDeleteMsg();
  
  CMessageTeamDeleteMsg(const CMessageTeamDeleteMsg& from);
  
  inline CMessageTeamDeleteMsg& operator=(const CMessageTeamDeleteMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamDeleteMsg& default_instance();
  void Swap(CMessageTeamDeleteMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamDeleteMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamDeleteMsg& from);
  void MergeFrom(const CMessageTeamDeleteMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MsgType = 1;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 msgtype_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamDeleteMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamDeleteMsgCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamDeleteMsgCallBack();
  virtual ~CMessageTeamDeleteMsgCallBack();
  
  CMessageTeamDeleteMsgCallBack(const CMessageTeamDeleteMsgCallBack& from);
  
  inline CMessageTeamDeleteMsgCallBack& operator=(const CMessageTeamDeleteMsgCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamDeleteMsgCallBack& default_instance();
  void Swap(CMessageTeamDeleteMsgCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamDeleteMsgCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamDeleteMsgCallBack& from);
  void MergeFrom(const CMessageTeamDeleteMsgCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 MsgType = 2;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 msgtype_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamDeleteMsgCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamOrderFollow : public ::google::protobuf::Message {
 public:
  CMessageTeamOrderFollow();
  virtual ~CMessageTeamOrderFollow();
  
  CMessageTeamOrderFollow(const CMessageTeamOrderFollow& from);
  
  inline CMessageTeamOrderFollow& operator=(const CMessageTeamOrderFollow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamOrderFollow& default_instance();
  void Swap(CMessageTeamOrderFollow* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamOrderFollow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamOrderFollow& from);
  void MergeFrom(const CMessageTeamOrderFollow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamOrderFollow* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamOrderFollowCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamOrderFollowCallBack();
  virtual ~CMessageTeamOrderFollowCallBack();
  
  CMessageTeamOrderFollowCallBack(const CMessageTeamOrderFollowCallBack& from);
  
  inline CMessageTeamOrderFollowCallBack& operator=(const CMessageTeamOrderFollowCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamOrderFollowCallBack& default_instance();
  void Swap(CMessageTeamOrderFollowCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamOrderFollowCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamOrderFollowCallBack& from);
  void MergeFrom(const CMessageTeamOrderFollowCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string HeaderName = 2;
  inline bool has_headername() const;
  inline void clear_headername();
  static const int kHeaderNameFieldNumber = 2;
  inline const ::std::string& headername() const;
  inline void set_headername(const ::std::string& value);
  inline void set_headername(const char* value);
  inline void set_headername(const char* value, size_t size);
  inline ::std::string* mutable_headername();
  
  // optional uint32 Code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* headername_;
  static const ::std::string _default_headername_;
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamOrderFollowCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamRequestFollow : public ::google::protobuf::Message {
 public:
  CMessageTeamRequestFollow();
  virtual ~CMessageTeamRequestFollow();
  
  CMessageTeamRequestFollow(const CMessageTeamRequestFollow& from);
  
  inline CMessageTeamRequestFollow& operator=(const CMessageTeamRequestFollow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamRequestFollow& default_instance();
  void Swap(CMessageTeamRequestFollow* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamRequestFollow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamRequestFollow& from);
  void MergeFrom(const CMessageTeamRequestFollow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamRequestFollow* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamRequestFollowCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamRequestFollowCallBack();
  virtual ~CMessageTeamRequestFollowCallBack();
  
  CMessageTeamRequestFollowCallBack(const CMessageTeamRequestFollowCallBack& from);
  
  inline CMessageTeamRequestFollowCallBack& operator=(const CMessageTeamRequestFollowCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamRequestFollowCallBack& default_instance();
  void Swap(CMessageTeamRequestFollowCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamRequestFollowCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamRequestFollowCallBack& from);
  void MergeFrom(const CMessageTeamRequestFollowCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamRequestFollowCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamTwoParamCallBack : public ::google::protobuf::Message {
 public:
  CMessageTeamTwoParamCallBack();
  virtual ~CMessageTeamTwoParamCallBack();
  
  CMessageTeamTwoParamCallBack(const CMessageTeamTwoParamCallBack& from);
  
  inline CMessageTeamTwoParamCallBack& operator=(const CMessageTeamTwoParamCallBack& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamTwoParamCallBack& default_instance();
  void Swap(CMessageTeamTwoParamCallBack* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamTwoParamCallBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamTwoParamCallBack& from);
  void MergeFrom(const CMessageTeamTwoParamCallBack& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string DesName = 1;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 1;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional string SrcName = 3;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 3;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional uint32 Code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 5;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 descharid_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 srccharid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamTwoParamCallBack* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamStateChange : public ::google::protobuf::Message {
 public:
  CMessageTeamStateChange();
  virtual ~CMessageTeamStateChange();
  
  CMessageTeamStateChange(const CMessageTeamStateChange& from);
  
  inline CMessageTeamStateChange& operator=(const CMessageTeamStateChange& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamStateChange& default_instance();
  void Swap(CMessageTeamStateChange* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamStateChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamStateChange& from);
  void MergeFrom(const CMessageTeamStateChange& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TeamFlag = 1;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamStateChange* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectJoinTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageRedirectJoinTeamResponse();
  virtual ~CMessageRedirectJoinTeamResponse();
  
  CMessageRedirectJoinTeamResponse(const CMessageRedirectJoinTeamResponse& from);
  
  inline CMessageRedirectJoinTeamResponse& operator=(const CMessageRedirectJoinTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectJoinTeamResponse& default_instance();
  void Swap(CMessageRedirectJoinTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectJoinTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectJoinTeamResponse& from);
  void MergeFrom(const CMessageRedirectJoinTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 ItemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 HeadID = 3;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIDFieldNumber = 3;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 headid_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectJoinTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectTeamRelationNotice : public ::google::protobuf::Message {
 public:
  CMessageRedirectTeamRelationNotice();
  virtual ~CMessageRedirectTeamRelationNotice();
  
  CMessageRedirectTeamRelationNotice(const CMessageRedirectTeamRelationNotice& from);
  
  inline CMessageRedirectTeamRelationNotice& operator=(const CMessageRedirectTeamRelationNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectTeamRelationNotice& default_instance();
  void Swap(CMessageRedirectTeamRelationNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectTeamRelationNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectTeamRelationNotice& from);
  void MergeFrom(const CMessageRedirectTeamRelationNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 IsAdd = 3;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 3;
  inline ::google::protobuf::uint32 isadd() const;
  inline void set_isadd(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 4;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string DesName = 5;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 5;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 Type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string SrcName = 7;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 7;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 isadd_;
  ::google::protobuf::uint32 srccharid_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 type_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectTeamRelationNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectCreateTeamNotice : public ::google::protobuf::Message {
 public:
  CMessageRedirectCreateTeamNotice();
  virtual ~CMessageRedirectCreateTeamNotice();
  
  CMessageRedirectCreateTeamNotice(const CMessageRedirectCreateTeamNotice& from);
  
  inline CMessageRedirectCreateTeamNotice& operator=(const CMessageRedirectCreateTeamNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectCreateTeamNotice& default_instance();
  void Swap(CMessageRedirectCreateTeamNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectCreateTeamNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectCreateTeamNotice& from);
  void MergeFrom(const CMessageRedirectCreateTeamNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 3;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string CharName = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 srccharid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectCreateTeamNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamNotice : public ::google::protobuf::Message {
 public:
  CMessageTeamNotice();
  virtual ~CMessageTeamNotice();
  
  CMessageTeamNotice(const CMessageTeamNotice& from);
  
  inline CMessageTeamNotice& operator=(const CMessageTeamNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamNotice& default_instance();
  void Swap(CMessageTeamNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamNotice& from);
  void MergeFrom(const CMessageTeamNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional string Param2 = 2;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 2;
  inline const ::std::string& param2() const;
  inline void set_param2(const ::std::string& value);
  inline void set_param2(const char* value);
  inline void set_param2(const char* value, size_t size);
  inline ::std::string* mutable_param2();
  
  // optional string Param1 = 3;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 3;
  inline const ::std::string& param1() const;
  inline void set_param1(const ::std::string& value);
  inline void set_param1(const char* value);
  inline void set_param1(const char* value, size_t size);
  inline ::std::string* mutable_param1();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 code_;
  ::std::string* param2_;
  static const ::std::string _default_param2_;
  ::std::string* param1_;
  static const ::std::string _default_param1_;
  friend void  protobuf_AddDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_teammessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_teammessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamNotice* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageCreateTeamSelf

// -------------------------------------------------------------------

// CMessageTeamInvite

// optional uint32 EntityID = 1;
inline bool CMessageTeamInvite::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageTeamInvite::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamInvite::entityid() const {
  return entityid_;
}
inline void CMessageTeamInvite::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamInvite::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamInvite::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamInvite::charid() const {
  return charid_;
}
inline void CMessageTeamInvite::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamInviteRtn

// optional uint32 RtnCode = 1;
inline bool CMessageTeamInviteRtn::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageTeamInviteRtn::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamInviteRtn::rtncode() const {
  return rtncode_;
}
inline void CMessageTeamInviteRtn::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

// optional uint32 InviteID = 2;
inline bool CMessageTeamInviteRtn::has_inviteid() const {
  return _has_bit(1);
}
inline void CMessageTeamInviteRtn::clear_inviteid() {
  inviteid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamInviteRtn::inviteid() const {
  return inviteid_;
}
inline void CMessageTeamInviteRtn::set_inviteid(::google::protobuf::uint32 value) {
  _set_bit(1);
  inviteid_ = value;
}

// optional uint32 InviteEntityID = 3;
inline bool CMessageTeamInviteRtn::has_inviteentityid() const {
  return _has_bit(2);
}
inline void CMessageTeamInviteRtn::clear_inviteentityid() {
  inviteentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamInviteRtn::inviteentityid() const {
  return inviteentityid_;
}
inline void CMessageTeamInviteRtn::set_inviteentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  inviteentityid_ = value;
}

// optional uint32 HeadCharID = 4;
inline bool CMessageTeamInviteRtn::has_headcharid() const {
  return _has_bit(3);
}
inline void CMessageTeamInviteRtn::clear_headcharid() {
  headcharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamInviteRtn::headcharid() const {
  return headcharid_;
}
inline void CMessageTeamInviteRtn::set_headcharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  headcharid_ = value;
}

// optional uint32 TeamID = 5;
inline bool CMessageTeamInviteRtn::has_teamid() const {
  return _has_bit(4);
}
inline void CMessageTeamInviteRtn::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamInviteRtn::teamid() const {
  return teamid_;
}
inline void CMessageTeamInviteRtn::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(4);
  teamid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamInvitedRequestCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamInvitedRequestCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamInvitedRequestCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamInvitedRequestCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamInvitedRequestCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 AccoutID = 2;
inline bool CMessageTeamInvitedRequestCallBack::has_accoutid() const {
  return _has_bit(1);
}
inline void CMessageTeamInvitedRequestCallBack::clear_accoutid() {
  accoutid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::accoutid() const {
  return accoutid_;
}
inline void CMessageTeamInvitedRequestCallBack::set_accoutid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accoutid_ = value;
}

// optional string InviteeName = 3;
inline bool CMessageTeamInvitedRequestCallBack::has_inviteename() const {
  return _has_bit(2);
}
inline void CMessageTeamInvitedRequestCallBack::clear_inviteename() {
  if (inviteename_ != &_default_inviteename_) {
    inviteename_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamInvitedRequestCallBack::inviteename() const {
  return *inviteename_;
}
inline void CMessageTeamInvitedRequestCallBack::set_inviteename(const ::std::string& value) {
  _set_bit(2);
  if (inviteename_ == &_default_inviteename_) {
    inviteename_ = new ::std::string;
  }
  inviteename_->assign(value);
}
inline void CMessageTeamInvitedRequestCallBack::set_inviteename(const char* value) {
  _set_bit(2);
  if (inviteename_ == &_default_inviteename_) {
    inviteename_ = new ::std::string;
  }
  inviteename_->assign(value);
}
inline void CMessageTeamInvitedRequestCallBack::set_inviteename(const char* value, size_t size) {
  _set_bit(2);
  if (inviteename_ == &_default_inviteename_) {
    inviteename_ = new ::std::string;
  }
  inviteename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamInvitedRequestCallBack::mutable_inviteename() {
  _set_bit(2);
  if (inviteename_ == &_default_inviteename_) {
    inviteename_ = new ::std::string;
  }
  return inviteename_;
}

// optional uint32 InviteID = 4;
inline bool CMessageTeamInvitedRequestCallBack::has_inviteid() const {
  return _has_bit(3);
}
inline void CMessageTeamInvitedRequestCallBack::clear_inviteid() {
  inviteid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::inviteid() const {
  return inviteid_;
}
inline void CMessageTeamInvitedRequestCallBack::set_inviteid(::google::protobuf::uint32 value) {
  _set_bit(3);
  inviteid_ = value;
}

// optional uint32 EntityID = 5;
inline bool CMessageTeamInvitedRequestCallBack::has_entityid() const {
  return _has_bit(4);
}
inline void CMessageTeamInvitedRequestCallBack::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::entityid() const {
  return entityid_;
}
inline void CMessageTeamInvitedRequestCallBack::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(4);
  entityid_ = value;
}

// optional uint32 Level = 6;
inline bool CMessageTeamInvitedRequestCallBack::has_level() const {
  return _has_bit(5);
}
inline void CMessageTeamInvitedRequestCallBack::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::level() const {
  return level_;
}
inline void CMessageTeamInvitedRequestCallBack::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// optional string InviteName = 7;
inline bool CMessageTeamInvitedRequestCallBack::has_invitename() const {
  return _has_bit(6);
}
inline void CMessageTeamInvitedRequestCallBack::clear_invitename() {
  if (invitename_ != &_default_invitename_) {
    invitename_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageTeamInvitedRequestCallBack::invitename() const {
  return *invitename_;
}
inline void CMessageTeamInvitedRequestCallBack::set_invitename(const ::std::string& value) {
  _set_bit(6);
  if (invitename_ == &_default_invitename_) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
}
inline void CMessageTeamInvitedRequestCallBack::set_invitename(const char* value) {
  _set_bit(6);
  if (invitename_ == &_default_invitename_) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(value);
}
inline void CMessageTeamInvitedRequestCallBack::set_invitename(const char* value, size_t size) {
  _set_bit(6);
  if (invitename_ == &_default_invitename_) {
    invitename_ = new ::std::string;
  }
  invitename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamInvitedRequestCallBack::mutable_invitename() {
  _set_bit(6);
  if (invitename_ == &_default_invitename_) {
    invitename_ = new ::std::string;
  }
  return invitename_;
}

// optional uint32 Nationality = 8;
inline bool CMessageTeamInvitedRequestCallBack::has_nationality() const {
  return _has_bit(7);
}
inline void CMessageTeamInvitedRequestCallBack::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::nationality() const {
  return nationality_;
}
inline void CMessageTeamInvitedRequestCallBack::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(7);
  nationality_ = value;
}

// optional uint32 InviteeID = 9;
inline bool CMessageTeamInvitedRequestCallBack::has_inviteeid() const {
  return _has_bit(8);
}
inline void CMessageTeamInvitedRequestCallBack::clear_inviteeid() {
  inviteeid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::inviteeid() const {
  return inviteeid_;
}
inline void CMessageTeamInvitedRequestCallBack::set_inviteeid(::google::protobuf::uint32 value) {
  _set_bit(8);
  inviteeid_ = value;
}

// optional uint32 Sex = 10;
inline bool CMessageTeamInvitedRequestCallBack::has_sex() const {
  return _has_bit(9);
}
inline void CMessageTeamInvitedRequestCallBack::clear_sex() {
  sex_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::sex() const {
  return sex_;
}
inline void CMessageTeamInvitedRequestCallBack::set_sex(::google::protobuf::uint32 value) {
  _set_bit(9);
  sex_ = value;
}

// optional uint32 Metier = 11;
inline bool CMessageTeamInvitedRequestCallBack::has_metier() const {
  return _has_bit(10);
}
inline void CMessageTeamInvitedRequestCallBack::clear_metier() {
  metier_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::metier() const {
  return metier_;
}
inline void CMessageTeamInvitedRequestCallBack::set_metier(::google::protobuf::uint32 value) {
  _set_bit(10);
  metier_ = value;
}

// optional uint32 Face = 12;
inline bool CMessageTeamInvitedRequestCallBack::has_face() const {
  return _has_bit(11);
}
inline void CMessageTeamInvitedRequestCallBack::clear_face() {
  face_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageTeamInvitedRequestCallBack::face() const {
  return face_;
}
inline void CMessageTeamInvitedRequestCallBack::set_face(::google::protobuf::uint32 value) {
  _set_bit(11);
  face_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamSearch

// -------------------------------------------------------------------

// CMessageTeamRequest

// optional uint32 EntityID = 1;
inline bool CMessageTeamRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageTeamRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamRequest::entityid() const {
  return entityid_;
}
inline void CMessageTeamRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamRequest::charid() const {
  return charid_;
}
inline void CMessageTeamRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamRequestRtn

// optional uint32 CharID = 1;
inline bool CMessageTeamRequestRtn::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamRequestRtn::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamRequestRtn::charid() const {
  return charid_;
}
inline void CMessageTeamRequestRtn::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 EntityID = 2;
inline bool CMessageTeamRequestRtn::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageTeamRequestRtn::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamRequestRtn::entityid() const {
  return entityid_;
}
inline void CMessageTeamRequestRtn::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 Code = 3;
inline bool CMessageTeamRequestRtn::has_code() const {
  return _has_bit(2);
}
inline void CMessageTeamRequestRtn::clear_code() {
  code_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamRequestRtn::code() const {
  return code_;
}
inline void CMessageTeamRequestRtn::set_code(::google::protobuf::uint32 value) {
  _set_bit(2);
  code_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageTeamRequestRtn::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageTeamRequestRtn::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamRequestRtn::accountid() const {
  return accountid_;
}
inline void CMessageTeamRequestRtn::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamLeave

// -------------------------------------------------------------------

// CMessageTeamNewHead

// optional uint32 CharID = 1;
inline bool CMessageTeamNewHead::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamNewHead::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamNewHead::charid() const {
  return charid_;
}
inline void CMessageTeamNewHead::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 EntityID = 2;
inline bool CMessageTeamNewHead::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageTeamNewHead::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamNewHead::entityid() const {
  return entityid_;
}
inline void CMessageTeamNewHead::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamTick

// optional uint32 EntityID = 1;
inline bool CMessageTeamTick::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageTeamTick::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamTick::entityid() const {
  return entityid_;
}
inline void CMessageTeamTick::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamTick::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamTick::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamTick::charid() const {
  return charid_;
}
inline void CMessageTeamTick::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamEnd

// -------------------------------------------------------------------

// CMessageTeamRequestPlayerCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamRequestPlayerCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamRequestPlayerCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamRequestPlayerCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamRequestPlayerCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 EntityID = 2;
inline bool CMessageTeamRequestPlayerCallBack::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageTeamRequestPlayerCallBack::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::entityid() const {
  return entityid_;
}
inline void CMessageTeamRequestPlayerCallBack::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 Face = 3;
inline bool CMessageTeamRequestPlayerCallBack::has_face() const {
  return _has_bit(2);
}
inline void CMessageTeamRequestPlayerCallBack::clear_face() {
  face_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::face() const {
  return face_;
}
inline void CMessageTeamRequestPlayerCallBack::set_face(::google::protobuf::uint32 value) {
  _set_bit(2);
  face_ = value;
}

// optional uint32 Nationality = 4;
inline bool CMessageTeamRequestPlayerCallBack::has_nationality() const {
  return _has_bit(3);
}
inline void CMessageTeamRequestPlayerCallBack::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::nationality() const {
  return nationality_;
}
inline void CMessageTeamRequestPlayerCallBack::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(3);
  nationality_ = value;
}

// optional string Name = 5;
inline bool CMessageTeamRequestPlayerCallBack::has_name() const {
  return _has_bit(4);
}
inline void CMessageTeamRequestPlayerCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageTeamRequestPlayerCallBack::name() const {
  return *name_;
}
inline void CMessageTeamRequestPlayerCallBack::set_name(const ::std::string& value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamRequestPlayerCallBack::set_name(const char* value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamRequestPlayerCallBack::set_name(const char* value, size_t size) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamRequestPlayerCallBack::mutable_name() {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 AccoutID = 6;
inline bool CMessageTeamRequestPlayerCallBack::has_accoutid() const {
  return _has_bit(5);
}
inline void CMessageTeamRequestPlayerCallBack::clear_accoutid() {
  accoutid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::accoutid() const {
  return accoutid_;
}
inline void CMessageTeamRequestPlayerCallBack::set_accoutid(::google::protobuf::uint32 value) {
  _set_bit(5);
  accoutid_ = value;
}

// optional uint32 Level = 7;
inline bool CMessageTeamRequestPlayerCallBack::has_level() const {
  return _has_bit(6);
}
inline void CMessageTeamRequestPlayerCallBack::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::level() const {
  return level_;
}
inline void CMessageTeamRequestPlayerCallBack::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 Sex = 8;
inline bool CMessageTeamRequestPlayerCallBack::has_sex() const {
  return _has_bit(7);
}
inline void CMessageTeamRequestPlayerCallBack::clear_sex() {
  sex_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::sex() const {
  return sex_;
}
inline void CMessageTeamRequestPlayerCallBack::set_sex(::google::protobuf::uint32 value) {
  _set_bit(7);
  sex_ = value;
}

// optional uint32 Metier = 9;
inline bool CMessageTeamRequestPlayerCallBack::has_metier() const {
  return _has_bit(8);
}
inline void CMessageTeamRequestPlayerCallBack::clear_metier() {
  metier_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::metier() const {
  return metier_;
}
inline void CMessageTeamRequestPlayerCallBack::set_metier(::google::protobuf::uint32 value) {
  _set_bit(8);
  metier_ = value;
}

// optional uint32 CharID = 10;
inline bool CMessageTeamRequestPlayerCallBack::has_charid() const {
  return _has_bit(9);
}
inline void CMessageTeamRequestPlayerCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageTeamRequestPlayerCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamRequestPlayerCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(9);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamNotifyCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamNotifyCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamNotifyCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamNotifyCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamNotifyCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 Code = 2;
inline bool CMessageTeamNotifyCallBack::has_code() const {
  return _has_bit(1);
}
inline void CMessageTeamNotifyCallBack::clear_code() {
  code_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamNotifyCallBack::code() const {
  return code_;
}
inline void CMessageTeamNotifyCallBack::set_code(::google::protobuf::uint32 value) {
  _set_bit(1);
  code_ = value;
}

// optional .PBMember Member = 3;
inline bool CMessageTeamNotifyCallBack::has_member() const {
  return _has_bit(2);
}
inline void CMessageTeamNotifyCallBack::clear_member() {
  if (member_ != NULL) member_->::PBMember::Clear();
  _clear_bit(2);
}
inline const ::PBMember& CMessageTeamNotifyCallBack::member() const {
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::PBMember* CMessageTeamNotifyCallBack::mutable_member() {
  _set_bit(2);
  if (member_ == NULL) member_ = new ::PBMember;
  return member_;
}

// -------------------------------------------------------------------

// CMessageTeamCallBack

// optional string HeaderName = 1;
inline bool CMessageTeamCallBack::has_headername() const {
  return _has_bit(0);
}
inline void CMessageTeamCallBack::clear_headername() {
  if (headername_ != &_default_headername_) {
    headername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTeamCallBack::headername() const {
  return *headername_;
}
inline void CMessageTeamCallBack::set_headername(const ::std::string& value) {
  _set_bit(0);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamCallBack::set_headername(const char* value) {
  _set_bit(0);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamCallBack::set_headername(const char* value, size_t size) {
  _set_bit(0);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamCallBack::mutable_headername() {
  _set_bit(0);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  return headername_;
}

// optional uint32 Count = 2;
inline bool CMessageTeamCallBack::has_count() const {
  return _has_bit(1);
}
inline void CMessageTeamCallBack::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamCallBack::count() const {
  return count_;
}
inline void CMessageTeamCallBack::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// optional string Buff = 3;
inline bool CMessageTeamCallBack::has_buff() const {
  return _has_bit(2);
}
inline void CMessageTeamCallBack::clear_buff() {
  if (buff_ != &_default_buff_) {
    buff_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamCallBack::buff() const {
  return *buff_;
}
inline void CMessageTeamCallBack::set_buff(const ::std::string& value) {
  _set_bit(2);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void CMessageTeamCallBack::set_buff(const char* value) {
  _set_bit(2);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void CMessageTeamCallBack::set_buff(const char* value, size_t size) {
  _set_bit(2);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamCallBack::mutable_buff() {
  _set_bit(2);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  return buff_;
}

// optional uint32 HeadEtyID = 4;
inline bool CMessageTeamCallBack::has_headetyid() const {
  return _has_bit(3);
}
inline void CMessageTeamCallBack::clear_headetyid() {
  headetyid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamCallBack::headetyid() const {
  return headetyid_;
}
inline void CMessageTeamCallBack::set_headetyid(::google::protobuf::uint32 value) {
  _set_bit(3);
  headetyid_ = value;
}

// repeated .PBMember Member = 5;
inline int CMessageTeamCallBack::member_size() const {
  return member_.size();
}
inline void CMessageTeamCallBack::clear_member() {
  member_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMember >&
CMessageTeamCallBack::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMember >*
CMessageTeamCallBack::mutable_member() {
  return &member_;
}
inline const ::PBMember& CMessageTeamCallBack::member(int index) const {
  return member_.Get(index);
}
inline ::PBMember* CMessageTeamCallBack::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBMember* CMessageTeamCallBack::add_member() {
  return member_.Add();
}

// optional uint32 BuffSize = 6;
inline bool CMessageTeamCallBack::has_buffsize() const {
  return _has_bit(5);
}
inline void CMessageTeamCallBack::clear_buffsize() {
  buffsize_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamCallBack::buffsize() const {
  return buffsize_;
}
inline void CMessageTeamCallBack::set_buffsize(::google::protobuf::uint32 value) {
  _set_bit(5);
  buffsize_ = value;
}

// optional uint32 Distribute = 7;
inline bool CMessageTeamCallBack::has_distribute() const {
  return _has_bit(6);
}
inline void CMessageTeamCallBack::clear_distribute() {
  distribute_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamCallBack::distribute() const {
  return distribute_;
}
inline void CMessageTeamCallBack::set_distribute(::google::protobuf::uint32 value) {
  _set_bit(6);
  distribute_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamEndCallBack

// -------------------------------------------------------------------

// CMessageTeamInviteAskCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamInviteAskCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamInviteAskCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamInviteAskCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamInviteAskCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 Count = 2;
inline bool CMessageTeamInviteAskCallBack::has_count() const {
  return _has_bit(1);
}
inline void CMessageTeamInviteAskCallBack::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::count() const {
  return count_;
}
inline void CMessageTeamInviteAskCallBack::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// optional string HeadName = 3;
inline bool CMessageTeamInviteAskCallBack::has_headname() const {
  return _has_bit(2);
}
inline void CMessageTeamInviteAskCallBack::clear_headname() {
  if (headname_ != &_default_headname_) {
    headname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamInviteAskCallBack::headname() const {
  return *headname_;
}
inline void CMessageTeamInviteAskCallBack::set_headname(const ::std::string& value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_headname(const char* value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_headname(const char* value, size_t size) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamInviteAskCallBack::mutable_headname() {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  return headname_;
}

// optional string Name = 4;
inline bool CMessageTeamInviteAskCallBack::has_name() const {
  return _has_bit(3);
}
inline void CMessageTeamInviteAskCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageTeamInviteAskCallBack::name() const {
  return *name_;
}
inline void CMessageTeamInviteAskCallBack::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamInviteAskCallBack::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Nationality = 5;
inline bool CMessageTeamInviteAskCallBack::has_nationality() const {
  return _has_bit(4);
}
inline void CMessageTeamInviteAskCallBack::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::nationality() const {
  return nationality_;
}
inline void CMessageTeamInviteAskCallBack::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(4);
  nationality_ = value;
}

// repeated .PBMember Member = 6;
inline int CMessageTeamInviteAskCallBack::member_size() const {
  return member_.size();
}
inline void CMessageTeamInviteAskCallBack::clear_member() {
  member_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMember >&
CMessageTeamInviteAskCallBack::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMember >*
CMessageTeamInviteAskCallBack::mutable_member() {
  return &member_;
}
inline const ::PBMember& CMessageTeamInviteAskCallBack::member(int index) const {
  return member_.Get(index);
}
inline ::PBMember* CMessageTeamInviteAskCallBack::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBMember* CMessageTeamInviteAskCallBack::add_member() {
  return member_.Add();
}

// optional uint32 BuffLen = 7;
inline bool CMessageTeamInviteAskCallBack::has_bufflen() const {
  return _has_bit(6);
}
inline void CMessageTeamInviteAskCallBack::clear_bufflen() {
  bufflen_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::bufflen() const {
  return bufflen_;
}
inline void CMessageTeamInviteAskCallBack::set_bufflen(::google::protobuf::uint32 value) {
  _set_bit(6);
  bufflen_ = value;
}

// optional uint32 CharID = 8;
inline bool CMessageTeamInviteAskCallBack::has_charid() const {
  return _has_bit(7);
}
inline void CMessageTeamInviteAskCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamInviteAskCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(7);
  charid_ = value;
}

// optional uint32 EntityID = 9;
inline bool CMessageTeamInviteAskCallBack::has_entityid() const {
  return _has_bit(8);
}
inline void CMessageTeamInviteAskCallBack::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::entityid() const {
  return entityid_;
}
inline void CMessageTeamInviteAskCallBack::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(8);
  entityid_ = value;
}

// optional uint32 TeamID = 10;
inline bool CMessageTeamInviteAskCallBack::has_teamid() const {
  return _has_bit(9);
}
inline void CMessageTeamInviteAskCallBack::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::teamid() const {
  return teamid_;
}
inline void CMessageTeamInviteAskCallBack::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(9);
  teamid_ = value;
}

// optional uint32 Distribute = 11;
inline bool CMessageTeamInviteAskCallBack::has_distribute() const {
  return _has_bit(10);
}
inline void CMessageTeamInviteAskCallBack::clear_distribute() {
  distribute_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageTeamInviteAskCallBack::distribute() const {
  return distribute_;
}
inline void CMessageTeamInviteAskCallBack::set_distribute(::google::protobuf::uint32 value) {
  _set_bit(10);
  distribute_ = value;
}

// optional string Buff = 12;
inline bool CMessageTeamInviteAskCallBack::has_buff() const {
  return _has_bit(11);
}
inline void CMessageTeamInviteAskCallBack::clear_buff() {
  if (buff_ != &_default_buff_) {
    buff_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& CMessageTeamInviteAskCallBack::buff() const {
  return *buff_;
}
inline void CMessageTeamInviteAskCallBack::set_buff(const ::std::string& value) {
  _set_bit(11);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_buff(const char* value) {
  _set_bit(11);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(value);
}
inline void CMessageTeamInviteAskCallBack::set_buff(const char* value, size_t size) {
  _set_bit(11);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  buff_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamInviteAskCallBack::mutable_buff() {
  _set_bit(11);
  if (buff_ == &_default_buff_) {
    buff_ = new ::std::string;
  }
  return buff_;
}

// -------------------------------------------------------------------

// CMessageTeamTickCallBack

// optional string Name = 1;
inline bool CMessageTeamTickCallBack::has_name() const {
  return _has_bit(0);
}
inline void CMessageTeamTickCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTeamTickCallBack::name() const {
  return *name_;
}
inline void CMessageTeamTickCallBack::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamTickCallBack::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamTickCallBack::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamTickCallBack::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamTickCallBack::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamTickCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamTickCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamTickCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageTeamTickCallBack::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageTeamTickCallBack::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamTickCallBack::entityid() const {
  return entityid_;
}
inline void CMessageTeamTickCallBack::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamErrMsgCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamErrMsgCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamErrMsgCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamErrMsgCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamErrMsgCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional string Name = 2;
inline bool CMessageTeamErrMsgCallBack::has_name() const {
  return _has_bit(1);
}
inline void CMessageTeamErrMsgCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamErrMsgCallBack::name() const {
  return *name_;
}
inline void CMessageTeamErrMsgCallBack::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamErrMsgCallBack::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamErrMsgCallBack::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamErrMsgCallBack::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Code = 3;
inline bool CMessageTeamErrMsgCallBack::has_code() const {
  return _has_bit(2);
}
inline void CMessageTeamErrMsgCallBack::clear_code() {
  code_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamErrMsgCallBack::code() const {
  return code_;
}
inline void CMessageTeamErrMsgCallBack::set_code(::google::protobuf::uint32 value) {
  _set_bit(2);
  code_ = value;
}

// optional uint32 CharID = 4;
inline bool CMessageTeamErrMsgCallBack::has_charid() const {
  return _has_bit(3);
}
inline void CMessageTeamErrMsgCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamErrMsgCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamErrMsgCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamAskTeamMsg

// optional uint32 ConscribeType = 1;
inline bool CMessageTeamAskTeamMsg::has_conscribetype() const {
  return _has_bit(0);
}
inline void CMessageTeamAskTeamMsg::clear_conscribetype() {
  conscribetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamMsg::conscribetype() const {
  return conscribetype_;
}
inline void CMessageTeamAskTeamMsg::set_conscribetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  conscribetype_ = value;
}

// optional uint32 SubType = 2;
inline bool CMessageTeamAskTeamMsg::has_subtype() const {
  return _has_bit(1);
}
inline void CMessageTeamAskTeamMsg::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamMsg::subtype() const {
  return subtype_;
}
inline void CMessageTeamAskTeamMsg::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  subtype_ = value;
}

// optional string Msg = 3;
inline bool CMessageTeamAskTeamMsg::has_msg() const {
  return _has_bit(2);
}
inline void CMessageTeamAskTeamMsg::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamAskTeamMsg::msg() const {
  return *msg_;
}
inline void CMessageTeamAskTeamMsg::set_msg(const ::std::string& value) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamAskTeamMsg::set_msg(const char* value) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamAskTeamMsg::set_msg(const char* value, size_t size) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamAskTeamMsg::mutable_msg() {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// -------------------------------------------------------------------

// CMessageTeamAskTeamCallBack

// optional string Msg = 1;
inline bool CMessageTeamAskTeamCallBack::has_msg() const {
  return _has_bit(0);
}
inline void CMessageTeamAskTeamCallBack::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTeamAskTeamCallBack::msg() const {
  return *msg_;
}
inline void CMessageTeamAskTeamCallBack::set_msg(const ::std::string& value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamAskTeamCallBack::set_msg(const char* value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamAskTeamCallBack::set_msg(const char* value, size_t size) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamAskTeamCallBack::mutable_msg() {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// optional string Name = 2;
inline bool CMessageTeamAskTeamCallBack::has_name() const {
  return _has_bit(1);
}
inline void CMessageTeamAskTeamCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamAskTeamCallBack::name() const {
  return *name_;
}
inline void CMessageTeamAskTeamCallBack::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamAskTeamCallBack::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamAskTeamCallBack::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamAskTeamCallBack::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Level = 3;
inline bool CMessageTeamAskTeamCallBack::has_level() const {
  return _has_bit(2);
}
inline void CMessageTeamAskTeamCallBack::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamCallBack::level() const {
  return level_;
}
inline void CMessageTeamAskTeamCallBack::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 SubType = 4;
inline bool CMessageTeamAskTeamCallBack::has_subtype() const {
  return _has_bit(3);
}
inline void CMessageTeamAskTeamCallBack::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamCallBack::subtype() const {
  return subtype_;
}
inline void CMessageTeamAskTeamCallBack::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(3);
  subtype_ = value;
}

// optional uint32 Metier = 5;
inline bool CMessageTeamAskTeamCallBack::has_metier() const {
  return _has_bit(4);
}
inline void CMessageTeamAskTeamCallBack::clear_metier() {
  metier_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamCallBack::metier() const {
  return metier_;
}
inline void CMessageTeamAskTeamCallBack::set_metier(::google::protobuf::uint32 value) {
  _set_bit(4);
  metier_ = value;
}

// optional uint32 ConscribeType = 6;
inline bool CMessageTeamAskTeamCallBack::has_conscribetype() const {
  return _has_bit(5);
}
inline void CMessageTeamAskTeamCallBack::clear_conscribetype() {
  conscribetype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamAskTeamCallBack::conscribetype() const {
  return conscribetype_;
}
inline void CMessageTeamAskTeamCallBack::set_conscribetype(::google::protobuf::uint32 value) {
  _set_bit(5);
  conscribetype_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamConscribeMsg

// optional uint32 ConscribeType = 1;
inline bool CMessageTeamConscribeMsg::has_conscribetype() const {
  return _has_bit(0);
}
inline void CMessageTeamConscribeMsg::clear_conscribetype() {
  conscribetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeMsg::conscribetype() const {
  return conscribetype_;
}
inline void CMessageTeamConscribeMsg::set_conscribetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  conscribetype_ = value;
}

// optional uint32 SubType = 2;
inline bool CMessageTeamConscribeMsg::has_subtype() const {
  return _has_bit(1);
}
inline void CMessageTeamConscribeMsg::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeMsg::subtype() const {
  return subtype_;
}
inline void CMessageTeamConscribeMsg::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  subtype_ = value;
}

// optional uint32 MaxLevel = 3;
inline bool CMessageTeamConscribeMsg::has_maxlevel() const {
  return _has_bit(2);
}
inline void CMessageTeamConscribeMsg::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeMsg::maxlevel() const {
  return maxlevel_;
}
inline void CMessageTeamConscribeMsg::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  maxlevel_ = value;
}

// optional string Msg = 4;
inline bool CMessageTeamConscribeMsg::has_msg() const {
  return _has_bit(3);
}
inline void CMessageTeamConscribeMsg::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageTeamConscribeMsg::msg() const {
  return *msg_;
}
inline void CMessageTeamConscribeMsg::set_msg(const ::std::string& value) {
  _set_bit(3);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamConscribeMsg::set_msg(const char* value) {
  _set_bit(3);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamConscribeMsg::set_msg(const char* value, size_t size) {
  _set_bit(3);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamConscribeMsg::mutable_msg() {
  _set_bit(3);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// optional uint32 MinLevel = 5;
inline bool CMessageTeamConscribeMsg::has_minlevel() const {
  return _has_bit(4);
}
inline void CMessageTeamConscribeMsg::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeMsg::minlevel() const {
  return minlevel_;
}
inline void CMessageTeamConscribeMsg::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  minlevel_ = value;
}

// optional uint32 Metier = 6;
inline bool CMessageTeamConscribeMsg::has_metier() const {
  return _has_bit(5);
}
inline void CMessageTeamConscribeMsg::clear_metier() {
  metier_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeMsg::metier() const {
  return metier_;
}
inline void CMessageTeamConscribeMsg::set_metier(::google::protobuf::uint32 value) {
  _set_bit(5);
  metier_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamConscribeCallBack

// optional uint32 MaxLevel = 1;
inline bool CMessageTeamConscribeCallBack::has_maxlevel() const {
  return _has_bit(0);
}
inline void CMessageTeamConscribeCallBack::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::maxlevel() const {
  return maxlevel_;
}
inline void CMessageTeamConscribeCallBack::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(0);
  maxlevel_ = value;
}

// optional uint32 Metier = 2;
inline bool CMessageTeamConscribeCallBack::has_metier() const {
  return _has_bit(1);
}
inline void CMessageTeamConscribeCallBack::clear_metier() {
  metier_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::metier() const {
  return metier_;
}
inline void CMessageTeamConscribeCallBack::set_metier(::google::protobuf::uint32 value) {
  _set_bit(1);
  metier_ = value;
}

// optional string Msg = 3;
inline bool CMessageTeamConscribeCallBack::has_msg() const {
  return _has_bit(2);
}
inline void CMessageTeamConscribeCallBack::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamConscribeCallBack::msg() const {
  return *msg_;
}
inline void CMessageTeamConscribeCallBack::set_msg(const ::std::string& value) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamConscribeCallBack::set_msg(const char* value) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageTeamConscribeCallBack::set_msg(const char* value, size_t size) {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamConscribeCallBack::mutable_msg() {
  _set_bit(2);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// optional uint32 Count = 4;
inline bool CMessageTeamConscribeCallBack::has_count() const {
  return _has_bit(3);
}
inline void CMessageTeamConscribeCallBack::clear_count() {
  count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::count() const {
  return count_;
}
inline void CMessageTeamConscribeCallBack::set_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  count_ = value;
}

// optional uint32 MinLevel = 5;
inline bool CMessageTeamConscribeCallBack::has_minlevel() const {
  return _has_bit(4);
}
inline void CMessageTeamConscribeCallBack::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::minlevel() const {
  return minlevel_;
}
inline void CMessageTeamConscribeCallBack::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  minlevel_ = value;
}

// optional uint32 ConscribeType = 6;
inline bool CMessageTeamConscribeCallBack::has_conscribetype() const {
  return _has_bit(5);
}
inline void CMessageTeamConscribeCallBack::clear_conscribetype() {
  conscribetype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::conscribetype() const {
  return conscribetype_;
}
inline void CMessageTeamConscribeCallBack::set_conscribetype(::google::protobuf::uint32 value) {
  _set_bit(5);
  conscribetype_ = value;
}

// optional uint32 SubType = 7;
inline bool CMessageTeamConscribeCallBack::has_subtype() const {
  return _has_bit(6);
}
inline void CMessageTeamConscribeCallBack::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamConscribeCallBack::subtype() const {
  return subtype_;
}
inline void CMessageTeamConscribeCallBack::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(6);
  subtype_ = value;
}

// optional string HeaderName = 8;
inline bool CMessageTeamConscribeCallBack::has_headername() const {
  return _has_bit(7);
}
inline void CMessageTeamConscribeCallBack::clear_headername() {
  if (headername_ != &_default_headername_) {
    headername_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageTeamConscribeCallBack::headername() const {
  return *headername_;
}
inline void CMessageTeamConscribeCallBack::set_headername(const ::std::string& value) {
  _set_bit(7);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamConscribeCallBack::set_headername(const char* value) {
  _set_bit(7);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamConscribeCallBack::set_headername(const char* value, size_t size) {
  _set_bit(7);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamConscribeCallBack::mutable_headername() {
  _set_bit(7);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  return headername_;
}

// -------------------------------------------------------------------

// CMessageTeamPropertyNotifyCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamPropertyNotifyCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamPropertyNotifyCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamPropertyNotifyCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamPropertyNotifyCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// repeated .PBMember ItemPro = 2;
inline int CMessageTeamPropertyNotifyCallBack::itempro_size() const {
  return itempro_.size();
}
inline void CMessageTeamPropertyNotifyCallBack::clear_itempro() {
  itempro_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMember >&
CMessageTeamPropertyNotifyCallBack::itempro() const {
  return itempro_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMember >*
CMessageTeamPropertyNotifyCallBack::mutable_itempro() {
  return &itempro_;
}
inline const ::PBMember& CMessageTeamPropertyNotifyCallBack::itempro(int index) const {
  return itempro_.Get(index);
}
inline ::PBMember* CMessageTeamPropertyNotifyCallBack::mutable_itempro(int index) {
  return itempro_.Mutable(index);
}
inline ::PBMember* CMessageTeamPropertyNotifyCallBack::add_itempro() {
  return itempro_.Add();
}

// optional uint32 ItemSize = 3;
inline bool CMessageTeamPropertyNotifyCallBack::has_itemsize() const {
  return _has_bit(2);
}
inline void CMessageTeamPropertyNotifyCallBack::clear_itemsize() {
  itemsize_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamPropertyNotifyCallBack::itemsize() const {
  return itemsize_;
}
inline void CMessageTeamPropertyNotifyCallBack::set_itemsize(::google::protobuf::uint32 value) {
  _set_bit(2);
  itemsize_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamChangeDistribute

// optional uint32 Distribute = 1;
inline bool CMessageTeamChangeDistribute::has_distribute() const {
  return _has_bit(0);
}
inline void CMessageTeamChangeDistribute::clear_distribute() {
  distribute_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamChangeDistribute::distribute() const {
  return distribute_;
}
inline void CMessageTeamChangeDistribute::set_distribute(::google::protobuf::uint32 value) {
  _set_bit(0);
  distribute_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamChangeDistributeCallBack

// optional uint32 Distribute = 1;
inline bool CMessageTeamChangeDistributeCallBack::has_distribute() const {
  return _has_bit(0);
}
inline void CMessageTeamChangeDistributeCallBack::clear_distribute() {
  distribute_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamChangeDistributeCallBack::distribute() const {
  return distribute_;
}
inline void CMessageTeamChangeDistributeCallBack::set_distribute(::google::protobuf::uint32 value) {
  _set_bit(0);
  distribute_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamNotifyBuffCallBack

// optional uint32 IsAdd = 1;
inline bool CMessageTeamNotifyBuffCallBack::has_isadd() const {
  return _has_bit(0);
}
inline void CMessageTeamNotifyBuffCallBack::clear_isadd() {
  isadd_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamNotifyBuffCallBack::isadd() const {
  return isadd_;
}
inline void CMessageTeamNotifyBuffCallBack::set_isadd(::google::protobuf::uint32 value) {
  _set_bit(0);
  isadd_ = value;
}

// optional string Name = 2;
inline bool CMessageTeamNotifyBuffCallBack::has_name() const {
  return _has_bit(1);
}
inline void CMessageTeamNotifyBuffCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamNotifyBuffCallBack::name() const {
  return *name_;
}
inline void CMessageTeamNotifyBuffCallBack::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamNotifyBuffCallBack::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamNotifyBuffCallBack::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamNotifyBuffCallBack::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 3;
inline bool CMessageTeamNotifyBuffCallBack::has_charid() const {
  return _has_bit(2);
}
inline void CMessageTeamNotifyBuffCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamNotifyBuffCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamNotifyBuffCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 BuffID = 4;
inline bool CMessageTeamNotifyBuffCallBack::has_buffid() const {
  return _has_bit(3);
}
inline void CMessageTeamNotifyBuffCallBack::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamNotifyBuffCallBack::buffid() const {
  return buffid_;
}
inline void CMessageTeamNotifyBuffCallBack::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(3);
  buffid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamBuffCallBack

// optional uint32 BuffSize = 1;
inline bool CMessageTeamBuffCallBack::has_buffsize() const {
  return _has_bit(0);
}
inline void CMessageTeamBuffCallBack::clear_buffsize() {
  buffsize_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamBuffCallBack::buffsize() const {
  return buffsize_;
}
inline void CMessageTeamBuffCallBack::set_buffsize(::google::protobuf::uint32 value) {
  _set_bit(0);
  buffsize_ = value;
}

// optional string BuffList = 2;
inline bool CMessageTeamBuffCallBack::has_bufflist() const {
  return _has_bit(1);
}
inline void CMessageTeamBuffCallBack::clear_bufflist() {
  if (bufflist_ != &_default_bufflist_) {
    bufflist_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamBuffCallBack::bufflist() const {
  return *bufflist_;
}
inline void CMessageTeamBuffCallBack::set_bufflist(const ::std::string& value) {
  _set_bit(1);
  if (bufflist_ == &_default_bufflist_) {
    bufflist_ = new ::std::string;
  }
  bufflist_->assign(value);
}
inline void CMessageTeamBuffCallBack::set_bufflist(const char* value) {
  _set_bit(1);
  if (bufflist_ == &_default_bufflist_) {
    bufflist_ = new ::std::string;
  }
  bufflist_->assign(value);
}
inline void CMessageTeamBuffCallBack::set_bufflist(const char* value, size_t size) {
  _set_bit(1);
  if (bufflist_ == &_default_bufflist_) {
    bufflist_ = new ::std::string;
  }
  bufflist_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamBuffCallBack::mutable_bufflist() {
  _set_bit(1);
  if (bufflist_ == &_default_bufflist_) {
    bufflist_ = new ::std::string;
  }
  return bufflist_;
}

// optional string Name = 3;
inline bool CMessageTeamBuffCallBack::has_name() const {
  return _has_bit(2);
}
inline void CMessageTeamBuffCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamBuffCallBack::name() const {
  return *name_;
}
inline void CMessageTeamBuffCallBack::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamBuffCallBack::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamBuffCallBack::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamBuffCallBack::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 4;
inline bool CMessageTeamBuffCallBack::has_charid() const {
  return _has_bit(3);
}
inline void CMessageTeamBuffCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamBuffCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamBuffCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// optional uint32 BuffCount = 5;
inline bool CMessageTeamBuffCallBack::has_buffcount() const {
  return _has_bit(4);
}
inline void CMessageTeamBuffCallBack::clear_buffcount() {
  buffcount_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamBuffCallBack::buffcount() const {
  return buffcount_;
}
inline void CMessageTeamBuffCallBack::set_buffcount(::google::protobuf::uint32 value) {
  _set_bit(4);
  buffcount_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamClearRequestList

// optional uint32 CharID = 1;
inline bool CMessageTeamClearRequestList::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamClearRequestList::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamClearRequestList::charid() const {
  return charid_;
}
inline void CMessageTeamClearRequestList::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamClearInviteList

// optional uint32 CharID = 1;
inline bool CMessageTeamClearInviteList::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamClearInviteList::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamClearInviteList::charid() const {
  return charid_;
}
inline void CMessageTeamClearInviteList::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamClearRequestCallBack

// optional uint32 CharID = 1;
inline bool CMessageTeamClearRequestCallBack::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamClearRequestCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamClearRequestCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamClearRequestCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamClearInviteCallBack

// optional uint32 CharID = 1;
inline bool CMessageTeamClearInviteCallBack::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamClearInviteCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamClearInviteCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamClearInviteCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamSearchMsg

// optional uint32 ConscibeType = 1;
inline bool CMessageTeamSearchMsg::has_conscibetype() const {
  return _has_bit(0);
}
inline void CMessageTeamSearchMsg::clear_conscibetype() {
  conscibetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsg::conscibetype() const {
  return conscibetype_;
}
inline void CMessageTeamSearchMsg::set_conscibetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  conscibetype_ = value;
}

// optional uint32 SubType = 2;
inline bool CMessageTeamSearchMsg::has_subtype() const {
  return _has_bit(1);
}
inline void CMessageTeamSearchMsg::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsg::subtype() const {
  return subtype_;
}
inline void CMessageTeamSearchMsg::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  subtype_ = value;
}

// optional uint32 PageIndex = 3;
inline bool CMessageTeamSearchMsg::has_pageindex() const {
  return _has_bit(2);
}
inline void CMessageTeamSearchMsg::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsg::pageindex() const {
  return pageindex_;
}
inline void CMessageTeamSearchMsg::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  pageindex_ = value;
}

// optional uint32 MsgType = 4;
inline bool CMessageTeamSearchMsg::has_msgtype() const {
  return _has_bit(3);
}
inline void CMessageTeamSearchMsg::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsg::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamSearchMsg::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(3);
  msgtype_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamSearchMsgCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamSearchMsgCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamSearchMsgCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamSearchMsgCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamSearchMsgCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 TotalPage = 2;
inline bool CMessageTeamSearchMsgCallBack::has_totalpage() const {
  return _has_bit(1);
}
inline void CMessageTeamSearchMsgCallBack::clear_totalpage() {
  totalpage_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::totalpage() const {
  return totalpage_;
}
inline void CMessageTeamSearchMsgCallBack::set_totalpage(::google::protobuf::uint32 value) {
  _set_bit(1);
  totalpage_ = value;
}

// optional bytes MsgBuff = 3;
inline bool CMessageTeamSearchMsgCallBack::has_msgbuff() const {
  return _has_bit(2);
}
inline void CMessageTeamSearchMsgCallBack::clear_msgbuff() {
  if (msgbuff_ != &_default_msgbuff_) {
    msgbuff_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamSearchMsgCallBack::msgbuff() const {
  return *msgbuff_;
}
inline void CMessageTeamSearchMsgCallBack::set_msgbuff(const ::std::string& value) {
  _set_bit(2);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(value);
}
inline void CMessageTeamSearchMsgCallBack::set_msgbuff(const char* value) {
  _set_bit(2);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(value);
}
inline void CMessageTeamSearchMsgCallBack::set_msgbuff(const void* value, size_t size) {
  _set_bit(2);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamSearchMsgCallBack::mutable_msgbuff() {
  _set_bit(2);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  return msgbuff_;
}

// optional uint32 MsgSize = 4;
inline bool CMessageTeamSearchMsgCallBack::has_msgsize() const {
  return _has_bit(3);
}
inline void CMessageTeamSearchMsgCallBack::clear_msgsize() {
  msgsize_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::msgsize() const {
  return msgsize_;
}
inline void CMessageTeamSearchMsgCallBack::set_msgsize(::google::protobuf::uint32 value) {
  _set_bit(3);
  msgsize_ = value;
}

// optional uint32 PageIndex = 5;
inline bool CMessageTeamSearchMsgCallBack::has_pageindex() const {
  return _has_bit(4);
}
inline void CMessageTeamSearchMsgCallBack::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::pageindex() const {
  return pageindex_;
}
inline void CMessageTeamSearchMsgCallBack::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(4);
  pageindex_ = value;
}

// optional uint32 BuffLen = 6;
inline bool CMessageTeamSearchMsgCallBack::has_bufflen() const {
  return _has_bit(5);
}
inline void CMessageTeamSearchMsgCallBack::clear_bufflen() {
  bufflen_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::bufflen() const {
  return bufflen_;
}
inline void CMessageTeamSearchMsgCallBack::set_bufflen(::google::protobuf::uint32 value) {
  _set_bit(5);
  bufflen_ = value;
}

// optional uint32 MsgType = 7;
inline bool CMessageTeamSearchMsgCallBack::has_msgtype() const {
  return _has_bit(6);
}
inline void CMessageTeamSearchMsgCallBack::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamSearchMsgCallBack::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(6);
  msgtype_ = value;
}

// optional uint32 MsgCount = 8;
inline bool CMessageTeamSearchMsgCallBack::has_msgcount() const {
  return _has_bit(7);
}
inline void CMessageTeamSearchMsgCallBack::clear_msgcount() {
  msgcount_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamSearchMsgCallBack::msgcount() const {
  return msgcount_;
}
inline void CMessageTeamSearchMsgCallBack::set_msgcount(::google::protobuf::uint32 value) {
  _set_bit(7);
  msgcount_ = value;
}

// repeated .PBTeamMsg Msg = 9;
inline int CMessageTeamSearchMsgCallBack::msg_size() const {
  return msg_.size();
}
inline void CMessageTeamSearchMsgCallBack::clear_msg() {
  msg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >&
CMessageTeamSearchMsgCallBack::msg() const {
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >*
CMessageTeamSearchMsgCallBack::mutable_msg() {
  return &msg_;
}
inline const ::PBTeamMsg& CMessageTeamSearchMsgCallBack::msg(int index) const {
  return msg_.Get(index);
}
inline ::PBTeamMsg* CMessageTeamSearchMsgCallBack::mutable_msg(int index) {
  return msg_.Mutable(index);
}
inline ::PBTeamMsg* CMessageTeamSearchMsgCallBack::add_msg() {
  return msg_.Add();
}

// -------------------------------------------------------------------

// CMessageTeamSearchConscribeMsg

// optional uint32 MsgType = 1;
inline bool CMessageTeamSearchConscribeMsg::has_msgtype() const {
  return _has_bit(0);
}
inline void CMessageTeamSearchConscribeMsg::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamSearchConscribeMsg::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  msgtype_ = value;
}

// optional uint32 MaxLevel = 2;
inline bool CMessageTeamSearchConscribeMsg::has_maxlevel() const {
  return _has_bit(1);
}
inline void CMessageTeamSearchConscribeMsg::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::maxlevel() const {
  return maxlevel_;
}
inline void CMessageTeamSearchConscribeMsg::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  maxlevel_ = value;
}

// optional uint32 PageIndex = 3;
inline bool CMessageTeamSearchConscribeMsg::has_pageindex() const {
  return _has_bit(2);
}
inline void CMessageTeamSearchConscribeMsg::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::pageindex() const {
  return pageindex_;
}
inline void CMessageTeamSearchConscribeMsg::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  pageindex_ = value;
}

// optional uint32 MinLevel = 4;
inline bool CMessageTeamSearchConscribeMsg::has_minlevel() const {
  return _has_bit(3);
}
inline void CMessageTeamSearchConscribeMsg::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::minlevel() const {
  return minlevel_;
}
inline void CMessageTeamSearchConscribeMsg::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  minlevel_ = value;
}

// optional uint32 ConscribeType = 5;
inline bool CMessageTeamSearchConscribeMsg::has_conscribetype() const {
  return _has_bit(4);
}
inline void CMessageTeamSearchConscribeMsg::clear_conscribetype() {
  conscribetype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::conscribetype() const {
  return conscribetype_;
}
inline void CMessageTeamSearchConscribeMsg::set_conscribetype(::google::protobuf::uint32 value) {
  _set_bit(4);
  conscribetype_ = value;
}

// optional uint32 Metier = 6;
inline bool CMessageTeamSearchConscribeMsg::has_metier() const {
  return _has_bit(5);
}
inline void CMessageTeamSearchConscribeMsg::clear_metier() {
  metier_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::metier() const {
  return metier_;
}
inline void CMessageTeamSearchConscribeMsg::set_metier(::google::protobuf::uint32 value) {
  _set_bit(5);
  metier_ = value;
}

// optional uint32 SubType = 7;
inline bool CMessageTeamSearchConscribeMsg::has_subtype() const {
  return _has_bit(6);
}
inline void CMessageTeamSearchConscribeMsg::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeMsg::subtype() const {
  return subtype_;
}
inline void CMessageTeamSearchConscribeMsg::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(6);
  subtype_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamSearchConscribeCallBack

// optional .CMessageRouter Router = 1;
inline bool CMessageTeamSearchConscribeCallBack::has_router() const {
  return _has_bit(0);
}
inline void CMessageTeamSearchConscribeCallBack::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageTeamSearchConscribeCallBack::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageTeamSearchConscribeCallBack::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional bytes MsgBuff = 2;
inline bool CMessageTeamSearchConscribeCallBack::has_msgbuff() const {
  return _has_bit(1);
}
inline void CMessageTeamSearchConscribeCallBack::clear_msgbuff() {
  if (msgbuff_ != &_default_msgbuff_) {
    msgbuff_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamSearchConscribeCallBack::msgbuff() const {
  return *msgbuff_;
}
inline void CMessageTeamSearchConscribeCallBack::set_msgbuff(const ::std::string& value) {
  _set_bit(1);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(value);
}
inline void CMessageTeamSearchConscribeCallBack::set_msgbuff(const char* value) {
  _set_bit(1);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(value);
}
inline void CMessageTeamSearchConscribeCallBack::set_msgbuff(const void* value, size_t size) {
  _set_bit(1);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  msgbuff_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamSearchConscribeCallBack::mutable_msgbuff() {
  _set_bit(1);
  if (msgbuff_ == &_default_msgbuff_) {
    msgbuff_ = new ::std::string;
  }
  return msgbuff_;
}

// optional uint32 BuffLen = 3;
inline bool CMessageTeamSearchConscribeCallBack::has_bufflen() const {
  return _has_bit(2);
}
inline void CMessageTeamSearchConscribeCallBack::clear_bufflen() {
  bufflen_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::bufflen() const {
  return bufflen_;
}
inline void CMessageTeamSearchConscribeCallBack::set_bufflen(::google::protobuf::uint32 value) {
  _set_bit(2);
  bufflen_ = value;
}

// optional uint32 MsgType = 4;
inline bool CMessageTeamSearchConscribeCallBack::has_msgtype() const {
  return _has_bit(3);
}
inline void CMessageTeamSearchConscribeCallBack::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamSearchConscribeCallBack::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(3);
  msgtype_ = value;
}

// optional uint32 MsgCount = 5;
inline bool CMessageTeamSearchConscribeCallBack::has_msgcount() const {
  return _has_bit(4);
}
inline void CMessageTeamSearchConscribeCallBack::clear_msgcount() {
  msgcount_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::msgcount() const {
  return msgcount_;
}
inline void CMessageTeamSearchConscribeCallBack::set_msgcount(::google::protobuf::uint32 value) {
  _set_bit(4);
  msgcount_ = value;
}

// optional uint32 PageIndex = 6;
inline bool CMessageTeamSearchConscribeCallBack::has_pageindex() const {
  return _has_bit(5);
}
inline void CMessageTeamSearchConscribeCallBack::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::pageindex() const {
  return pageindex_;
}
inline void CMessageTeamSearchConscribeCallBack::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(5);
  pageindex_ = value;
}

// repeated .PBTeamMsg Msg = 7;
inline int CMessageTeamSearchConscribeCallBack::msg_size() const {
  return msg_.size();
}
inline void CMessageTeamSearchConscribeCallBack::clear_msg() {
  msg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >&
CMessageTeamSearchConscribeCallBack::msg() const {
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMsg >*
CMessageTeamSearchConscribeCallBack::mutable_msg() {
  return &msg_;
}
inline const ::PBTeamMsg& CMessageTeamSearchConscribeCallBack::msg(int index) const {
  return msg_.Get(index);
}
inline ::PBTeamMsg* CMessageTeamSearchConscribeCallBack::mutable_msg(int index) {
  return msg_.Mutable(index);
}
inline ::PBTeamMsg* CMessageTeamSearchConscribeCallBack::add_msg() {
  return msg_.Add();
}

// optional uint32 MsgSize = 8;
inline bool CMessageTeamSearchConscribeCallBack::has_msgsize() const {
  return _has_bit(7);
}
inline void CMessageTeamSearchConscribeCallBack::clear_msgsize() {
  msgsize_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::msgsize() const {
  return msgsize_;
}
inline void CMessageTeamSearchConscribeCallBack::set_msgsize(::google::protobuf::uint32 value) {
  _set_bit(7);
  msgsize_ = value;
}

// optional uint32 TotalPage = 9;
inline bool CMessageTeamSearchConscribeCallBack::has_totalpage() const {
  return _has_bit(8);
}
inline void CMessageTeamSearchConscribeCallBack::clear_totalpage() {
  totalpage_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageTeamSearchConscribeCallBack::totalpage() const {
  return totalpage_;
}
inline void CMessageTeamSearchConscribeCallBack::set_totalpage(::google::protobuf::uint32 value) {
  _set_bit(8);
  totalpage_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamDeleteMsg

// optional uint32 MsgType = 1;
inline bool CMessageTeamDeleteMsg::has_msgtype() const {
  return _has_bit(0);
}
inline void CMessageTeamDeleteMsg::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamDeleteMsg::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamDeleteMsg::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  msgtype_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamDeleteMsg::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamDeleteMsg::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamDeleteMsg::charid() const {
  return charid_;
}
inline void CMessageTeamDeleteMsg::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamDeleteMsgCallBack

// optional uint32 EntityID = 1;
inline bool CMessageTeamDeleteMsgCallBack::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageTeamDeleteMsgCallBack::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamDeleteMsgCallBack::entityid() const {
  return entityid_;
}
inline void CMessageTeamDeleteMsgCallBack::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 MsgType = 2;
inline bool CMessageTeamDeleteMsgCallBack::has_msgtype() const {
  return _has_bit(1);
}
inline void CMessageTeamDeleteMsgCallBack::clear_msgtype() {
  msgtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamDeleteMsgCallBack::msgtype() const {
  return msgtype_;
}
inline void CMessageTeamDeleteMsgCallBack::set_msgtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgtype_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamOrderFollow

// optional uint32 Code = 1;
inline bool CMessageTeamOrderFollow::has_code() const {
  return _has_bit(0);
}
inline void CMessageTeamOrderFollow::clear_code() {
  code_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamOrderFollow::code() const {
  return code_;
}
inline void CMessageTeamOrderFollow::set_code(::google::protobuf::uint32 value) {
  _set_bit(0);
  code_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamOrderFollowCallBack

// optional uint32 CharID = 1;
inline bool CMessageTeamOrderFollowCallBack::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTeamOrderFollowCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamOrderFollowCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamOrderFollowCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string HeaderName = 2;
inline bool CMessageTeamOrderFollowCallBack::has_headername() const {
  return _has_bit(1);
}
inline void CMessageTeamOrderFollowCallBack::clear_headername() {
  if (headername_ != &_default_headername_) {
    headername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamOrderFollowCallBack::headername() const {
  return *headername_;
}
inline void CMessageTeamOrderFollowCallBack::set_headername(const ::std::string& value) {
  _set_bit(1);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamOrderFollowCallBack::set_headername(const char* value) {
  _set_bit(1);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(value);
}
inline void CMessageTeamOrderFollowCallBack::set_headername(const char* value, size_t size) {
  _set_bit(1);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  headername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamOrderFollowCallBack::mutable_headername() {
  _set_bit(1);
  if (headername_ == &_default_headername_) {
    headername_ = new ::std::string;
  }
  return headername_;
}

// optional uint32 Code = 3;
inline bool CMessageTeamOrderFollowCallBack::has_code() const {
  return _has_bit(2);
}
inline void CMessageTeamOrderFollowCallBack::clear_code() {
  code_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamOrderFollowCallBack::code() const {
  return code_;
}
inline void CMessageTeamOrderFollowCallBack::set_code(::google::protobuf::uint32 value) {
  _set_bit(2);
  code_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamRequestFollow

// optional uint32 Code = 1;
inline bool CMessageTeamRequestFollow::has_code() const {
  return _has_bit(0);
}
inline void CMessageTeamRequestFollow::clear_code() {
  code_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamRequestFollow::code() const {
  return code_;
}
inline void CMessageTeamRequestFollow::set_code(::google::protobuf::uint32 value) {
  _set_bit(0);
  code_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamRequestFollowCallBack

// optional string Name = 1;
inline bool CMessageTeamRequestFollowCallBack::has_name() const {
  return _has_bit(0);
}
inline void CMessageTeamRequestFollowCallBack::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTeamRequestFollowCallBack::name() const {
  return *name_;
}
inline void CMessageTeamRequestFollowCallBack::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamRequestFollowCallBack::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageTeamRequestFollowCallBack::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamRequestFollowCallBack::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamRequestFollowCallBack::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamRequestFollowCallBack::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamRequestFollowCallBack::charid() const {
  return charid_;
}
inline void CMessageTeamRequestFollowCallBack::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamTwoParamCallBack

// optional string DesName = 1;
inline bool CMessageTeamTwoParamCallBack::has_desname() const {
  return _has_bit(0);
}
inline void CMessageTeamTwoParamCallBack::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTeamTwoParamCallBack::desname() const {
  return *desname_;
}
inline void CMessageTeamTwoParamCallBack::set_desname(const ::std::string& value) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageTeamTwoParamCallBack::set_desname(const char* value) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageTeamTwoParamCallBack::set_desname(const char* value, size_t size) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamTwoParamCallBack::mutable_desname() {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 DesCharID = 2;
inline bool CMessageTeamTwoParamCallBack::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageTeamTwoParamCallBack::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamTwoParamCallBack::descharid() const {
  return descharid_;
}
inline void CMessageTeamTwoParamCallBack::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional string SrcName = 3;
inline bool CMessageTeamTwoParamCallBack::has_srcname() const {
  return _has_bit(2);
}
inline void CMessageTeamTwoParamCallBack::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamTwoParamCallBack::srcname() const {
  return *srcname_;
}
inline void CMessageTeamTwoParamCallBack::set_srcname(const ::std::string& value) {
  _set_bit(2);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageTeamTwoParamCallBack::set_srcname(const char* value) {
  _set_bit(2);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageTeamTwoParamCallBack::set_srcname(const char* value, size_t size) {
  _set_bit(2);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamTwoParamCallBack::mutable_srcname() {
  _set_bit(2);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional uint32 Code = 4;
inline bool CMessageTeamTwoParamCallBack::has_code() const {
  return _has_bit(3);
}
inline void CMessageTeamTwoParamCallBack::clear_code() {
  code_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamTwoParamCallBack::code() const {
  return code_;
}
inline void CMessageTeamTwoParamCallBack::set_code(::google::protobuf::uint32 value) {
  _set_bit(3);
  code_ = value;
}

// optional uint32 SrcCharID = 5;
inline bool CMessageTeamTwoParamCallBack::has_srccharid() const {
  return _has_bit(4);
}
inline void CMessageTeamTwoParamCallBack::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamTwoParamCallBack::srccharid() const {
  return srccharid_;
}
inline void CMessageTeamTwoParamCallBack::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(4);
  srccharid_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamStateChange

// optional uint32 TeamFlag = 1;
inline bool CMessageTeamStateChange::has_teamflag() const {
  return _has_bit(0);
}
inline void CMessageTeamStateChange::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamStateChange::teamflag() const {
  return teamflag_;
}
inline void CMessageTeamStateChange::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(0);
  teamflag_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamStateChange::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamStateChange::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamStateChange::charid() const {
  return charid_;
}
inline void CMessageTeamStateChange::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageTeamStateChange::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageTeamStateChange::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamStateChange::entityid() const {
  return entityid_;
}
inline void CMessageTeamStateChange::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageRedirectJoinTeamResponse

// optional .CMessageRouter Router = 1;
inline bool CMessageRedirectJoinTeamResponse::has_router() const {
  return _has_bit(0);
}
inline void CMessageRedirectJoinTeamResponse::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageRedirectJoinTeamResponse::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageRedirectJoinTeamResponse::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 ItemID = 2;
inline bool CMessageRedirectJoinTeamResponse::has_itemid() const {
  return _has_bit(1);
}
inline void CMessageRedirectJoinTeamResponse::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectJoinTeamResponse::itemid() const {
  return itemid_;
}
inline void CMessageRedirectJoinTeamResponse::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemid_ = value;
}

// optional uint32 HeadID = 3;
inline bool CMessageRedirectJoinTeamResponse::has_headid() const {
  return _has_bit(2);
}
inline void CMessageRedirectJoinTeamResponse::clear_headid() {
  headid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectJoinTeamResponse::headid() const {
  return headid_;
}
inline void CMessageRedirectJoinTeamResponse::set_headid(::google::protobuf::uint32 value) {
  _set_bit(2);
  headid_ = value;
}

// -------------------------------------------------------------------

// CMessageRedirectTeamRelationNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageRedirectTeamRelationNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageRedirectTeamRelationNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageRedirectTeamRelationNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageRedirectTeamRelationNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 DesCharID = 2;
inline bool CMessageRedirectTeamRelationNotice::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageRedirectTeamRelationNotice::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectTeamRelationNotice::descharid() const {
  return descharid_;
}
inline void CMessageRedirectTeamRelationNotice::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 IsAdd = 3;
inline bool CMessageRedirectTeamRelationNotice::has_isadd() const {
  return _has_bit(2);
}
inline void CMessageRedirectTeamRelationNotice::clear_isadd() {
  isadd_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectTeamRelationNotice::isadd() const {
  return isadd_;
}
inline void CMessageRedirectTeamRelationNotice::set_isadd(::google::protobuf::uint32 value) {
  _set_bit(2);
  isadd_ = value;
}

// optional uint32 SrcCharID = 4;
inline bool CMessageRedirectTeamRelationNotice::has_srccharid() const {
  return _has_bit(3);
}
inline void CMessageRedirectTeamRelationNotice::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRedirectTeamRelationNotice::srccharid() const {
  return srccharid_;
}
inline void CMessageRedirectTeamRelationNotice::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  srccharid_ = value;
}

// optional string DesName = 5;
inline bool CMessageRedirectTeamRelationNotice::has_desname() const {
  return _has_bit(4);
}
inline void CMessageRedirectTeamRelationNotice::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageRedirectTeamRelationNotice::desname() const {
  return *desname_;
}
inline void CMessageRedirectTeamRelationNotice::set_desname(const ::std::string& value) {
  _set_bit(4);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRedirectTeamRelationNotice::set_desname(const char* value) {
  _set_bit(4);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRedirectTeamRelationNotice::set_desname(const char* value, size_t size) {
  _set_bit(4);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRedirectTeamRelationNotice::mutable_desname() {
  _set_bit(4);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 Type = 6;
inline bool CMessageRedirectTeamRelationNotice::has_type() const {
  return _has_bit(5);
}
inline void CMessageRedirectTeamRelationNotice::clear_type() {
  type_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRedirectTeamRelationNotice::type() const {
  return type_;
}
inline void CMessageRedirectTeamRelationNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(5);
  type_ = value;
}

// optional string SrcName = 7;
inline bool CMessageRedirectTeamRelationNotice::has_srcname() const {
  return _has_bit(6);
}
inline void CMessageRedirectTeamRelationNotice::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageRedirectTeamRelationNotice::srcname() const {
  return *srcname_;
}
inline void CMessageRedirectTeamRelationNotice::set_srcname(const ::std::string& value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRedirectTeamRelationNotice::set_srcname(const char* value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRedirectTeamRelationNotice::set_srcname(const char* value, size_t size) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRedirectTeamRelationNotice::mutable_srcname() {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// -------------------------------------------------------------------

// CMessageRedirectCreateTeamNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageRedirectCreateTeamNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageRedirectCreateTeamNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageRedirectCreateTeamNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageRedirectCreateTeamNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 CharID = 2;
inline bool CMessageRedirectCreateTeamNotice::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRedirectCreateTeamNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectCreateTeamNotice::charid() const {
  return charid_;
}
inline void CMessageRedirectCreateTeamNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 SrcCharID = 3;
inline bool CMessageRedirectCreateTeamNotice::has_srccharid() const {
  return _has_bit(2);
}
inline void CMessageRedirectCreateTeamNotice::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectCreateTeamNotice::srccharid() const {
  return srccharid_;
}
inline void CMessageRedirectCreateTeamNotice::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccharid_ = value;
}

// optional string CharName = 4;
inline bool CMessageRedirectCreateTeamNotice::has_charname() const {
  return _has_bit(3);
}
inline void CMessageRedirectCreateTeamNotice::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageRedirectCreateTeamNotice::charname() const {
  return *charname_;
}
inline void CMessageRedirectCreateTeamNotice::set_charname(const ::std::string& value) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRedirectCreateTeamNotice::set_charname(const char* value) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRedirectCreateTeamNotice::set_charname(const char* value, size_t size) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRedirectCreateTeamNotice::mutable_charname() {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// -------------------------------------------------------------------

// CMessageTeamNotice

// optional uint32 Code = 1;
inline bool CMessageTeamNotice::has_code() const {
  return _has_bit(0);
}
inline void CMessageTeamNotice::clear_code() {
  code_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamNotice::code() const {
  return code_;
}
inline void CMessageTeamNotice::set_code(::google::protobuf::uint32 value) {
  _set_bit(0);
  code_ = value;
}

// optional string Param2 = 2;
inline bool CMessageTeamNotice::has_param2() const {
  return _has_bit(1);
}
inline void CMessageTeamNotice::clear_param2() {
  if (param2_ != &_default_param2_) {
    param2_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTeamNotice::param2() const {
  return *param2_;
}
inline void CMessageTeamNotice::set_param2(const ::std::string& value) {
  _set_bit(1);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
}
inline void CMessageTeamNotice::set_param2(const char* value) {
  _set_bit(1);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
}
inline void CMessageTeamNotice::set_param2(const char* value, size_t size) {
  _set_bit(1);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamNotice::mutable_param2() {
  _set_bit(1);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  return param2_;
}

// optional string Param1 = 3;
inline bool CMessageTeamNotice::has_param1() const {
  return _has_bit(2);
}
inline void CMessageTeamNotice::clear_param1() {
  if (param1_ != &_default_param1_) {
    param1_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageTeamNotice::param1() const {
  return *param1_;
}
inline void CMessageTeamNotice::set_param1(const ::std::string& value) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
}
inline void CMessageTeamNotice::set_param1(const char* value) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
}
inline void CMessageTeamNotice::set_param1(const char* value, size_t size) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTeamNotice::mutable_param1() {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  return param1_;
}

#endif  // PROTOBUF_teammessage_5fpb_2ehxx__INCLUDED
