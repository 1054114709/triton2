// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_coremessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_coremessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();

class CMessageRouter;
class CMessageRedirectErr;
class CMessageLoginErrorNotice;
class CMessageGateErrorNotice;
class CMessageLoginServerRequest;
class CMessageWaitForLoginNotice;
class CMessageRedirectGateNotice;
class CMessageLoginGateRequest;
class CMessageLoginGateResponse;
class CMessageObtainCharRequest;
class PBCharProfile;
class CMessageObtainCharNotice;
class CMessageObtainCharCompleteNotice;
class CMessageEnterGameRequest;
class CMessageEnterGameResponse;
class CMessageLoginSceneRequest;
class CMessageLoginSceneResponse;
class CMessageReturn2GateRequest;
class CMessageReturn2GateResponse;
class CMessageCreateCharRequest;
class CMessageCreateCharResponse;
class CMessageDeleteCharRequest;
class CMessageDeleteCharResponse;
class CMessageReconnectSceneNotice;
class CMessageRedirectSceneRequest;
class CMessageRedirectSceneResponse;
class CMessageLeaveGameRequest;
class CMessageLeaveGameResponse;
class CMessageKickoutNotice;
class CMessageClientPingServerRequest;
class CMessageClientPingServerResponse;
class CMessageGateKickPlayerNotify;
class CMessageQueuePlayerNotify;
class CMessagePlayerCancelLoginQueue;
class CMessageCheckRolePwdRequest;
class CMessageCheckRolePwdResponse;
class CMessageSendClientInfoRequest;
class CMessageSendAntiBotDataToServerNotify;
class CMessageSendAntiBotDataToClientNotify;
class CMessageClientAntiBotStartRetNotify;
class CMessageDisconnectNotify;
class CMessageUserAuthNotify;
class CMessageUserAuthRequest;
class CMessageUserAuthResponse;
class CMessageCancelDeleteRoleRequest;
class CMessageCancelDeleteRoleResponse;
class CMessageQuestionRequireRequest;
class CMessageQuestionRequireResponse;
class CMessageQuestionAnswerRequest;
class CMessageQuestionAnswerResponse;
class CMessageLoginServerInfo;
class CMessageCertifyRequest;
class CMessageCertifyResponse;
class CMessageCertifyQueryRequest;
class CMessageCertifyQueryResponse;
class CMessageCertifyTokenRequest;
class CMessageCertifyTokenResponse;
class CMessageRoleQueryRequest;
class CMessageRoleQueryResponse;
class CMessageRoleQueryNotify;
class CMessageOnlineStatusNotify;
class CMessageInviteCampRequest;
class CampLevel;
class CMessageInviteCampResponse;
class CMessageChangeSingleCampRequest;
class CMessageChangeSingleCampResponse;
class CMessageChangeCampSuccesNotify;
class CMessageChangeCamp2GateNotice;
class CMessageChangeCampConditionRequest;
class CMessageChangeCampConditionResponse;

enum CMessageRouter_MSGID {
  CMessageRouter_MSGID_MSGROUTER = 512
};
const ::google::protobuf::EnumDescriptor* CMessageRouter_MSGID_descriptor();
bool CMessageRouter_MSGID_IsValid(int value);
const CMessageRouter_MSGID CMessageRouter_MSGID_MSGID_MIN = CMessageRouter_MSGID_MSGROUTER;
const CMessageRouter_MSGID CMessageRouter_MSGID_MSGID_MAX = CMessageRouter_MSGID_MSGROUTER;

inline const ::std::string& CMessageRouter_MSGID_Name(CMessageRouter_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageRouter_MSGID_descriptor(), value);
}
inline bool CMessageRouter_MSGID_Parse(
    const ::std::string& name, CMessageRouter_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageRouter_MSGID>(
    CMessageRouter_MSGID_descriptor(), name, value);
}
enum CMessageRouter_EMRouterType {
  CMessageRouter_EMRouterType_ROUTER_NAME = 0,
  CMessageRouter_EMRouterType_ROUTER_CHAR = 1
};
const ::google::protobuf::EnumDescriptor* CMessageRouter_EMRouterType_descriptor();
bool CMessageRouter_EMRouterType_IsValid(int value);
const CMessageRouter_EMRouterType CMessageRouter_EMRouterType_EMRouterType_MIN = CMessageRouter_EMRouterType_ROUTER_NAME;
const CMessageRouter_EMRouterType CMessageRouter_EMRouterType_EMRouterType_MAX = CMessageRouter_EMRouterType_ROUTER_CHAR;

inline const ::std::string& CMessageRouter_EMRouterType_Name(CMessageRouter_EMRouterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageRouter_EMRouterType_descriptor(), value);
}
inline bool CMessageRouter_EMRouterType_Parse(
    const ::std::string& name, CMessageRouter_EMRouterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageRouter_EMRouterType>(
    CMessageRouter_EMRouterType_descriptor(), name, value);
}
enum CMessageRouter_EMRouterReason {
  CMessageRouter_EMRouterReason_REASON_SUCCESS = 0,
  CMessageRouter_EMRouterReason_REASON_REDIRECT = 1,
  CMessageRouter_EMRouterReason_REASON_OFFLINE = 2
};
const ::google::protobuf::EnumDescriptor* CMessageRouter_EMRouterReason_descriptor();
bool CMessageRouter_EMRouterReason_IsValid(int value);
const CMessageRouter_EMRouterReason CMessageRouter_EMRouterReason_EMRouterReason_MIN = CMessageRouter_EMRouterReason_REASON_SUCCESS;
const CMessageRouter_EMRouterReason CMessageRouter_EMRouterReason_EMRouterReason_MAX = CMessageRouter_EMRouterReason_REASON_OFFLINE;

inline const ::std::string& CMessageRouter_EMRouterReason_Name(CMessageRouter_EMRouterReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageRouter_EMRouterReason_descriptor(), value);
}
inline bool CMessageRouter_EMRouterReason_Parse(
    const ::std::string& name, CMessageRouter_EMRouterReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageRouter_EMRouterReason>(
    CMessageRouter_EMRouterReason_descriptor(), name, value);
}
enum CMessageLoginServerRequest_EType {
  CMessageLoginServerRequest_EType_TYPE_CLIENT = 0,
  CMessageLoginServerRequest_EType_TYPE_GLOBAL = 1
};
const ::google::protobuf::EnumDescriptor* CMessageLoginServerRequest_EType_descriptor();
bool CMessageLoginServerRequest_EType_IsValid(int value);
const CMessageLoginServerRequest_EType CMessageLoginServerRequest_EType_EType_MIN = CMessageLoginServerRequest_EType_TYPE_CLIENT;
const CMessageLoginServerRequest_EType CMessageLoginServerRequest_EType_EType_MAX = CMessageLoginServerRequest_EType_TYPE_GLOBAL;

inline const ::std::string& CMessageLoginServerRequest_EType_Name(CMessageLoginServerRequest_EType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageLoginServerRequest_EType_descriptor(), value);
}
inline bool CMessageLoginServerRequest_EType_Parse(
    const ::std::string& name, CMessageLoginServerRequest_EType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageLoginServerRequest_EType>(
    CMessageLoginServerRequest_EType_descriptor(), name, value);
}
enum CMessageQuestionRequireResponse_EStatus {
  CMessageQuestionRequireResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageQuestionRequireResponse_EStatus_STATUS_WAIT = 1
};
const ::google::protobuf::EnumDescriptor* CMessageQuestionRequireResponse_EStatus_descriptor();
bool CMessageQuestionRequireResponse_EStatus_IsValid(int value);
const CMessageQuestionRequireResponse_EStatus CMessageQuestionRequireResponse_EStatus_EStatus_MIN = CMessageQuestionRequireResponse_EStatus_STATUS_SUCCESS;
const CMessageQuestionRequireResponse_EStatus CMessageQuestionRequireResponse_EStatus_EStatus_MAX = CMessageQuestionRequireResponse_EStatus_STATUS_WAIT;

inline const ::std::string& CMessageQuestionRequireResponse_EStatus_Name(CMessageQuestionRequireResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageQuestionRequireResponse_EStatus_descriptor(), value);
}
inline bool CMessageQuestionRequireResponse_EStatus_Parse(
    const ::std::string& name, CMessageQuestionRequireResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageQuestionRequireResponse_EStatus>(
    CMessageQuestionRequireResponse_EStatus_descriptor(), name, value);
}
enum CMessageQuestionAnswerRequest_EStatus {
  CMessageQuestionAnswerRequest_EStatus_STATUS_SUCCESS = 0,
  CMessageQuestionAnswerRequest_EStatus_STATUS_WAIT = 1
};
const ::google::protobuf::EnumDescriptor* CMessageQuestionAnswerRequest_EStatus_descriptor();
bool CMessageQuestionAnswerRequest_EStatus_IsValid(int value);
const CMessageQuestionAnswerRequest_EStatus CMessageQuestionAnswerRequest_EStatus_EStatus_MIN = CMessageQuestionAnswerRequest_EStatus_STATUS_SUCCESS;
const CMessageQuestionAnswerRequest_EStatus CMessageQuestionAnswerRequest_EStatus_EStatus_MAX = CMessageQuestionAnswerRequest_EStatus_STATUS_WAIT;

inline const ::std::string& CMessageQuestionAnswerRequest_EStatus_Name(CMessageQuestionAnswerRequest_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageQuestionAnswerRequest_EStatus_descriptor(), value);
}
inline bool CMessageQuestionAnswerRequest_EStatus_Parse(
    const ::std::string& name, CMessageQuestionAnswerRequest_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageQuestionAnswerRequest_EStatus>(
    CMessageQuestionAnswerRequest_EStatus_descriptor(), name, value);
}
enum CMessageQuestionAnswerResponse_EStatus {
  CMessageQuestionAnswerResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageQuestionAnswerResponse_EStatus_STATUS_WAIT = 1
};
const ::google::protobuf::EnumDescriptor* CMessageQuestionAnswerResponse_EStatus_descriptor();
bool CMessageQuestionAnswerResponse_EStatus_IsValid(int value);
const CMessageQuestionAnswerResponse_EStatus CMessageQuestionAnswerResponse_EStatus_EStatus_MIN = CMessageQuestionAnswerResponse_EStatus_STATUS_SUCCESS;
const CMessageQuestionAnswerResponse_EStatus CMessageQuestionAnswerResponse_EStatus_EStatus_MAX = CMessageQuestionAnswerResponse_EStatus_STATUS_WAIT;

inline const ::std::string& CMessageQuestionAnswerResponse_EStatus_Name(CMessageQuestionAnswerResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageQuestionAnswerResponse_EStatus_descriptor(), value);
}
inline bool CMessageQuestionAnswerResponse_EStatus_Parse(
    const ::std::string& name, CMessageQuestionAnswerResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageQuestionAnswerResponse_EStatus>(
    CMessageQuestionAnswerResponse_EStatus_descriptor(), name, value);
}
enum CMessageCertifyResponse_EStatus {
  CMessageCertifyResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageCertifyResponse_EStatus_STATUS_INVALID = 1,
  CMessageCertifyResponse_EStatus_STATUS_FAILURE = 2
};
const ::google::protobuf::EnumDescriptor* CMessageCertifyResponse_EStatus_descriptor();
bool CMessageCertifyResponse_EStatus_IsValid(int value);
const CMessageCertifyResponse_EStatus CMessageCertifyResponse_EStatus_EStatus_MIN = CMessageCertifyResponse_EStatus_STATUS_SUCCESS;
const CMessageCertifyResponse_EStatus CMessageCertifyResponse_EStatus_EStatus_MAX = CMessageCertifyResponse_EStatus_STATUS_FAILURE;

inline const ::std::string& CMessageCertifyResponse_EStatus_Name(CMessageCertifyResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageCertifyResponse_EStatus_descriptor(), value);
}
inline bool CMessageCertifyResponse_EStatus_Parse(
    const ::std::string& name, CMessageCertifyResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageCertifyResponse_EStatus>(
    CMessageCertifyResponse_EStatus_descriptor(), name, value);
}
enum CMessageCertifyQueryResponse_EStatus {
  CMessageCertifyQueryResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageCertifyQueryResponse_EStatus_STATUS_FAILURE = 1
};
const ::google::protobuf::EnumDescriptor* CMessageCertifyQueryResponse_EStatus_descriptor();
bool CMessageCertifyQueryResponse_EStatus_IsValid(int value);
const CMessageCertifyQueryResponse_EStatus CMessageCertifyQueryResponse_EStatus_EStatus_MIN = CMessageCertifyQueryResponse_EStatus_STATUS_SUCCESS;
const CMessageCertifyQueryResponse_EStatus CMessageCertifyQueryResponse_EStatus_EStatus_MAX = CMessageCertifyQueryResponse_EStatus_STATUS_FAILURE;

inline const ::std::string& CMessageCertifyQueryResponse_EStatus_Name(CMessageCertifyQueryResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageCertifyQueryResponse_EStatus_descriptor(), value);
}
inline bool CMessageCertifyQueryResponse_EStatus_Parse(
    const ::std::string& name, CMessageCertifyQueryResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageCertifyQueryResponse_EStatus>(
    CMessageCertifyQueryResponse_EStatus_descriptor(), name, value);
}
enum CMessageCertifyTokenResponse_EStatus {
  CMessageCertifyTokenResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageCertifyTokenResponse_EStatus_STATUS_FAILURE = 1
};
const ::google::protobuf::EnumDescriptor* CMessageCertifyTokenResponse_EStatus_descriptor();
bool CMessageCertifyTokenResponse_EStatus_IsValid(int value);
const CMessageCertifyTokenResponse_EStatus CMessageCertifyTokenResponse_EStatus_EStatus_MIN = CMessageCertifyTokenResponse_EStatus_STATUS_SUCCESS;
const CMessageCertifyTokenResponse_EStatus CMessageCertifyTokenResponse_EStatus_EStatus_MAX = CMessageCertifyTokenResponse_EStatus_STATUS_FAILURE;

inline const ::std::string& CMessageCertifyTokenResponse_EStatus_Name(CMessageCertifyTokenResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageCertifyTokenResponse_EStatus_descriptor(), value);
}
inline bool CMessageCertifyTokenResponse_EStatus_Parse(
    const ::std::string& name, CMessageCertifyTokenResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageCertifyTokenResponse_EStatus>(
    CMessageCertifyTokenResponse_EStatus_descriptor(), name, value);
}
enum CMessageRoleQueryResponse_EStatus {
  CMessageRoleQueryResponse_EStatus_STATUS_SUCCESS = 0,
  CMessageRoleQueryResponse_EStatus_STATUS_FAILURE = 1
};
const ::google::protobuf::EnumDescriptor* CMessageRoleQueryResponse_EStatus_descriptor();
bool CMessageRoleQueryResponse_EStatus_IsValid(int value);
const CMessageRoleQueryResponse_EStatus CMessageRoleQueryResponse_EStatus_EStatus_MIN = CMessageRoleQueryResponse_EStatus_STATUS_SUCCESS;
const CMessageRoleQueryResponse_EStatus CMessageRoleQueryResponse_EStatus_EStatus_MAX = CMessageRoleQueryResponse_EStatus_STATUS_FAILURE;

inline const ::std::string& CMessageRoleQueryResponse_EStatus_Name(CMessageRoleQueryResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageRoleQueryResponse_EStatus_descriptor(), value);
}
inline bool CMessageRoleQueryResponse_EStatus_Parse(
    const ::std::string& name, CMessageRoleQueryResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageRoleQueryResponse_EStatus>(
    CMessageRoleQueryResponse_EStatus_descriptor(), name, value);
}
enum CMessageRoleQueryNotify_EStatus {
  CMessageRoleQueryNotify_EStatus_STATUS_SUCCESS = 0,
  CMessageRoleQueryNotify_EStatus_STATUS_FAILURE = 1
};
const ::google::protobuf::EnumDescriptor* CMessageRoleQueryNotify_EStatus_descriptor();
bool CMessageRoleQueryNotify_EStatus_IsValid(int value);
const CMessageRoleQueryNotify_EStatus CMessageRoleQueryNotify_EStatus_EStatus_MIN = CMessageRoleQueryNotify_EStatus_STATUS_SUCCESS;
const CMessageRoleQueryNotify_EStatus CMessageRoleQueryNotify_EStatus_EStatus_MAX = CMessageRoleQueryNotify_EStatus_STATUS_FAILURE;

inline const ::std::string& CMessageRoleQueryNotify_EStatus_Name(CMessageRoleQueryNotify_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageRoleQueryNotify_EStatus_descriptor(), value);
}
inline bool CMessageRoleQueryNotify_EStatus_Parse(
    const ::std::string& name, CMessageRoleQueryNotify_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageRoleQueryNotify_EStatus>(
    CMessageRoleQueryNotify_EStatus_descriptor(), name, value);
}
enum EMCoreMessageID {
  ID_L2C_NOTIFY_LOGINERROR = 1025,
  ID_G2C_NOTIFY_GATEERROR = 1026,
  ID_C2L_REQUEST_LOGINSERVER = 1027,
  ID_L2C_NOTIFY_WAITFORQUEUE = 1028,
  ID_L2C_NOTIFY_REDIRECTGATE = 1029,
  ID_C2G_REQUEST_LOGINGATE = 1030,
  ID_G2C_RESPONSE_LOGINGATE = 1031,
  ID_C2G_REQUEST_OBTAINCHAR = 1032,
  ID_G2C_NOTIFY_OBTAINCHAR = 1033,
  ID_G2C_NOTIFY_OBTAINCHARCOMPLTE = 1034,
  ID_C2G_REQUEST_ENTERGAME = 1035,
  ID_G2C_RESPONSE_ENTERGAME = 1036,
  ID_C2S_REQUEST_LOGINSCENE = 1037,
  ID_S2C_RESPONSE_LOINGSCENE = 1038,
  ID_C2S_REQUEST_RETURN2GATE = 1039,
  ID_S2C_RESPONSE_RETURN2GATE = 1040,
  ID_C2G_REQUEST_CREATECHAR = 1041,
  ID_G2C_RESPONSE_CREATECHAR = 1042,
  ID_C2G_REQUEST_DELETECHAR = 1043,
  ID_G2C_RESPONSE_DELETECHAR = 1044,
  ID_S2C_NOTIFY_RECONNECTSCENE = 1045,
  ID_C2S_REQUEST_REDIRECTSCENE = 1046,
  ID_S2C_RESPONSE_REDIRECTSCENE = 1047,
  ID_C2S_REQUEST_LEAVEGAME = 1048,
  ID_S2C_RESPONSE_LEAVEGAME = 1049,
  ID_S2C_NOTIFY_KICK = 1050,
  ID_C2S_REQUEST_PING = 1051,
  ID_S2C_RESPONSE_PING = 1052,
  ID_G2S_NOTIFY_KICKPLAYER = 1053,
  ID_S2C_REDIRECT_ERR_CODE = 1054,
  ID_G2S_NOTIFY_LOGINQUEUE = 1055,
  ID_C2G_REQUEST_CHECKROLEPWD = 1056,
  ID_G2C_RESPONSE_CHECKROLEPWD = 1057,
  ID_C2S_REQUEST_CLIENTINFO = 1058,
  ID_S2G_CANCEL_LOGINQUEUE = 1059,
  ID_C2S_NOTIFY_CLIENTANTIBOTDATA = 1060,
  ID_S2C_NOTIFY_SERVERANTIBOTDATA = 1061,
  ID_C2S_NOTIFY_CLIENTANTIBOTSTARTRET = 1062,
  ID_S2C_NOTIFY_DISCONNECT = 1063,
  ID_S2C_NOTIFY_USERAUTH = 1064,
  ID_C2S_REQUEST_USERAUTH = 1065,
  ID_S2C_RESPONSE_USERAUTH = 1072,
  ID_C2G_REQUEST_CANCELROLEDELETE = 1073,
  ID_G2C_RESPONSE_CANCELROLEDELETE = 1074,
  ID_C2G_REQUEST_QUESTIONREQUIRE = 1075,
  ID_G2C_RESPONSE_QUESTIONREQUIRE = 1076,
  ID_C2G_REQUEST_QUESTIONANSWER = 1077,
  ID_G2C_RESPONSE_QUESTIONANSWER = 1078,
  ID_C2A_REQUEST_CERTIFY = 1088,
  ID_A2C_RESPONSE_CERTIFY = 1089,
  ID_A2L_REQUEST_CERTIFYQUERY = 1090,
  ID_L2A_RESPONSE_CERTIFYQUERY = 1091,
  ID_L2A_REQUEST_CERTIFYTOKEN = 1092,
  ID_A2L_RESPONSE_CERTIFYTOKEN = 1093,
  ID_L2G_REQUEST_ROLEQUERY = 1094,
  ID_G2L_RESPONSE_ROLEQUERY = 1095,
  ID_L2A_NOTIFY_ROLEQUERY = 1096,
  ID_L2A_NOTIFY_ONLINESTATUS = 1097,
  ID_C2S_REQUEST_INVITE_CAMP = 1104,
  ID_S2C_RSPONSE_INVITE_CAMP = 1105,
  ID_C2S_REQUEST_CHANGE_CAMP = 1106,
  ID_S2C_RSPONSE_CHANGE_CAMP = 1107,
  ID_S2C_NOTIFY_CHANGE_CAMP_SUCCESED = 1108,
  ID_S2G_CHANGE_CAMP_NOTICE = 1109,
  ID_C2S_REQUEST_CHANGE_CAMP_CONDITION = 1110,
  ID_S2C_RSPONSE_CHANGE_CAMP_CONDITION = 1111
};
const ::google::protobuf::EnumDescriptor* EMCoreMessageID_descriptor();
bool EMCoreMessageID_IsValid(int value);
const EMCoreMessageID EMCoreMessageID_MIN = ID_L2C_NOTIFY_LOGINERROR;
const EMCoreMessageID EMCoreMessageID_MAX = ID_S2C_RSPONSE_CHANGE_CAMP_CONDITION;

inline const ::std::string& EMCoreMessageID_Name(EMCoreMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMCoreMessageID_descriptor(), value);
}
inline bool EMCoreMessageID_Parse(
    const ::std::string& name, EMCoreMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMCoreMessageID>(
    EMCoreMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageRouter : public ::google::protobuf::Message {
 public:
  CMessageRouter();
  virtual ~CMessageRouter();
  
  CMessageRouter(const CMessageRouter& from);
  
  inline CMessageRouter& operator=(const CMessageRouter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRouter& default_instance();
  void Swap(CMessageRouter* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRouter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRouter& from);
  void MergeFrom(const CMessageRouter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageRouter_MSGID MSGID;
  static const MSGID MSGROUTER = CMessageRouter_MSGID_MSGROUTER;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return CMessageRouter_MSGID_descriptor();
  }
  static inline bool MSGID_IsValid(int value) {
    return CMessageRouter_MSGID_IsValid(value);
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return CMessageRouter_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return CMessageRouter_MSGID_Parse(name, value);
  }
  static const MSGID MSGID_MIN =
    CMessageRouter_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    CMessageRouter_MSGID_MSGID_MAX;
  
  typedef CMessageRouter_EMRouterType EMRouterType;
  static const EMRouterType ROUTER_NAME = CMessageRouter_EMRouterType_ROUTER_NAME;
  static const EMRouterType ROUTER_CHAR = CMessageRouter_EMRouterType_ROUTER_CHAR;
  static inline const ::google::protobuf::EnumDescriptor*
  EMRouterType_descriptor() {
    return CMessageRouter_EMRouterType_descriptor();
  }
  static inline bool EMRouterType_IsValid(int value) {
    return CMessageRouter_EMRouterType_IsValid(value);
  }
  static inline const ::std::string& EMRouterType_Name(EMRouterType value) {
    return CMessageRouter_EMRouterType_Name(value);
  }
  static inline bool EMRouterType_Parse(const ::std::string& name,
      EMRouterType* value) {
    return CMessageRouter_EMRouterType_Parse(name, value);
  }
  static const EMRouterType EMRouterType_MIN =
    CMessageRouter_EMRouterType_EMRouterType_MIN;
  static const EMRouterType EMRouterType_MAX =
    CMessageRouter_EMRouterType_EMRouterType_MAX;
  
  typedef CMessageRouter_EMRouterReason EMRouterReason;
  static const EMRouterReason REASON_SUCCESS = CMessageRouter_EMRouterReason_REASON_SUCCESS;
  static const EMRouterReason REASON_REDIRECT = CMessageRouter_EMRouterReason_REASON_REDIRECT;
  static const EMRouterReason REASON_OFFLINE = CMessageRouter_EMRouterReason_REASON_OFFLINE;
  static inline const ::google::protobuf::EnumDescriptor*
  EMRouterReason_descriptor() {
    return CMessageRouter_EMRouterReason_descriptor();
  }
  static inline bool EMRouterReason_IsValid(int value) {
    return CMessageRouter_EMRouterReason_IsValid(value);
  }
  static inline const ::std::string& EMRouterReason_Name(EMRouterReason value) {
    return CMessageRouter_EMRouterReason_Name(value);
  }
  static inline bool EMRouterReason_Parse(const ::std::string& name,
      EMRouterReason* value) {
    return CMessageRouter_EMRouterReason_Parse(name, value);
  }
  static const EMRouterReason EMRouterReason_MIN =
    CMessageRouter_EMRouterReason_EMRouterReason_MIN;
  static const EMRouterReason EMRouterReason_MAX =
    CMessageRouter_EMRouterReason_EMRouterReason_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RouterReason = 1;
  inline bool has_routerreason() const;
  inline void clear_routerreason();
  static const int kRouterReasonFieldNumber = 1;
  inline ::google::protobuf::uint32 routerreason() const;
  inline void set_routerreason(::google::protobuf::uint32 value);
  
  // optional uint32 Send2Player = 2;
  inline bool has_send2player() const;
  inline void clear_send2player();
  static const int kSend2PlayerFieldNumber = 2;
  inline ::google::protobuf::uint32 send2player() const;
  inline void set_send2player(::google::protobuf::uint32 value);
  
  // optional uint32 SendBack = 3;
  inline bool has_sendback() const;
  inline void clear_sendback();
  static const int kSendBackFieldNumber = 3;
  inline ::google::protobuf::uint32 sendback() const;
  inline void set_sendback(::google::protobuf::uint32 value);
  
  // optional uint32 RouterType = 4;
  inline bool has_routertype() const;
  inline void clear_routertype();
  static const int kRouterTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 routertype() const;
  inline void set_routertype(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 5;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 6;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 6;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional string SrcName = 7;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 7;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional string DesName = 8;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 8;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 routerreason_;
  ::google::protobuf::uint32 send2player_;
  ::google::protobuf::uint32 sendback_;
  ::google::protobuf::uint32 routertype_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRouter* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectErr : public ::google::protobuf::Message {
 public:
  CMessageRedirectErr();
  virtual ~CMessageRedirectErr();
  
  CMessageRedirectErr(const CMessageRedirectErr& from);
  
  inline CMessageRedirectErr& operator=(const CMessageRedirectErr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectErr& default_instance();
  void Swap(CMessageRedirectErr* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectErr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectErr& from);
  void MergeFrom(const CMessageRedirectErr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ErrorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectErr* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginErrorNotice : public ::google::protobuf::Message {
 public:
  CMessageLoginErrorNotice();
  virtual ~CMessageLoginErrorNotice();
  
  CMessageLoginErrorNotice(const CMessageLoginErrorNotice& from);
  
  inline CMessageLoginErrorNotice& operator=(const CMessageLoginErrorNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginErrorNotice& default_instance();
  void Swap(CMessageLoginErrorNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginErrorNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginErrorNotice& from);
  void MergeFrom(const CMessageLoginErrorNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ErrorString = 1;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 1;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* errorstring_;
  static const ::std::string _default_errorstring_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginErrorNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateErrorNotice : public ::google::protobuf::Message {
 public:
  CMessageGateErrorNotice();
  virtual ~CMessageGateErrorNotice();
  
  CMessageGateErrorNotice(const CMessageGateErrorNotice& from);
  
  inline CMessageGateErrorNotice& operator=(const CMessageGateErrorNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateErrorNotice& default_instance();
  void Swap(CMessageGateErrorNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateErrorNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateErrorNotice& from);
  void MergeFrom(const CMessageGateErrorNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 KeepAlive = 1;
  inline bool has_keepalive() const;
  inline void clear_keepalive();
  static const int kKeepAliveFieldNumber = 1;
  inline ::google::protobuf::int32 keepalive() const;
  inline void set_keepalive(::google::protobuf::int32 value);
  
  // optional string ErrorString = 2;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 2;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  
  // optional int32 ErrorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 keepalive_;
  ::std::string* errorstring_;
  static const ::std::string _default_errorstring_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateErrorNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginServerRequest : public ::google::protobuf::Message {
 public:
  CMessageLoginServerRequest();
  virtual ~CMessageLoginServerRequest();
  
  CMessageLoginServerRequest(const CMessageLoginServerRequest& from);
  
  inline CMessageLoginServerRequest& operator=(const CMessageLoginServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginServerRequest& default_instance();
  void Swap(CMessageLoginServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginServerRequest& from);
  void MergeFrom(const CMessageLoginServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageLoginServerRequest_EType EType;
  static const EType TYPE_CLIENT = CMessageLoginServerRequest_EType_TYPE_CLIENT;
  static const EType TYPE_GLOBAL = CMessageLoginServerRequest_EType_TYPE_GLOBAL;
  static inline const ::google::protobuf::EnumDescriptor*
  EType_descriptor() {
    return CMessageLoginServerRequest_EType_descriptor();
  }
  static inline bool EType_IsValid(int value) {
    return CMessageLoginServerRequest_EType_IsValid(value);
  }
  static inline const ::std::string& EType_Name(EType value) {
    return CMessageLoginServerRequest_EType_Name(value);
  }
  static inline bool EType_Parse(const ::std::string& name,
      EType* value) {
    return CMessageLoginServerRequest_EType_Parse(name, value);
  }
  static const EType EType_MIN =
    CMessageLoginServerRequest_EType_EType_MIN;
  static const EType EType_MAX =
    CMessageLoginServerRequest_EType_EType_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional string UserName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  
  // optional string Md5Code = 2;
  inline bool has_md5code() const;
  inline void clear_md5code();
  static const int kMd5CodeFieldNumber = 2;
  inline const ::std::string& md5code() const;
  inline void set_md5code(const ::std::string& value);
  inline void set_md5code(const char* value);
  inline void set_md5code(const char* value, size_t size);
  inline ::std::string* mutable_md5code();
  
  // optional uint32 TaskVersion = 3;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
  // optional string UserPsw = 4;
  inline bool has_userpsw() const;
  inline void clear_userpsw();
  static const int kUserPswFieldNumber = 4;
  inline const ::std::string& userpsw() const;
  inline void set_userpsw(const ::std::string& value);
  inline void set_userpsw(const char* value);
  inline void set_userpsw(const char* value, size_t size);
  inline ::std::string* mutable_userpsw();
  
  // optional uint32 Version = 5;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional int32 SourceID = 6;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIDFieldNumber = 6;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);
  
  // optional uint32 TemplateVersion = 7;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 7;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 MatrixType = 8;
  inline bool has_matrixtype() const;
  inline void clear_matrixtype();
  static const int kMatrixTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 matrixtype() const;
  inline void set_matrixtype(::google::protobuf::uint32 value);
  
  // optional string MatrixCode = 9;
  inline bool has_matrixcode() const;
  inline void clear_matrixcode();
  static const int kMatrixCodeFieldNumber = 9;
  inline const ::std::string& matrixcode() const;
  inline void set_matrixcode(const ::std::string& value);
  inline void set_matrixcode(const char* value);
  inline void set_matrixcode(const char* value, size_t size);
  inline ::std::string* mutable_matrixcode();
  
  // optional string Mac = 10;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 10;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
  // optional string MatrixCoord = 11;
  inline bool has_matrixcoord() const;
  inline void clear_matrixcoord();
  static const int kMatrixCoordFieldNumber = 11;
  inline const ::std::string& matrixcoord() const;
  inline void set_matrixcoord(const ::std::string& value);
  inline void set_matrixcoord(const char* value);
  inline void set_matrixcoord(const char* value, size_t size);
  inline ::std::string* mutable_matrixcoord();
  
  // optional .CMessageLoginServerRequest.EType type = 12;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 12;
  inline ::CMessageLoginServerRequest_EType type() const;
  inline void set_type(::CMessageLoginServerRequest_EType value);
  
  // optional uint32 accountId = 13;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 13;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 token = 14;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 14;
  inline ::google::protobuf::uint32 token() const;
  inline void set_token(::google::protobuf::uint32 value);
  
  // optional uint32 cpuid = 15;
  inline bool has_cpuid() const;
  inline void clear_cpuid();
  static const int kCpuidFieldNumber = 15;
  inline ::google::protobuf::uint32 cpuid() const;
  inline void set_cpuid(::google::protobuf::uint32 value);
  
  // optional uint32 diskid = 16;
  inline bool has_diskid() const;
  inline void clear_diskid();
  static const int kDiskidFieldNumber = 16;
  inline ::google::protobuf::uint32 diskid() const;
  inline void set_diskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* username_;
  static const ::std::string _default_username_;
  ::std::string* md5code_;
  static const ::std::string _default_md5code_;
  ::google::protobuf::uint32 taskversion_;
  ::std::string* userpsw_;
  static const ::std::string _default_userpsw_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 matrixtype_;
  ::std::string* matrixcode_;
  static const ::std::string _default_matrixcode_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  ::std::string* matrixcoord_;
  static const ::std::string _default_matrixcoord_;
  int type_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 token_;
  ::google::protobuf::uint32 cpuid_;
  ::google::protobuf::uint32 diskid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWaitForLoginNotice : public ::google::protobuf::Message {
 public:
  CMessageWaitForLoginNotice();
  virtual ~CMessageWaitForLoginNotice();
  
  CMessageWaitForLoginNotice(const CMessageWaitForLoginNotice& from);
  
  inline CMessageWaitForLoginNotice& operator=(const CMessageWaitForLoginNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWaitForLoginNotice& default_instance();
  void Swap(CMessageWaitForLoginNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWaitForLoginNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWaitForLoginNotice& from);
  void MergeFrom(const CMessageWaitForLoginNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 QueueNumber = 1;
  inline bool has_queuenumber() const;
  inline void clear_queuenumber();
  static const int kQueueNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 queuenumber() const;
  inline void set_queuenumber(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 queuenumber_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWaitForLoginNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectGateNotice : public ::google::protobuf::Message {
 public:
  CMessageRedirectGateNotice();
  virtual ~CMessageRedirectGateNotice();
  
  CMessageRedirectGateNotice(const CMessageRedirectGateNotice& from);
  
  inline CMessageRedirectGateNotice& operator=(const CMessageRedirectGateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectGateNotice& default_instance();
  void Swap(CMessageRedirectGateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectGateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectGateNotice& from);
  void MergeFrom(const CMessageRedirectGateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
  // optional uint32 OtherClient = 2;
  inline bool has_otherclient() const;
  inline void clear_otherclient();
  static const int kOtherClientFieldNumber = 2;
  inline ::google::protobuf::uint32 otherclient() const;
  inline void set_otherclient(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 3;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 3;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CleanCSkey = 5;
  inline bool has_cleancskey() const;
  inline void clear_cleancskey();
  static const int kCleanCSkeyFieldNumber = 5;
  inline ::google::protobuf::uint32 cleancskey() const;
  inline void set_cleancskey(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* address_;
  static const ::std::string _default_address_;
  ::google::protobuf::uint32 otherclient_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 cleancskey_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectGateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginGateRequest : public ::google::protobuf::Message {
 public:
  CMessageLoginGateRequest();
  virtual ~CMessageLoginGateRequest();
  
  CMessageLoginGateRequest(const CMessageLoginGateRequest& from);
  
  inline CMessageLoginGateRequest& operator=(const CMessageLoginGateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginGateRequest& default_instance();
  void Swap(CMessageLoginGateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginGateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginGateRequest& from);
  void MergeFrom(const CMessageLoginGateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LoginToken = 1;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 1;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 TemplateVer = 3;
  inline bool has_templatever() const;
  inline void clear_templatever();
  static const int kTemplateVerFieldNumber = 3;
  inline ::google::protobuf::uint32 templatever() const;
  inline void set_templatever(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 templatever_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginGateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginGateResponse : public ::google::protobuf::Message {
 public:
  CMessageLoginGateResponse();
  virtual ~CMessageLoginGateResponse();
  
  CMessageLoginGateResponse(const CMessageLoginGateResponse& from);
  
  inline CMessageLoginGateResponse& operator=(const CMessageLoginGateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginGateResponse& default_instance();
  void Swap(CMessageLoginGateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginGateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginGateResponse& from);
  void MergeFrom(const CMessageLoginGateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ErrorString = 1;
  inline bool has_errorstring() const;
  inline void clear_errorstring();
  static const int kErrorStringFieldNumber = 1;
  inline const ::std::string& errorstring() const;
  inline void set_errorstring(const ::std::string& value);
  inline void set_errorstring(const char* value);
  inline void set_errorstring(const char* value, size_t size);
  inline ::std::string* mutable_errorstring();
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional int32 GateWayID = 3;
  inline bool has_gatewayid() const;
  inline void clear_gatewayid();
  static const int kGateWayIDFieldNumber = 3;
  inline ::google::protobuf::int32 gatewayid() const;
  inline void set_gatewayid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* errorstring_;
  static const ::std::string _default_errorstring_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 gatewayid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginGateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainCharRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainCharRequest();
  virtual ~CMessageObtainCharRequest();
  
  CMessageObtainCharRequest(const CMessageObtainCharRequest& from);
  
  inline CMessageObtainCharRequest& operator=(const CMessageObtainCharRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainCharRequest& default_instance();
  void Swap(CMessageObtainCharRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainCharRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainCharRequest& from);
  void MergeFrom(const CMessageObtainCharRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainCharRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBCharProfile : public ::google::protobuf::Message {
 public:
  PBCharProfile();
  virtual ~PBCharProfile();
  
  PBCharProfile(const PBCharProfile& from);
  
  inline PBCharProfile& operator=(const PBCharProfile& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCharProfile& default_instance();
  void Swap(PBCharProfile* other);
  
  // implements Message ----------------------------------------------
  
  PBCharProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCharProfile& from);
  void MergeFrom(const PBCharProfile& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 HairColour = 4;
  inline bool has_haircolour() const;
  inline void clear_haircolour();
  static const int kHairColourFieldNumber = 4;
  inline ::google::protobuf::uint32 haircolour() const;
  inline void set_haircolour(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 7;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 7;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 LastLogin = 8;
  inline bool has_lastlogin() const;
  inline void clear_lastlogin();
  static const int kLastLoginFieldNumber = 8;
  inline ::google::protobuf::uint32 lastlogin() const;
  inline void set_lastlogin(::google::protobuf::uint32 value);
  
  // optional uint32 OnlineTime = 9;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 10;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 10;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 HairType = 11;
  inline bool has_hairtype() const;
  inline void clear_hairtype();
  static const int kHairTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 hairtype() const;
  inline void set_hairtype(::google::protobuf::uint32 value);
  
  // optional uint32 FaceType = 12;
  inline bool has_facetype() const;
  inline void clear_facetype();
  static const int kFaceTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 facetype() const;
  inline void set_facetype(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 13;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 13;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional string CharName = 14;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 14;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Nationality = 15;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 15;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 RoleDeleteStatus = 16;
  inline bool has_roledeletestatus() const;
  inline void clear_roledeletestatus();
  static const int kRoleDeleteStatusFieldNumber = 16;
  inline ::google::protobuf::uint32 roledeletestatus() const;
  inline void set_roledeletestatus(::google::protobuf::uint32 value);
  
  // optional uint32 DeleteStatusLeftTime = 17;
  inline bool has_deletestatuslefttime() const;
  inline void clear_deletestatuslefttime();
  static const int kDeleteStatusLeftTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 deletestatuslefttime() const;
  inline void set_deletestatuslefttime(::google::protobuf::uint32 value);
  
  // optional uint32 PasswordUsed = 18;
  inline bool has_passwordused() const;
  inline void clear_passwordused();
  static const int kPasswordUsedFieldNumber = 18;
  inline ::google::protobuf::uint32 passwordused() const;
  inline void set_passwordused(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 haircolour_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 lastlogin_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 hairtype_;
  ::google::protobuf::uint32 facetype_;
  ::google::protobuf::uint32 mapid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 roledeletestatus_;
  ::google::protobuf::uint32 deletestatuslefttime_;
  ::google::protobuf::uint32 passwordused_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCharProfile* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainCharNotice : public ::google::protobuf::Message {
 public:
  CMessageObtainCharNotice();
  virtual ~CMessageObtainCharNotice();
  
  CMessageObtainCharNotice(const CMessageObtainCharNotice& from);
  
  inline CMessageObtainCharNotice& operator=(const CMessageObtainCharNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainCharNotice& default_instance();
  void Swap(CMessageObtainCharNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainCharNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainCharNotice& from);
  void MergeFrom(const CMessageObtainCharNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBCharProfile CharProfile = 1;
  inline int charprofile_size() const;
  inline void clear_charprofile();
  static const int kCharProfileFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCharProfile >& charprofile() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCharProfile >* mutable_charprofile();
  inline const ::PBCharProfile& charprofile(int index) const;
  inline ::PBCharProfile* mutable_charprofile(int index);
  inline ::PBCharProfile* add_charprofile();
  
  // optional uint32 LastLoginIP = 2;
  inline bool has_lastloginip() const;
  inline void clear_lastloginip();
  static const int kLastLoginIPFieldNumber = 2;
  inline ::google::protobuf::uint32 lastloginip() const;
  inline void set_lastloginip(::google::protobuf::uint32 value);
  
  // optional uint32 LoginIP = 3;
  inline bool has_loginip() const;
  inline void clear_loginip();
  static const int kLoginIPFieldNumber = 3;
  inline ::google::protobuf::uint32 loginip() const;
  inline void set_loginip(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCharProfile > charprofile_;
  ::google::protobuf::uint32 lastloginip_;
  ::google::protobuf::uint32 loginip_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainCharNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainCharCompleteNotice : public ::google::protobuf::Message {
 public:
  CMessageObtainCharCompleteNotice();
  virtual ~CMessageObtainCharCompleteNotice();
  
  CMessageObtainCharCompleteNotice(const CMessageObtainCharCompleteNotice& from);
  
  inline CMessageObtainCharCompleteNotice& operator=(const CMessageObtainCharCompleteNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainCharCompleteNotice& default_instance();
  void Swap(CMessageObtainCharCompleteNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainCharCompleteNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainCharCompleteNotice& from);
  void MergeFrom(const CMessageObtainCharCompleteNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainCharCompleteNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterGameRequest : public ::google::protobuf::Message {
 public:
  CMessageEnterGameRequest();
  virtual ~CMessageEnterGameRequest();
  
  CMessageEnterGameRequest(const CMessageEnterGameRequest& from);
  
  inline CMessageEnterGameRequest& operator=(const CMessageEnterGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterGameRequest& default_instance();
  void Swap(CMessageEnterGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterGameRequest& from);
  void MergeFrom(const CMessageEnterGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Mac = 5;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 5;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterGameResponse : public ::google::protobuf::Message {
 public:
  CMessageEnterGameResponse();
  virtual ~CMessageEnterGameResponse();
  
  CMessageEnterGameResponse(const CMessageEnterGameResponse& from);
  
  inline CMessageEnterGameResponse& operator=(const CMessageEnterGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterGameResponse& default_instance();
  void Swap(CMessageEnterGameResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterGameResponse& from);
  void MergeFrom(const CMessageEnterGameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SceneName = 1;
  inline bool has_scenename() const;
  inline void clear_scenename();
  static const int kSceneNameFieldNumber = 1;
  inline const ::std::string& scenename() const;
  inline void set_scenename(const ::std::string& value);
  inline void set_scenename(const char* value);
  inline void set_scenename(const char* value, size_t size);
  inline ::std::string* mutable_scenename();
  
  // optional string Address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
  // optional uint32 ClearDialog = 3;
  inline bool has_cleardialog() const;
  inline void clear_cleardialog();
  static const int kClearDialogFieldNumber = 3;
  inline ::google::protobuf::uint32 cleardialog() const;
  inline void set_cleardialog(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* scenename_;
  static const ::std::string _default_scenename_;
  ::std::string* address_;
  static const ::std::string _default_address_;
  ::google::protobuf::uint32 cleardialog_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginSceneRequest : public ::google::protobuf::Message {
 public:
  CMessageLoginSceneRequest();
  virtual ~CMessageLoginSceneRequest();
  
  CMessageLoginSceneRequest(const CMessageLoginSceneRequest& from);
  
  inline CMessageLoginSceneRequest& operator=(const CMessageLoginSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginSceneRequest& default_instance();
  void Swap(CMessageLoginSceneRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginSceneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginSceneRequest& from);
  void MergeFrom(const CMessageLoginSceneRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 3;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 3;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 logintoken_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginSceneRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginSceneResponse : public ::google::protobuf::Message {
 public:
  CMessageLoginSceneResponse();
  virtual ~CMessageLoginSceneResponse();
  
  CMessageLoginSceneResponse(const CMessageLoginSceneResponse& from);
  
  inline CMessageLoginSceneResponse& operator=(const CMessageLoginSceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginSceneResponse& default_instance();
  void Swap(CMessageLoginSceneResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginSceneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginSceneResponse& from);
  void MergeFrom(const CMessageLoginSceneResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  
  // optional uint32 CSDialogID = 2;
  inline bool has_csdialogid() const;
  inline void clear_csdialogid();
  static const int kCSDialogIDFieldNumber = 2;
  inline ::google::protobuf::uint32 csdialogid() const;
  inline void set_csdialogid(::google::protobuf::uint32 value);
  
  // optional uint64 ServerTime = 3;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 servertime() const;
  inline void set_servertime(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* key_;
  static const ::std::string _default_key_;
  ::google::protobuf::uint32 csdialogid_;
  ::google::protobuf::uint64 servertime_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginSceneResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReturn2GateRequest : public ::google::protobuf::Message {
 public:
  CMessageReturn2GateRequest();
  virtual ~CMessageReturn2GateRequest();
  
  CMessageReturn2GateRequest(const CMessageReturn2GateRequest& from);
  
  inline CMessageReturn2GateRequest& operator=(const CMessageReturn2GateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReturn2GateRequest& default_instance();
  void Swap(CMessageReturn2GateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReturn2GateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReturn2GateRequest& from);
  void MergeFrom(const CMessageReturn2GateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReturn2GateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReturn2GateResponse : public ::google::protobuf::Message {
 public:
  CMessageReturn2GateResponse();
  virtual ~CMessageReturn2GateResponse();
  
  CMessageReturn2GateResponse(const CMessageReturn2GateResponse& from);
  
  inline CMessageReturn2GateResponse& operator=(const CMessageReturn2GateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReturn2GateResponse& default_instance();
  void Swap(CMessageReturn2GateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReturn2GateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReturn2GateResponse& from);
  void MergeFrom(const CMessageReturn2GateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ReturnType = 1;
  inline bool has_returntype() const;
  inline void clear_returntype();
  static const int kReturnTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 returntype() const;
  inline void set_returntype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 returntype_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReturn2GateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateCharRequest : public ::google::protobuf::Message {
 public:
  CMessageCreateCharRequest();
  virtual ~CMessageCreateCharRequest();
  
  CMessageCreateCharRequest(const CMessageCreateCharRequest& from);
  
  inline CMessageCreateCharRequest& operator=(const CMessageCreateCharRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateCharRequest& default_instance();
  void Swap(CMessageCreateCharRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateCharRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateCharRequest& from);
  void MergeFrom(const CMessageCreateCharRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBCharProfile Profile = 1;
  inline bool has_profile() const;
  inline void clear_profile();
  static const int kProfileFieldNumber = 1;
  inline const ::PBCharProfile& profile() const;
  inline ::PBCharProfile* mutable_profile();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBCharProfile* profile_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateCharRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateCharResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateCharResponse();
  virtual ~CMessageCreateCharResponse();
  
  CMessageCreateCharResponse(const CMessageCreateCharResponse& from);
  
  inline CMessageCreateCharResponse& operator=(const CMessageCreateCharResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateCharResponse& default_instance();
  void Swap(CMessageCreateCharResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateCharResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateCharResponse& from);
  void MergeFrom(const CMessageCreateCharResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateCharResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDeleteCharRequest : public ::google::protobuf::Message {
 public:
  CMessageDeleteCharRequest();
  virtual ~CMessageDeleteCharRequest();
  
  CMessageDeleteCharRequest(const CMessageDeleteCharRequest& from);
  
  inline CMessageDeleteCharRequest& operator=(const CMessageDeleteCharRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeleteCharRequest& default_instance();
  void Swap(CMessageDeleteCharRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDeleteCharRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDeleteCharRequest& from);
  void MergeFrom(const CMessageDeleteCharRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PasswdType = 1;
  inline bool has_passwdtype() const;
  inline void clear_passwdtype();
  static const int kPasswdTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 passwdtype() const;
  inline void set_passwdtype(::google::protobuf::uint32 value);
  
  // optional string Passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 passwdtype_;
  ::std::string* passwd_;
  static const ::std::string _default_passwd_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDeleteCharRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDeleteCharResponse : public ::google::protobuf::Message {
 public:
  CMessageDeleteCharResponse();
  virtual ~CMessageDeleteCharResponse();
  
  CMessageDeleteCharResponse(const CMessageDeleteCharResponse& from);
  
  inline CMessageDeleteCharResponse& operator=(const CMessageDeleteCharResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeleteCharResponse& default_instance();
  void Swap(CMessageDeleteCharResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDeleteCharResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDeleteCharResponse& from);
  void MergeFrom(const CMessageDeleteCharResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 DeleteStatus = 3;
  inline bool has_deletestatus() const;
  inline void clear_deletestatus();
  static const int kDeleteStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 deletestatus() const;
  inline void set_deletestatus(::google::protobuf::uint32 value);
  
  // optional uint32 DeleteStatusLeftTime = 4;
  inline bool has_deletestatuslefttime() const;
  inline void clear_deletestatuslefttime();
  static const int kDeleteStatusLeftTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 deletestatuslefttime() const;
  inline void set_deletestatuslefttime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 deletestatus_;
  ::google::protobuf::uint32 deletestatuslefttime_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDeleteCharResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReconnectSceneNotice : public ::google::protobuf::Message {
 public:
  CMessageReconnectSceneNotice();
  virtual ~CMessageReconnectSceneNotice();
  
  CMessageReconnectSceneNotice(const CMessageReconnectSceneNotice& from);
  
  inline CMessageReconnectSceneNotice& operator=(const CMessageReconnectSceneNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReconnectSceneNotice& default_instance();
  void Swap(CMessageReconnectSceneNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReconnectSceneNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReconnectSceneNotice& from);
  void MergeFrom(const CMessageReconnectSceneNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional string Address = 3;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 3;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional string CountryName = 6;
  inline bool has_countryname() const;
  inline void clear_countryname();
  static const int kCountryNameFieldNumber = 6;
  inline const ::std::string& countryname() const;
  inline void set_countryname(const ::std::string& value);
  inline void set_countryname(const char* value);
  inline void set_countryname(const char* value, size_t size);
  inline ::std::string* mutable_countryname();
  
  // optional string MapName = 7;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapNameFieldNumber = 7;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 lineid_;
  ::std::string* address_;
  static const ::std::string _default_address_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 posx_;
  ::std::string* countryname_;
  static const ::std::string _default_countryname_;
  ::std::string* mapname_;
  static const ::std::string _default_mapname_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReconnectSceneNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectSceneRequest : public ::google::protobuf::Message {
 public:
  CMessageRedirectSceneRequest();
  virtual ~CMessageRedirectSceneRequest();
  
  CMessageRedirectSceneRequest(const CMessageRedirectSceneRequest& from);
  
  inline CMessageRedirectSceneRequest& operator=(const CMessageRedirectSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectSceneRequest& default_instance();
  void Swap(CMessageRedirectSceneRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectSceneRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectSceneRequest& from);
  void MergeFrom(const CMessageRedirectSceneRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 2;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 2;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectSceneRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectSceneResponse : public ::google::protobuf::Message {
 public:
  CMessageRedirectSceneResponse();
  virtual ~CMessageRedirectSceneResponse();
  
  CMessageRedirectSceneResponse(const CMessageRedirectSceneResponse& from);
  
  inline CMessageRedirectSceneResponse& operator=(const CMessageRedirectSceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectSceneResponse& default_instance();
  void Swap(CMessageRedirectSceneResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectSceneResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectSceneResponse& from);
  void MergeFrom(const CMessageRedirectSceneResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectSceneResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveGameRequest : public ::google::protobuf::Message {
 public:
  CMessageLeaveGameRequest();
  virtual ~CMessageLeaveGameRequest();
  
  CMessageLeaveGameRequest(const CMessageLeaveGameRequest& from);
  
  inline CMessageLeaveGameRequest& operator=(const CMessageLeaveGameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveGameRequest& default_instance();
  void Swap(CMessageLeaveGameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveGameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveGameRequest& from);
  void MergeFrom(const CMessageLeaveGameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LeaveType = 1;
  inline bool has_leavetype() const;
  inline void clear_leavetype();
  static const int kLeaveTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 leavetype() const;
  inline void set_leavetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 leavetype_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveGameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveGameResponse : public ::google::protobuf::Message {
 public:
  CMessageLeaveGameResponse();
  virtual ~CMessageLeaveGameResponse();
  
  CMessageLeaveGameResponse(const CMessageLeaveGameResponse& from);
  
  inline CMessageLeaveGameResponse& operator=(const CMessageLeaveGameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveGameResponse& default_instance();
  void Swap(CMessageLeaveGameResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveGameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveGameResponse& from);
  void MergeFrom(const CMessageLeaveGameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveGameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickoutNotice : public ::google::protobuf::Message {
 public:
  CMessageKickoutNotice();
  virtual ~CMessageKickoutNotice();
  
  CMessageKickoutNotice(const CMessageKickoutNotice& from);
  
  inline CMessageKickoutNotice& operator=(const CMessageKickoutNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickoutNotice& default_instance();
  void Swap(CMessageKickoutNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickoutNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickoutNotice& from);
  void MergeFrom(const CMessageKickoutNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional uint32 param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickoutNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClientPingServerRequest : public ::google::protobuf::Message {
 public:
  CMessageClientPingServerRequest();
  virtual ~CMessageClientPingServerRequest();
  
  CMessageClientPingServerRequest(const CMessageClientPingServerRequest& from);
  
  inline CMessageClientPingServerRequest& operator=(const CMessageClientPingServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClientPingServerRequest& default_instance();
  void Swap(CMessageClientPingServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClientPingServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClientPingServerRequest& from);
  void MergeFrom(const CMessageClientPingServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LatestPingValue = 2;
  inline bool has_latestpingvalue() const;
  inline void clear_latestpingvalue();
  static const int kLatestPingValueFieldNumber = 2;
  inline ::google::protobuf::uint32 latestpingvalue() const;
  inline void set_latestpingvalue(::google::protobuf::uint32 value);
  
  // optional uint64 ClientLocalTime = 3;
  inline bool has_clientlocaltime() const;
  inline void clear_clientlocaltime();
  static const int kClientLocalTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 clientlocaltime() const;
  inline void set_clientlocaltime(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 latestpingvalue_;
  ::google::protobuf::uint64 clientlocaltime_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClientPingServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClientPingServerResponse : public ::google::protobuf::Message {
 public:
  CMessageClientPingServerResponse();
  virtual ~CMessageClientPingServerResponse();
  
  CMessageClientPingServerResponse(const CMessageClientPingServerResponse& from);
  
  inline CMessageClientPingServerResponse& operator=(const CMessageClientPingServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClientPingServerResponse& default_instance();
  void Swap(CMessageClientPingServerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClientPingServerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClientPingServerResponse& from);
  void MergeFrom(const CMessageClientPingServerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint64 ClientLocalTime = 2;
  inline bool has_clientlocaltime() const;
  inline void clear_clientlocaltime();
  static const int kClientLocalTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 clientlocaltime() const;
  inline void set_clientlocaltime(::google::protobuf::uint64 value);
  
  // optional uint64 ServerTime = 3;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 servertime() const;
  inline void set_servertime(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint64 clientlocaltime_;
  ::google::protobuf::uint64 servertime_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClientPingServerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateKickPlayerNotify : public ::google::protobuf::Message {
 public:
  CMessageGateKickPlayerNotify();
  virtual ~CMessageGateKickPlayerNotify();
  
  CMessageGateKickPlayerNotify(const CMessageGateKickPlayerNotify& from);
  
  inline CMessageGateKickPlayerNotify& operator=(const CMessageGateKickPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateKickPlayerNotify& default_instance();
  void Swap(CMessageGateKickPlayerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateKickPlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateKickPlayerNotify& from);
  void MergeFrom(const CMessageGateKickPlayerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 KickReason = 2;
  inline bool has_kickreason() const;
  inline void clear_kickreason();
  static const int kKickReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 kickreason() const;
  inline void set_kickreason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 kickreason_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateKickPlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueuePlayerNotify : public ::google::protobuf::Message {
 public:
  CMessageQueuePlayerNotify();
  virtual ~CMessageQueuePlayerNotify();
  
  CMessageQueuePlayerNotify(const CMessageQueuePlayerNotify& from);
  
  inline CMessageQueuePlayerNotify& operator=(const CMessageQueuePlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueuePlayerNotify& default_instance();
  void Swap(CMessageQueuePlayerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueuePlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueuePlayerNotify& from);
  void MergeFrom(const CMessageQueuePlayerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CountInScene = 1;
  inline bool has_countinscene() const;
  inline void clear_countinscene();
  static const int kCountInSceneFieldNumber = 1;
  inline ::google::protobuf::uint32 countinscene() const;
  inline void set_countinscene(::google::protobuf::uint32 value);
  
  // optional uint32 ElapsSeconds = 2;
  inline bool has_elapsseconds() const;
  inline void clear_elapsseconds();
  static const int kElapsSecondsFieldNumber = 2;
  inline ::google::protobuf::uint32 elapsseconds() const;
  inline void set_elapsseconds(::google::protobuf::uint32 value);
  
  // optional uint32 NeedSeconds = 3;
  inline bool has_needseconds() const;
  inline void clear_needseconds();
  static const int kNeedSecondsFieldNumber = 3;
  inline ::google::protobuf::uint32 needseconds() const;
  inline void set_needseconds(::google::protobuf::uint32 value);
  
  // optional uint32 YourPosition = 4;
  inline bool has_yourposition() const;
  inline void clear_yourposition();
  static const int kYourPositionFieldNumber = 4;
  inline ::google::protobuf::uint32 yourposition() const;
  inline void set_yourposition(::google::protobuf::uint32 value);
  
  // optional uint32 CountInQueue = 5;
  inline bool has_countinqueue() const;
  inline void clear_countinqueue();
  static const int kCountInQueueFieldNumber = 5;
  inline ::google::protobuf::uint32 countinqueue() const;
  inline void set_countinqueue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 countinscene_;
  ::google::protobuf::uint32 elapsseconds_;
  ::google::protobuf::uint32 needseconds_;
  ::google::protobuf::uint32 yourposition_;
  ::google::protobuf::uint32 countinqueue_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueuePlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerCancelLoginQueue : public ::google::protobuf::Message {
 public:
  CMessagePlayerCancelLoginQueue();
  virtual ~CMessagePlayerCancelLoginQueue();
  
  CMessagePlayerCancelLoginQueue(const CMessagePlayerCancelLoginQueue& from);
  
  inline CMessagePlayerCancelLoginQueue& operator=(const CMessagePlayerCancelLoginQueue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerCancelLoginQueue& default_instance();
  void Swap(CMessagePlayerCancelLoginQueue* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerCancelLoginQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerCancelLoginQueue& from);
  void MergeFrom(const CMessagePlayerCancelLoginQueue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerCancelLoginQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCheckRolePwdRequest : public ::google::protobuf::Message {
 public:
  CMessageCheckRolePwdRequest();
  virtual ~CMessageCheckRolePwdRequest();
  
  CMessageCheckRolePwdRequest(const CMessageCheckRolePwdRequest& from);
  
  inline CMessageCheckRolePwdRequest& operator=(const CMessageCheckRolePwdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCheckRolePwdRequest& default_instance();
  void Swap(CMessageCheckRolePwdRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCheckRolePwdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCheckRolePwdRequest& from);
  void MergeFrom(const CMessageCheckRolePwdRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCheckRolePwdRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCheckRolePwdResponse : public ::google::protobuf::Message {
 public:
  CMessageCheckRolePwdResponse();
  virtual ~CMessageCheckRolePwdResponse();
  
  CMessageCheckRolePwdResponse(const CMessageCheckRolePwdResponse& from);
  
  inline CMessageCheckRolePwdResponse& operator=(const CMessageCheckRolePwdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCheckRolePwdResponse& default_instance();
  void Swap(CMessageCheckRolePwdResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCheckRolePwdResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCheckRolePwdResponse& from);
  void MergeFrom(const CMessageCheckRolePwdResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCheckRolePwdResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendClientInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageSendClientInfoRequest();
  virtual ~CMessageSendClientInfoRequest();
  
  CMessageSendClientInfoRequest(const CMessageSendClientInfoRequest& from);
  
  inline CMessageSendClientInfoRequest& operator=(const CMessageSendClientInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendClientInfoRequest& default_instance();
  void Swap(CMessageSendClientInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendClientInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendClientInfoRequest& from);
  void MergeFrom(const CMessageSendClientInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string HostInfo = 1;
  inline bool has_hostinfo() const;
  inline void clear_hostinfo();
  static const int kHostInfoFieldNumber = 1;
  inline const ::std::string& hostinfo() const;
  inline void set_hostinfo(const ::std::string& value);
  inline void set_hostinfo(const char* value);
  inline void set_hostinfo(const char* value, size_t size);
  inline ::std::string* mutable_hostinfo();
  
  // optional string MacAddr = 2;
  inline bool has_macaddr() const;
  inline void clear_macaddr();
  static const int kMacAddrFieldNumber = 2;
  inline const ::std::string& macaddr() const;
  inline void set_macaddr(const ::std::string& value);
  inline void set_macaddr(const char* value);
  inline void set_macaddr(const char* value, size_t size);
  inline ::std::string* mutable_macaddr();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* hostinfo_;
  static const ::std::string _default_hostinfo_;
  ::std::string* macaddr_;
  static const ::std::string _default_macaddr_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendClientInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendAntiBotDataToServerNotify : public ::google::protobuf::Message {
 public:
  CMessageSendAntiBotDataToServerNotify();
  virtual ~CMessageSendAntiBotDataToServerNotify();
  
  CMessageSendAntiBotDataToServerNotify(const CMessageSendAntiBotDataToServerNotify& from);
  
  inline CMessageSendAntiBotDataToServerNotify& operator=(const CMessageSendAntiBotDataToServerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendAntiBotDataToServerNotify& default_instance();
  void Swap(CMessageSendAntiBotDataToServerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendAntiBotDataToServerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendAntiBotDataToServerNotify& from);
  void MergeFrom(const CMessageSendAntiBotDataToServerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);
  
  // optional bytes ClientData = 2;
  inline bool has_clientdata() const;
  inline void clear_clientdata();
  static const int kClientDataFieldNumber = 2;
  inline const ::std::string& clientdata() const;
  inline void set_clientdata(const ::std::string& value);
  inline void set_clientdata(const char* value);
  inline void set_clientdata(const void* value, size_t size);
  inline ::std::string* mutable_clientdata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 length_;
  ::std::string* clientdata_;
  static const ::std::string _default_clientdata_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendAntiBotDataToServerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendAntiBotDataToClientNotify : public ::google::protobuf::Message {
 public:
  CMessageSendAntiBotDataToClientNotify();
  virtual ~CMessageSendAntiBotDataToClientNotify();
  
  CMessageSendAntiBotDataToClientNotify(const CMessageSendAntiBotDataToClientNotify& from);
  
  inline CMessageSendAntiBotDataToClientNotify& operator=(const CMessageSendAntiBotDataToClientNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendAntiBotDataToClientNotify& default_instance();
  void Swap(CMessageSendAntiBotDataToClientNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendAntiBotDataToClientNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendAntiBotDataToClientNotify& from);
  void MergeFrom(const CMessageSendAntiBotDataToClientNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes ServerData = 1;
  inline bool has_serverdata() const;
  inline void clear_serverdata();
  static const int kServerDataFieldNumber = 1;
  inline const ::std::string& serverdata() const;
  inline void set_serverdata(const ::std::string& value);
  inline void set_serverdata(const char* value);
  inline void set_serverdata(const void* value, size_t size);
  inline ::std::string* mutable_serverdata();
  
  // optional uint32 Length = 2;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 2;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* serverdata_;
  static const ::std::string _default_serverdata_;
  ::google::protobuf::uint32 length_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendAntiBotDataToClientNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClientAntiBotStartRetNotify : public ::google::protobuf::Message {
 public:
  CMessageClientAntiBotStartRetNotify();
  virtual ~CMessageClientAntiBotStartRetNotify();
  
  CMessageClientAntiBotStartRetNotify(const CMessageClientAntiBotStartRetNotify& from);
  
  inline CMessageClientAntiBotStartRetNotify& operator=(const CMessageClientAntiBotStartRetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClientAntiBotStartRetNotify& default_instance();
  void Swap(CMessageClientAntiBotStartRetNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClientAntiBotStartRetNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClientAntiBotStartRetNotify& from);
  void MergeFrom(const CMessageClientAntiBotStartRetNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StartRet = 1;
  inline bool has_startret() const;
  inline void clear_startret();
  static const int kStartRetFieldNumber = 1;
  inline ::google::protobuf::uint32 startret() const;
  inline void set_startret(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 startret_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClientAntiBotStartRetNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisconnectNotify : public ::google::protobuf::Message {
 public:
  CMessageDisconnectNotify();
  virtual ~CMessageDisconnectNotify();
  
  CMessageDisconnectNotify(const CMessageDisconnectNotify& from);
  
  inline CMessageDisconnectNotify& operator=(const CMessageDisconnectNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisconnectNotify& default_instance();
  void Swap(CMessageDisconnectNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisconnectNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisconnectNotify& from);
  void MergeFrom(const CMessageDisconnectNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisconnectNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserAuthNotify : public ::google::protobuf::Message {
 public:
  CMessageUserAuthNotify();
  virtual ~CMessageUserAuthNotify();
  
  CMessageUserAuthNotify(const CMessageUserAuthNotify& from);
  
  inline CMessageUserAuthNotify& operator=(const CMessageUserAuthNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserAuthNotify& default_instance();
  void Swap(CMessageUserAuthNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserAuthNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserAuthNotify& from);
  void MergeFrom(const CMessageUserAuthNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActionID = 1;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);
  
  // optional uint32 AuthType = 2;
  inline bool has_authtype() const;
  inline void clear_authtype();
  static const int kAuthTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 authtype() const;
  inline void set_authtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 actionid_;
  ::google::protobuf::uint32 authtype_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserAuthNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserAuthRequest : public ::google::protobuf::Message {
 public:
  CMessageUserAuthRequest();
  virtual ~CMessageUserAuthRequest();
  
  CMessageUserAuthRequest(const CMessageUserAuthRequest& from);
  
  inline CMessageUserAuthRequest& operator=(const CMessageUserAuthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserAuthRequest& default_instance();
  void Swap(CMessageUserAuthRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserAuthRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserAuthRequest& from);
  void MergeFrom(const CMessageUserAuthRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActionID = 1;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);
  
  // optional uint32 AuthValue = 2;
  inline bool has_authvalue() const;
  inline void clear_authvalue();
  static const int kAuthValueFieldNumber = 2;
  inline ::google::protobuf::uint32 authvalue() const;
  inline void set_authvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 actionid_;
  ::google::protobuf::uint32 authvalue_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserAuthRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserAuthResponse : public ::google::protobuf::Message {
 public:
  CMessageUserAuthResponse();
  virtual ~CMessageUserAuthResponse();
  
  CMessageUserAuthResponse(const CMessageUserAuthResponse& from);
  
  inline CMessageUserAuthResponse& operator=(const CMessageUserAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserAuthResponse& default_instance();
  void Swap(CMessageUserAuthResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserAuthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserAuthResponse& from);
  void MergeFrom(const CMessageUserAuthResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActionID = 1;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);
  
  // optional uint32 OK = 2;
  inline bool has_ok() const;
  inline void clear_ok();
  static const int kOKFieldNumber = 2;
  inline ::google::protobuf::uint32 ok() const;
  inline void set_ok(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 actionid_;
  ::google::protobuf::uint32 ok_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCancelDeleteRoleRequest : public ::google::protobuf::Message {
 public:
  CMessageCancelDeleteRoleRequest();
  virtual ~CMessageCancelDeleteRoleRequest();
  
  CMessageCancelDeleteRoleRequest(const CMessageCancelDeleteRoleRequest& from);
  
  inline CMessageCancelDeleteRoleRequest& operator=(const CMessageCancelDeleteRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCancelDeleteRoleRequest& default_instance();
  void Swap(CMessageCancelDeleteRoleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCancelDeleteRoleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCancelDeleteRoleRequest& from);
  void MergeFrom(const CMessageCancelDeleteRoleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCancelDeleteRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCancelDeleteRoleResponse : public ::google::protobuf::Message {
 public:
  CMessageCancelDeleteRoleResponse();
  virtual ~CMessageCancelDeleteRoleResponse();
  
  CMessageCancelDeleteRoleResponse(const CMessageCancelDeleteRoleResponse& from);
  
  inline CMessageCancelDeleteRoleResponse& operator=(const CMessageCancelDeleteRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCancelDeleteRoleResponse& default_instance();
  void Swap(CMessageCancelDeleteRoleResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCancelDeleteRoleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCancelDeleteRoleResponse& from);
  void MergeFrom(const CMessageCancelDeleteRoleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCancelDeleteRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuestionRequireRequest : public ::google::protobuf::Message {
 public:
  CMessageQuestionRequireRequest();
  virtual ~CMessageQuestionRequireRequest();
  
  CMessageQuestionRequireRequest(const CMessageQuestionRequireRequest& from);
  
  inline CMessageQuestionRequireRequest& operator=(const CMessageQuestionRequireRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuestionRequireRequest& default_instance();
  void Swap(CMessageQuestionRequireRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuestionRequireRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuestionRequireRequest& from);
  void MergeFrom(const CMessageQuestionRequireRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuestionRequireRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuestionRequireResponse : public ::google::protobuf::Message {
 public:
  CMessageQuestionRequireResponse();
  virtual ~CMessageQuestionRequireResponse();
  
  CMessageQuestionRequireResponse(const CMessageQuestionRequireResponse& from);
  
  inline CMessageQuestionRequireResponse& operator=(const CMessageQuestionRequireResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuestionRequireResponse& default_instance();
  void Swap(CMessageQuestionRequireResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuestionRequireResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuestionRequireResponse& from);
  void MergeFrom(const CMessageQuestionRequireResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageQuestionRequireResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageQuestionRequireResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_WAIT = CMessageQuestionRequireResponse_EStatus_STATUS_WAIT;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageQuestionRequireResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageQuestionRequireResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageQuestionRequireResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageQuestionRequireResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageQuestionRequireResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageQuestionRequireResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageQuestionRequireResponse.EStatus Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageQuestionRequireResponse_EStatus status() const;
  inline void set_status(::CMessageQuestionRequireResponse_EStatus value);
  
  // optional uint32 QuestionId = 2;
  inline bool has_questionid() const;
  inline void clear_questionid();
  static const int kQuestionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 questionid() const;
  inline void set_questionid(::google::protobuf::uint32 value);
  
  // optional string Question = 3;
  inline bool has_question() const;
  inline void clear_question();
  static const int kQuestionFieldNumber = 3;
  inline const ::std::string& question() const;
  inline void set_question(const ::std::string& value);
  inline void set_question(const char* value);
  inline void set_question(const char* value, size_t size);
  inline ::std::string* mutable_question();
  
  // optional bytes OptionA = 4;
  inline bool has_optiona() const;
  inline void clear_optiona();
  static const int kOptionAFieldNumber = 4;
  inline const ::std::string& optiona() const;
  inline void set_optiona(const ::std::string& value);
  inline void set_optiona(const char* value);
  inline void set_optiona(const void* value, size_t size);
  inline ::std::string* mutable_optiona();
  
  // optional bytes OptionB = 5;
  inline bool has_optionb() const;
  inline void clear_optionb();
  static const int kOptionBFieldNumber = 5;
  inline const ::std::string& optionb() const;
  inline void set_optionb(const ::std::string& value);
  inline void set_optionb(const char* value);
  inline void set_optionb(const void* value, size_t size);
  inline ::std::string* mutable_optionb();
  
  // optional bytes OptionC = 6;
  inline bool has_optionc() const;
  inline void clear_optionc();
  static const int kOptionCFieldNumber = 6;
  inline const ::std::string& optionc() const;
  inline void set_optionc(const ::std::string& value);
  inline void set_optionc(const char* value);
  inline void set_optionc(const void* value, size_t size);
  inline ::std::string* mutable_optionc();
  
  // optional bytes OptionD = 7;
  inline bool has_optiond() const;
  inline void clear_optiond();
  static const int kOptionDFieldNumber = 7;
  inline const ::std::string& optiond() const;
  inline void set_optiond(const ::std::string& value);
  inline void set_optiond(const char* value);
  inline void set_optiond(const void* value, size_t size);
  inline ::std::string* mutable_optiond();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 questionid_;
  ::std::string* question_;
  static const ::std::string _default_question_;
  ::std::string* optiona_;
  static const ::std::string _default_optiona_;
  ::std::string* optionb_;
  static const ::std::string _default_optionb_;
  ::std::string* optionc_;
  static const ::std::string _default_optionc_;
  ::std::string* optiond_;
  static const ::std::string _default_optiond_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuestionRequireResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuestionAnswerRequest : public ::google::protobuf::Message {
 public:
  CMessageQuestionAnswerRequest();
  virtual ~CMessageQuestionAnswerRequest();
  
  CMessageQuestionAnswerRequest(const CMessageQuestionAnswerRequest& from);
  
  inline CMessageQuestionAnswerRequest& operator=(const CMessageQuestionAnswerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuestionAnswerRequest& default_instance();
  void Swap(CMessageQuestionAnswerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuestionAnswerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuestionAnswerRequest& from);
  void MergeFrom(const CMessageQuestionAnswerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageQuestionAnswerRequest_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageQuestionAnswerRequest_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_WAIT = CMessageQuestionAnswerRequest_EStatus_STATUS_WAIT;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageQuestionAnswerRequest_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageQuestionAnswerRequest_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageQuestionAnswerRequest_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageQuestionAnswerRequest_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageQuestionAnswerRequest_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageQuestionAnswerRequest_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 QuestionId = 1;
  inline bool has_questionid() const;
  inline void clear_questionid();
  static const int kQuestionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 questionid() const;
  inline void set_questionid(::google::protobuf::uint32 value);
  
  // optional bytes Answer = 2;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 2;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const void* value, size_t size);
  inline ::std::string* mutable_answer();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 questionid_;
  ::std::string* answer_;
  static const ::std::string _default_answer_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuestionAnswerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuestionAnswerResponse : public ::google::protobuf::Message {
 public:
  CMessageQuestionAnswerResponse();
  virtual ~CMessageQuestionAnswerResponse();
  
  CMessageQuestionAnswerResponse(const CMessageQuestionAnswerResponse& from);
  
  inline CMessageQuestionAnswerResponse& operator=(const CMessageQuestionAnswerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuestionAnswerResponse& default_instance();
  void Swap(CMessageQuestionAnswerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuestionAnswerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuestionAnswerResponse& from);
  void MergeFrom(const CMessageQuestionAnswerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageQuestionAnswerResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageQuestionAnswerResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_WAIT = CMessageQuestionAnswerResponse_EStatus_STATUS_WAIT;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageQuestionAnswerResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageQuestionAnswerResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageQuestionAnswerResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageQuestionAnswerResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageQuestionAnswerResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageQuestionAnswerResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageQuestionAnswerResponse.EStatus Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageQuestionAnswerResponse_EStatus status() const;
  inline void set_status(::CMessageQuestionAnswerResponse_EStatus value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuestionAnswerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginServerInfo : public ::google::protobuf::Message {
 public:
  CMessageLoginServerInfo();
  virtual ~CMessageLoginServerInfo();
  
  CMessageLoginServerInfo(const CMessageLoginServerInfo& from);
  
  inline CMessageLoginServerInfo& operator=(const CMessageLoginServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginServerInfo& default_instance();
  void Swap(CMessageLoginServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginServerInfo& from);
  void MergeFrom(const CMessageLoginServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyRequest : public ::google::protobuf::Message {
 public:
  CMessageCertifyRequest();
  virtual ~CMessageCertifyRequest();
  
  CMessageCertifyRequest(const CMessageCertifyRequest& from);
  
  inline CMessageCertifyRequest& operator=(const CMessageCertifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyRequest& default_instance();
  void Swap(CMessageCertifyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyRequest& from);
  void MergeFrom(const CMessageCertifyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string passport = 1;
  inline bool has_passport() const;
  inline void clear_passport();
  static const int kPassportFieldNumber = 1;
  inline const ::std::string& passport() const;
  inline void set_passport(const ::std::string& value);
  inline void set_passport(const char* value);
  inline void set_passport(const char* value, size_t size);
  inline ::std::string* mutable_passport();
  
  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional string md5Code = 3;
  inline bool has_md5code() const;
  inline void clear_md5code();
  static const int kMd5CodeFieldNumber = 3;
  inline const ::std::string& md5code() const;
  inline void set_md5code(const ::std::string& value);
  inline void set_md5code(const char* value);
  inline void set_md5code(const char* value, size_t size);
  inline ::std::string* mutable_md5code();
  
  // optional string mac = 4;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 4;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
  // optional int32 sourceId = 5;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 5;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);
  
  // optional uint32 version = 6;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional uint32 taskVersion = 7;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 7;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
  // optional uint32 templateVersion = 8;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 8;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 matrixType = 9;
  inline bool has_matrixtype() const;
  inline void clear_matrixtype();
  static const int kMatrixTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 matrixtype() const;
  inline void set_matrixtype(::google::protobuf::uint32 value);
  
  // optional string matrixCode = 10;
  inline bool has_matrixcode() const;
  inline void clear_matrixcode();
  static const int kMatrixCodeFieldNumber = 10;
  inline const ::std::string& matrixcode() const;
  inline void set_matrixcode(const ::std::string& value);
  inline void set_matrixcode(const char* value);
  inline void set_matrixcode(const char* value, size_t size);
  inline ::std::string* mutable_matrixcode();
  
  // optional string matrixCoord = 11;
  inline bool has_matrixcoord() const;
  inline void clear_matrixcoord();
  static const int kMatrixCoordFieldNumber = 11;
  inline const ::std::string& matrixcoord() const;
  inline void set_matrixcoord(const ::std::string& value);
  inline void set_matrixcoord(const char* value);
  inline void set_matrixcoord(const char* value, size_t size);
  inline ::std::string* mutable_matrixcoord();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* passport_;
  static const ::std::string _default_passport_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::std::string* md5code_;
  static const ::std::string _default_md5code_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 taskversion_;
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 matrixtype_;
  ::std::string* matrixcode_;
  static const ::std::string _default_matrixcode_;
  ::std::string* matrixcoord_;
  static const ::std::string _default_matrixcoord_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyResponse : public ::google::protobuf::Message {
 public:
  CMessageCertifyResponse();
  virtual ~CMessageCertifyResponse();
  
  CMessageCertifyResponse(const CMessageCertifyResponse& from);
  
  inline CMessageCertifyResponse& operator=(const CMessageCertifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyResponse& default_instance();
  void Swap(CMessageCertifyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyResponse& from);
  void MergeFrom(const CMessageCertifyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageCertifyResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageCertifyResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_INVALID = CMessageCertifyResponse_EStatus_STATUS_INVALID;
  static const EStatus STATUS_FAILURE = CMessageCertifyResponse_EStatus_STATUS_FAILURE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageCertifyResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageCertifyResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageCertifyResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageCertifyResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageCertifyResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageCertifyResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageCertifyResponse.EStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageCertifyResponse_EStatus status() const;
  inline void set_status(::CMessageCertifyResponse_EStatus value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 token = 4;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 4;
  inline ::google::protobuf::uint32 token() const;
  inline void set_token(::google::protobuf::uint32 value);
  
  // repeated .CMessageLoginServerInfo servers = 5;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::CMessageLoginServerInfo >& servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMessageLoginServerInfo >* mutable_servers();
  inline const ::CMessageLoginServerInfo& servers(int index) const;
  inline ::CMessageLoginServerInfo* mutable_servers(int index);
  inline ::CMessageLoginServerInfo* add_servers();
  
  // optional uint32 errorCode = 6;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 6;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 token_;
  ::google::protobuf::RepeatedPtrField< ::CMessageLoginServerInfo > servers_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyQueryRequest : public ::google::protobuf::Message {
 public:
  CMessageCertifyQueryRequest();
  virtual ~CMessageCertifyQueryRequest();
  
  CMessageCertifyQueryRequest(const CMessageCertifyQueryRequest& from);
  
  inline CMessageCertifyQueryRequest& operator=(const CMessageCertifyQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyQueryRequest& default_instance();
  void Swap(CMessageCertifyQueryRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyQueryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyQueryRequest& from);
  void MergeFrom(const CMessageCertifyQueryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional string passport = 3;
  inline bool has_passport() const;
  inline void clear_passport();
  static const int kPassportFieldNumber = 3;
  inline const ::std::string& passport() const;
  inline void set_passport(const ::std::string& value);
  inline void set_passport(const char* value);
  inline void set_passport(const char* value, size_t size);
  inline ::std::string* mutable_passport();
  
  // optional string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional string md5Code = 5;
  inline bool has_md5code() const;
  inline void clear_md5code();
  static const int kMd5CodeFieldNumber = 5;
  inline const ::std::string& md5code() const;
  inline void set_md5code(const ::std::string& value);
  inline void set_md5code(const char* value);
  inline void set_md5code(const char* value, size_t size);
  inline ::std::string* mutable_md5code();
  
  // optional uint32 playerHost = 6;
  inline bool has_playerhost() const;
  inline void clear_playerhost();
  static const int kPlayerHostFieldNumber = 6;
  inline ::google::protobuf::uint32 playerhost() const;
  inline void set_playerhost(::google::protobuf::uint32 value);
  
  // optional uint32 playerPort = 7;
  inline bool has_playerport() const;
  inline void clear_playerport();
  static const int kPlayerPortFieldNumber = 7;
  inline ::google::protobuf::uint32 playerport() const;
  inline void set_playerport(::google::protobuf::uint32 value);
  
  // optional string playerMac = 8;
  inline bool has_playermac() const;
  inline void clear_playermac();
  static const int kPlayerMacFieldNumber = 8;
  inline const ::std::string& playermac() const;
  inline void set_playermac(const ::std::string& value);
  inline void set_playermac(const char* value);
  inline void set_playermac(const char* value, size_t size);
  inline ::std::string* mutable_playermac();
  
  // optional int32 sourceId = 9;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 9;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);
  
  // optional uint32 version = 10;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 10;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional uint32 taskVersion = 11;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 11;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
  // optional uint32 templateVersion = 12;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 12;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 matrixType = 13;
  inline bool has_matrixtype() const;
  inline void clear_matrixtype();
  static const int kMatrixTypeFieldNumber = 13;
  inline ::google::protobuf::uint32 matrixtype() const;
  inline void set_matrixtype(::google::protobuf::uint32 value);
  
  // optional string matrixCode = 14;
  inline bool has_matrixcode() const;
  inline void clear_matrixcode();
  static const int kMatrixCodeFieldNumber = 14;
  inline const ::std::string& matrixcode() const;
  inline void set_matrixcode(const ::std::string& value);
  inline void set_matrixcode(const char* value);
  inline void set_matrixcode(const char* value, size_t size);
  inline ::std::string* mutable_matrixcode();
  
  // optional string matrixCoord = 15;
  inline bool has_matrixcoord() const;
  inline void clear_matrixcoord();
  static const int kMatrixCoordFieldNumber = 15;
  inline const ::std::string& matrixcoord() const;
  inline void set_matrixcoord(const ::std::string& value);
  inline void set_matrixcoord(const char* value);
  inline void set_matrixcoord(const char* value, size_t size);
  inline ::std::string* mutable_matrixcoord();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::std::string* passport_;
  static const ::std::string _default_passport_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::std::string* md5code_;
  static const ::std::string _default_md5code_;
  ::google::protobuf::uint32 playerhost_;
  ::google::protobuf::uint32 playerport_;
  ::std::string* playermac_;
  static const ::std::string _default_playermac_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 taskversion_;
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 matrixtype_;
  ::std::string* matrixcode_;
  static const ::std::string _default_matrixcode_;
  ::std::string* matrixcoord_;
  static const ::std::string _default_matrixcoord_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyQueryRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyQueryResponse : public ::google::protobuf::Message {
 public:
  CMessageCertifyQueryResponse();
  virtual ~CMessageCertifyQueryResponse();
  
  CMessageCertifyQueryResponse(const CMessageCertifyQueryResponse& from);
  
  inline CMessageCertifyQueryResponse& operator=(const CMessageCertifyQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyQueryResponse& default_instance();
  void Swap(CMessageCertifyQueryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyQueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyQueryResponse& from);
  void MergeFrom(const CMessageCertifyQueryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageCertifyQueryResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageCertifyQueryResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_FAILURE = CMessageCertifyQueryResponse_EStatus_STATUS_FAILURE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageCertifyQueryResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageCertifyQueryResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageCertifyQueryResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageCertifyQueryResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageCertifyQueryResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageCertifyQueryResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageCertifyQueryResponse.EStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageCertifyQueryResponse_EStatus status() const;
  inline void set_status(::CMessageCertifyQueryResponse_EStatus value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 errorCode = 4;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyQueryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyTokenRequest : public ::google::protobuf::Message {
 public:
  CMessageCertifyTokenRequest();
  virtual ~CMessageCertifyTokenRequest();
  
  CMessageCertifyTokenRequest(const CMessageCertifyTokenRequest& from);
  
  inline CMessageCertifyTokenRequest& operator=(const CMessageCertifyTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyTokenRequest& default_instance();
  void Swap(CMessageCertifyTokenRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyTokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyTokenRequest& from);
  void MergeFrom(const CMessageCertifyTokenRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline ::google::protobuf::uint32 token() const;
  inline void set_token(::google::protobuf::uint32 value);
  
  // optional uint32 handle = 4;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 4;
  inline ::google::protobuf::uint32 handle() const;
  inline void set_handle(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 token_;
  ::google::protobuf::uint32 handle_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyTokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCertifyTokenResponse : public ::google::protobuf::Message {
 public:
  CMessageCertifyTokenResponse();
  virtual ~CMessageCertifyTokenResponse();
  
  CMessageCertifyTokenResponse(const CMessageCertifyTokenResponse& from);
  
  inline CMessageCertifyTokenResponse& operator=(const CMessageCertifyTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCertifyTokenResponse& default_instance();
  void Swap(CMessageCertifyTokenResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCertifyTokenResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCertifyTokenResponse& from);
  void MergeFrom(const CMessageCertifyTokenResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageCertifyTokenResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageCertifyTokenResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_FAILURE = CMessageCertifyTokenResponse_EStatus_STATUS_FAILURE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageCertifyTokenResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageCertifyTokenResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageCertifyTokenResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageCertifyTokenResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageCertifyTokenResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageCertifyTokenResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageCertifyTokenResponse.EStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageCertifyTokenResponse_EStatus status() const;
  inline void set_status(::CMessageCertifyTokenResponse_EStatus value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 handle = 4;
  inline bool has_handle() const;
  inline void clear_handle();
  static const int kHandleFieldNumber = 4;
  inline ::google::protobuf::uint32 handle() const;
  inline void set_handle(::google::protobuf::uint32 value);
  
  // optional string passport = 5;
  inline bool has_passport() const;
  inline void clear_passport();
  static const int kPassportFieldNumber = 5;
  inline const ::std::string& passport() const;
  inline void set_passport(const ::std::string& value);
  inline void set_passport(const char* value);
  inline void set_passport(const char* value, size_t size);
  inline ::std::string* mutable_passport();
  
  // optional string password = 6;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 6;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional uint32 playerHost = 7;
  inline bool has_playerhost() const;
  inline void clear_playerhost();
  static const int kPlayerHostFieldNumber = 7;
  inline ::google::protobuf::uint32 playerhost() const;
  inline void set_playerhost(::google::protobuf::uint32 value);
  
  // optional uint32 playerPort = 8;
  inline bool has_playerport() const;
  inline void clear_playerport();
  static const int kPlayerPortFieldNumber = 8;
  inline ::google::protobuf::uint32 playerport() const;
  inline void set_playerport(::google::protobuf::uint32 value);
  
  // optional string playerMac = 9;
  inline bool has_playermac() const;
  inline void clear_playermac();
  static const int kPlayerMacFieldNumber = 9;
  inline const ::std::string& playermac() const;
  inline void set_playermac(const ::std::string& value);
  inline void set_playermac(const char* value);
  inline void set_playermac(const char* value, size_t size);
  inline ::std::string* mutable_playermac();
  
  // optional string md5Code = 10;
  inline bool has_md5code() const;
  inline void clear_md5code();
  static const int kMd5CodeFieldNumber = 10;
  inline const ::std::string& md5code() const;
  inline void set_md5code(const ::std::string& value);
  inline void set_md5code(const char* value);
  inline void set_md5code(const char* value, size_t size);
  inline ::std::string* mutable_md5code();
  
  // optional int32 sourceId = 11;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 11;
  inline ::google::protobuf::int32 sourceid() const;
  inline void set_sourceid(::google::protobuf::int32 value);
  
  // optional uint32 version = 12;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 12;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional uint32 taskVersion = 13;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 13;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
  // optional uint32 templateVersion = 14;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 14;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 matrixType = 15;
  inline bool has_matrixtype() const;
  inline void clear_matrixtype();
  static const int kMatrixTypeFieldNumber = 15;
  inline ::google::protobuf::uint32 matrixtype() const;
  inline void set_matrixtype(::google::protobuf::uint32 value);
  
  // optional string matrixCode = 16;
  inline bool has_matrixcode() const;
  inline void clear_matrixcode();
  static const int kMatrixCodeFieldNumber = 16;
  inline const ::std::string& matrixcode() const;
  inline void set_matrixcode(const ::std::string& value);
  inline void set_matrixcode(const char* value);
  inline void set_matrixcode(const char* value, size_t size);
  inline ::std::string* mutable_matrixcode();
  
  // optional string matrixCoord = 17;
  inline bool has_matrixcoord() const;
  inline void clear_matrixcoord();
  static const int kMatrixCoordFieldNumber = 17;
  inline const ::std::string& matrixcoord() const;
  inline void set_matrixcoord(const ::std::string& value);
  inline void set_matrixcoord(const char* value);
  inline void set_matrixcoord(const char* value, size_t size);
  inline ::std::string* mutable_matrixcoord();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 handle_;
  ::std::string* passport_;
  static const ::std::string _default_passport_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::google::protobuf::uint32 playerhost_;
  ::google::protobuf::uint32 playerport_;
  ::std::string* playermac_;
  static const ::std::string _default_playermac_;
  ::std::string* md5code_;
  static const ::std::string _default_md5code_;
  ::google::protobuf::int32 sourceid_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 taskversion_;
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 matrixtype_;
  ::std::string* matrixcode_;
  static const ::std::string _default_matrixcode_;
  ::std::string* matrixcoord_;
  static const ::std::string _default_matrixcoord_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCertifyTokenResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleQueryRequest : public ::google::protobuf::Message {
 public:
  CMessageRoleQueryRequest();
  virtual ~CMessageRoleQueryRequest();
  
  CMessageRoleQueryRequest(const CMessageRoleQueryRequest& from);
  
  inline CMessageRoleQueryRequest& operator=(const CMessageRoleQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleQueryRequest& default_instance();
  void Swap(CMessageRoleQueryRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleQueryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleQueryRequest& from);
  void MergeFrom(const CMessageRoleQueryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleQueryRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleQueryResponse : public ::google::protobuf::Message {
 public:
  CMessageRoleQueryResponse();
  virtual ~CMessageRoleQueryResponse();
  
  CMessageRoleQueryResponse(const CMessageRoleQueryResponse& from);
  
  inline CMessageRoleQueryResponse& operator=(const CMessageRoleQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleQueryResponse& default_instance();
  void Swap(CMessageRoleQueryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleQueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleQueryResponse& from);
  void MergeFrom(const CMessageRoleQueryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageRoleQueryResponse_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageRoleQueryResponse_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_FAILURE = CMessageRoleQueryResponse_EStatus_STATUS_FAILURE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageRoleQueryResponse_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageRoleQueryResponse_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageRoleQueryResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageRoleQueryResponse_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageRoleQueryResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageRoleQueryResponse_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRoleQueryResponse.EStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageRoleQueryResponse_EStatus status() const;
  inline void set_status(::CMessageRoleQueryResponse_EStatus value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 roleCount = 4;
  inline bool has_rolecount() const;
  inline void clear_rolecount();
  static const int kRoleCountFieldNumber = 4;
  inline ::google::protobuf::uint32 rolecount() const;
  inline void set_rolecount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 rolecount_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleQueryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleQueryNotify : public ::google::protobuf::Message {
 public:
  CMessageRoleQueryNotify();
  virtual ~CMessageRoleQueryNotify();
  
  CMessageRoleQueryNotify(const CMessageRoleQueryNotify& from);
  
  inline CMessageRoleQueryNotify& operator=(const CMessageRoleQueryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleQueryNotify& default_instance();
  void Swap(CMessageRoleQueryNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleQueryNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleQueryNotify& from);
  void MergeFrom(const CMessageRoleQueryNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageRoleQueryNotify_EStatus EStatus;
  static const EStatus STATUS_SUCCESS = CMessageRoleQueryNotify_EStatus_STATUS_SUCCESS;
  static const EStatus STATUS_FAILURE = CMessageRoleQueryNotify_EStatus_STATUS_FAILURE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMessageRoleQueryNotify_EStatus_descriptor();
  }
  static inline bool EStatus_IsValid(int value) {
    return CMessageRoleQueryNotify_EStatus_IsValid(value);
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMessageRoleQueryNotify_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMessageRoleQueryNotify_EStatus_Parse(name, value);
  }
  static const EStatus EStatus_MIN =
    CMessageRoleQueryNotify_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMessageRoleQueryNotify_EStatus_EStatus_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRoleQueryNotify.EStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::CMessageRoleQueryNotify_EStatus status() const;
  inline void set_status(::CMessageRoleQueryNotify_EStatus value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 accountId = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 loginId = 4;
  inline bool has_loginid() const;
  inline void clear_loginid();
  static const int kLoginIdFieldNumber = 4;
  inline ::google::protobuf::uint32 loginid() const;
  inline void set_loginid(::google::protobuf::uint32 value);
  
  // optional uint32 roleCount = 5;
  inline bool has_rolecount() const;
  inline void clear_rolecount();
  static const int kRoleCountFieldNumber = 5;
  inline ::google::protobuf::uint32 rolecount() const;
  inline void set_rolecount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int status_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 loginid_;
  ::google::protobuf::uint32 rolecount_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleQueryNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOnlineStatusNotify : public ::google::protobuf::Message {
 public:
  CMessageOnlineStatusNotify();
  virtual ~CMessageOnlineStatusNotify();
  
  CMessageOnlineStatusNotify(const CMessageOnlineStatusNotify& from);
  
  inline CMessageOnlineStatusNotify& operator=(const CMessageOnlineStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOnlineStatusNotify& default_instance();
  void Swap(CMessageOnlineStatusNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOnlineStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOnlineStatusNotify& from);
  void MergeFrom(const CMessageOnlineStatusNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);
  
  // optional uint32 current = 3;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 3;
  inline ::google::protobuf::uint32 current() const;
  inline void set_current(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 current_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOnlineStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteCampRequest : public ::google::protobuf::Message {
 public:
  CMessageInviteCampRequest();
  virtual ~CMessageInviteCampRequest();
  
  CMessageInviteCampRequest(const CMessageInviteCampRequest& from);
  
  inline CMessageInviteCampRequest& operator=(const CMessageInviteCampRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteCampRequest& default_instance();
  void Swap(CMessageInviteCampRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteCampRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteCampRequest& from);
  void MergeFrom(const CMessageInviteCampRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 currentCampId = 2;
  inline bool has_currentcampid() const;
  inline void clear_currentcampid();
  static const int kCurrentCampIdFieldNumber = 2;
  inline ::google::protobuf::uint32 currentcampid() const;
  inline void set_currentcampid(::google::protobuf::uint32 value);
  
  // optional uint32 npcId = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 currentcampid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteCampRequest* default_instance_;
};
// -------------------------------------------------------------------

class CampLevel : public ::google::protobuf::Message {
 public:
  CampLevel();
  virtual ~CampLevel();
  
  CampLevel(const CampLevel& from);
  
  inline CampLevel& operator=(const CampLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CampLevel& default_instance();
  void Swap(CampLevel* other);
  
  // implements Message ----------------------------------------------
  
  CampLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampLevel& from);
  void MergeFrom(const CampLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 camp_id = 1;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  inline ::google::protobuf::uint32 camp_id() const;
  inline void set_camp_id(::google::protobuf::uint32 value);
  
  // optional uint32 weak_level = 2;
  inline bool has_weak_level() const;
  inline void clear_weak_level();
  static const int kWeakLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 weak_level() const;
  inline void set_weak_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 weak_level_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CampLevel* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteCampResponse : public ::google::protobuf::Message {
 public:
  CMessageInviteCampResponse();
  virtual ~CMessageInviteCampResponse();
  
  CMessageInviteCampResponse(const CMessageInviteCampResponse& from);
  
  inline CMessageInviteCampResponse& operator=(const CMessageInviteCampResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteCampResponse& default_instance();
  void Swap(CMessageInviteCampResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteCampResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteCampResponse& from);
  void MergeFrom(const CMessageInviteCampResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CampLevel camp_list = 1;
  inline int camp_list_size() const;
  inline void clear_camp_list();
  static const int kCampListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CampLevel >& camp_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::CampLevel >* mutable_camp_list();
  inline const ::CampLevel& camp_list(int index) const;
  inline ::CampLevel* mutable_camp_list(int index);
  inline ::CampLevel* add_camp_list();
  
  // optional uint32 errorcode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CampLevel > camp_list_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteCampResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeSingleCampRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeSingleCampRequest();
  virtual ~CMessageChangeSingleCampRequest();
  
  CMessageChangeSingleCampRequest(const CMessageChangeSingleCampRequest& from);
  
  inline CMessageChangeSingleCampRequest& operator=(const CMessageChangeSingleCampRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeSingleCampRequest& default_instance();
  void Swap(CMessageChangeSingleCampRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeSingleCampRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeSingleCampRequest& from);
  void MergeFrom(const CMessageChangeSingleCampRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 crrentCampId = 2;
  inline bool has_crrentcampid() const;
  inline void clear_crrentcampid();
  static const int kCrrentCampIdFieldNumber = 2;
  inline ::google::protobuf::uint32 crrentcampid() const;
  inline void set_crrentcampid(::google::protobuf::uint32 value);
  
  // optional uint32 targetCampId = 3;
  inline bool has_targetcampid() const;
  inline void clear_targetcampid();
  static const int kTargetCampIdFieldNumber = 3;
  inline ::google::protobuf::uint32 targetcampid() const;
  inline void set_targetcampid(::google::protobuf::uint32 value);
  
  // optional uint32 npcId = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 4;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 crrentcampid_;
  ::google::protobuf::uint32 targetcampid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeSingleCampRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeSingleCampResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeSingleCampResponse();
  virtual ~CMessageChangeSingleCampResponse();
  
  CMessageChangeSingleCampResponse(const CMessageChangeSingleCampResponse& from);
  
  inline CMessageChangeSingleCampResponse& operator=(const CMessageChangeSingleCampResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeSingleCampResponse& default_instance();
  void Swap(CMessageChangeSingleCampResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeSingleCampResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeSingleCampResponse& from);
  void MergeFrom(const CMessageChangeSingleCampResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 campId = 1;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 1;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 errorcode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
  // optional uint32 playerId = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 errorcode_;
  ::google::protobuf::uint32 playerid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeSingleCampResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCampSuccesNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCampSuccesNotify();
  virtual ~CMessageChangeCampSuccesNotify();
  
  CMessageChangeCampSuccesNotify(const CMessageChangeCampSuccesNotify& from);
  
  inline CMessageChangeCampSuccesNotify& operator=(const CMessageChangeCampSuccesNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCampSuccesNotify& default_instance();
  void Swap(CMessageChangeCampSuccesNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCampSuccesNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCampSuccesNotify& from);
  void MergeFrom(const CMessageChangeCampSuccesNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string playerName = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  
  // optional uint32 campId = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 srcCampId = 3;
  inline bool has_srccampid() const;
  inline void clear_srccampid();
  static const int kSrcCampIdFieldNumber = 3;
  inline ::google::protobuf::uint32 srccampid() const;
  inline void set_srccampid(::google::protobuf::uint32 value);
  
  // optional uint32 playerId = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 4;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* playername_;
  static const ::std::string _default_playername_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 srccampid_;
  ::google::protobuf::uint32 playerid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCampSuccesNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCamp2GateNotice : public ::google::protobuf::Message {
 public:
  CMessageChangeCamp2GateNotice();
  virtual ~CMessageChangeCamp2GateNotice();
  
  CMessageChangeCamp2GateNotice(const CMessageChangeCamp2GateNotice& from);
  
  inline CMessageChangeCamp2GateNotice& operator=(const CMessageChangeCamp2GateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCamp2GateNotice& default_instance();
  void Swap(CMessageChangeCamp2GateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCamp2GateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCamp2GateNotice& from);
  void MergeFrom(const CMessageChangeCamp2GateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 campId = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIdFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCamp2GateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCampConditionRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeCampConditionRequest();
  virtual ~CMessageChangeCampConditionRequest();
  
  CMessageChangeCampConditionRequest(const CMessageChangeCampConditionRequest& from);
  
  inline CMessageChangeCampConditionRequest& operator=(const CMessageChangeCampConditionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCampConditionRequest& default_instance();
  void Swap(CMessageChangeCampConditionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCampConditionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCampConditionRequest& from);
  void MergeFrom(const CMessageChangeCampConditionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 npcId = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCampConditionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCampConditionResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeCampConditionResponse();
  virtual ~CMessageChangeCampConditionResponse();
  
  CMessageChangeCampConditionResponse(const CMessageChangeCampConditionResponse& from);
  
  inline CMessageChangeCampConditionResponse& operator=(const CMessageChangeCampConditionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCampConditionResponse& default_instance();
  void Swap(CMessageChangeCampConditionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCampConditionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCampConditionResponse& from);
  void MergeFrom(const CMessageChangeCampConditionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 isHaveTeam = 1;
  inline bool has_ishaveteam() const;
  inline void clear_ishaveteam();
  static const int kIsHaveTeamFieldNumber = 1;
  inline ::google::protobuf::uint32 ishaveteam() const;
  inline void set_ishaveteam(::google::protobuf::uint32 value);
  
  // optional uint32 isHaveFamily = 2;
  inline bool has_ishavefamily() const;
  inline void clear_ishavefamily();
  static const int kIsHaveFamilyFieldNumber = 2;
  inline ::google::protobuf::uint32 ishavefamily() const;
  inline void set_ishavefamily(::google::protobuf::uint32 value);
  
  // optional uint32 isHaveCountry = 3;
  inline bool has_ishavecountry() const;
  inline void clear_ishavecountry();
  static const int kIsHaveCountryFieldNumber = 3;
  inline ::google::protobuf::uint32 ishavecountry() const;
  inline void set_ishavecountry(::google::protobuf::uint32 value);
  
  // optional uint32 isHaveMaster = 4;
  inline bool has_ishavemaster() const;
  inline void clear_ishavemaster();
  static const int kIsHaveMasterFieldNumber = 4;
  inline ::google::protobuf::uint32 ishavemaster() const;
  inline void set_ishavemaster(::google::protobuf::uint32 value);
  
  // optional uint32 isHaveMarriage = 5;
  inline bool has_ishavemarriage() const;
  inline void clear_ishavemarriage();
  static const int kIsHaveMarriageFieldNumber = 5;
  inline ::google::protobuf::uint32 ishavemarriage() const;
  inline void set_ishavemarriage(::google::protobuf::uint32 value);
  
  // optional uint32 isHavePayMail = 6;
  inline bool has_ishavepaymail() const;
  inline void clear_ishavepaymail();
  static const int kIsHavePayMailFieldNumber = 6;
  inline ::google::protobuf::uint32 ishavepaymail() const;
  inline void set_ishavepaymail(::google::protobuf::uint32 value);
  
  // optional uint32 ishaveEnoughLevel = 7;
  inline bool has_ishaveenoughlevel() const;
  inline void clear_ishaveenoughlevel();
  static const int kIshaveEnoughLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 ishaveenoughlevel() const;
  inline void set_ishaveenoughlevel(::google::protobuf::uint32 value);
  
  // optional uint32 errorcode = 8;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 8;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
  // optional uint32 isHaveSworn = 9;
  inline bool has_ishavesworn() const;
  inline void clear_ishavesworn();
  static const int kIsHaveSwornFieldNumber = 9;
  inline ::google::protobuf::uint32 ishavesworn() const;
  inline void set_ishavesworn(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ishaveteam_;
  ::google::protobuf::uint32 ishavefamily_;
  ::google::protobuf::uint32 ishavecountry_;
  ::google::protobuf::uint32 ishavemaster_;
  ::google::protobuf::uint32 ishavemarriage_;
  ::google::protobuf::uint32 ishavepaymail_;
  ::google::protobuf::uint32 ishaveenoughlevel_;
  ::google::protobuf::uint32 errorcode_;
  ::google::protobuf::uint32 ishavesworn_;
  friend void  protobuf_AddDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_coremessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_coremessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCampConditionResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageRouter

// optional uint32 RouterReason = 1;
inline bool CMessageRouter::has_routerreason() const {
  return _has_bit(0);
}
inline void CMessageRouter::clear_routerreason() {
  routerreason_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRouter::routerreason() const {
  return routerreason_;
}
inline void CMessageRouter::set_routerreason(::google::protobuf::uint32 value) {
  _set_bit(0);
  routerreason_ = value;
}

// optional uint32 Send2Player = 2;
inline bool CMessageRouter::has_send2player() const {
  return _has_bit(1);
}
inline void CMessageRouter::clear_send2player() {
  send2player_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRouter::send2player() const {
  return send2player_;
}
inline void CMessageRouter::set_send2player(::google::protobuf::uint32 value) {
  _set_bit(1);
  send2player_ = value;
}

// optional uint32 SendBack = 3;
inline bool CMessageRouter::has_sendback() const {
  return _has_bit(2);
}
inline void CMessageRouter::clear_sendback() {
  sendback_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRouter::sendback() const {
  return sendback_;
}
inline void CMessageRouter::set_sendback(::google::protobuf::uint32 value) {
  _set_bit(2);
  sendback_ = value;
}

// optional uint32 RouterType = 4;
inline bool CMessageRouter::has_routertype() const {
  return _has_bit(3);
}
inline void CMessageRouter::clear_routertype() {
  routertype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRouter::routertype() const {
  return routertype_;
}
inline void CMessageRouter::set_routertype(::google::protobuf::uint32 value) {
  _set_bit(3);
  routertype_ = value;
}

// optional uint32 SrcCharID = 5;
inline bool CMessageRouter::has_srccharid() const {
  return _has_bit(4);
}
inline void CMessageRouter::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRouter::srccharid() const {
  return srccharid_;
}
inline void CMessageRouter::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(4);
  srccharid_ = value;
}

// optional uint32 DesCharID = 6;
inline bool CMessageRouter::has_descharid() const {
  return _has_bit(5);
}
inline void CMessageRouter::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRouter::descharid() const {
  return descharid_;
}
inline void CMessageRouter::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(5);
  descharid_ = value;
}

// optional string SrcName = 7;
inline bool CMessageRouter::has_srcname() const {
  return _has_bit(6);
}
inline void CMessageRouter::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageRouter::srcname() const {
  return *srcname_;
}
inline void CMessageRouter::set_srcname(const ::std::string& value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRouter::set_srcname(const char* value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRouter::set_srcname(const char* value, size_t size) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRouter::mutable_srcname() {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional string DesName = 8;
inline bool CMessageRouter::has_desname() const {
  return _has_bit(7);
}
inline void CMessageRouter::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageRouter::desname() const {
  return *desname_;
}
inline void CMessageRouter::set_desname(const ::std::string& value) {
  _set_bit(7);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRouter::set_desname(const char* value) {
  _set_bit(7);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRouter::set_desname(const char* value, size_t size) {
  _set_bit(7);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRouter::mutable_desname() {
  _set_bit(7);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// -------------------------------------------------------------------

// CMessageRedirectErr

// optional int32 ErrorCode = 1;
inline bool CMessageRedirectErr::has_errorcode() const {
  return _has_bit(0);
}
inline void CMessageRedirectErr::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageRedirectErr::errorcode() const {
  return errorcode_;
}
inline void CMessageRedirectErr::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(0);
  errorcode_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageRedirectErr::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRedirectErr::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectErr::charid() const {
  return charid_;
}
inline void CMessageRedirectErr::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginErrorNotice

// optional string ErrorString = 1;
inline bool CMessageLoginErrorNotice::has_errorstring() const {
  return _has_bit(0);
}
inline void CMessageLoginErrorNotice::clear_errorstring() {
  if (errorstring_ != &_default_errorstring_) {
    errorstring_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageLoginErrorNotice::errorstring() const {
  return *errorstring_;
}
inline void CMessageLoginErrorNotice::set_errorstring(const ::std::string& value) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageLoginErrorNotice::set_errorstring(const char* value) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageLoginErrorNotice::set_errorstring(const char* value, size_t size) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginErrorNotice::mutable_errorstring() {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}

// optional int32 ErrorCode = 2;
inline bool CMessageLoginErrorNotice::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageLoginErrorNotice::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageLoginErrorNotice::errorcode() const {
  return errorcode_;
}
inline void CMessageLoginErrorNotice::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageGateErrorNotice

// optional int32 KeepAlive = 1;
inline bool CMessageGateErrorNotice::has_keepalive() const {
  return _has_bit(0);
}
inline void CMessageGateErrorNotice::clear_keepalive() {
  keepalive_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGateErrorNotice::keepalive() const {
  return keepalive_;
}
inline void CMessageGateErrorNotice::set_keepalive(::google::protobuf::int32 value) {
  _set_bit(0);
  keepalive_ = value;
}

// optional string ErrorString = 2;
inline bool CMessageGateErrorNotice::has_errorstring() const {
  return _has_bit(1);
}
inline void CMessageGateErrorNotice::clear_errorstring() {
  if (errorstring_ != &_default_errorstring_) {
    errorstring_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageGateErrorNotice::errorstring() const {
  return *errorstring_;
}
inline void CMessageGateErrorNotice::set_errorstring(const ::std::string& value) {
  _set_bit(1);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageGateErrorNotice::set_errorstring(const char* value) {
  _set_bit(1);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageGateErrorNotice::set_errorstring(const char* value, size_t size) {
  _set_bit(1);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateErrorNotice::mutable_errorstring() {
  _set_bit(1);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}

// optional int32 ErrorCode = 3;
inline bool CMessageGateErrorNotice::has_errorcode() const {
  return _has_bit(2);
}
inline void CMessageGateErrorNotice::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageGateErrorNotice::errorcode() const {
  return errorcode_;
}
inline void CMessageGateErrorNotice::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(2);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginServerRequest

// optional string UserName = 1;
inline bool CMessageLoginServerRequest::has_username() const {
  return _has_bit(0);
}
inline void CMessageLoginServerRequest::clear_username() {
  if (username_ != &_default_username_) {
    username_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageLoginServerRequest::username() const {
  return *username_;
}
inline void CMessageLoginServerRequest::set_username(const ::std::string& value) {
  _set_bit(0);
  if (username_ == &_default_username_) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void CMessageLoginServerRequest::set_username(const char* value) {
  _set_bit(0);
  if (username_ == &_default_username_) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void CMessageLoginServerRequest::set_username(const char* value, size_t size) {
  _set_bit(0);
  if (username_ == &_default_username_) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_username() {
  _set_bit(0);
  if (username_ == &_default_username_) {
    username_ = new ::std::string;
  }
  return username_;
}

// optional string Md5Code = 2;
inline bool CMessageLoginServerRequest::has_md5code() const {
  return _has_bit(1);
}
inline void CMessageLoginServerRequest::clear_md5code() {
  if (md5code_ != &_default_md5code_) {
    md5code_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageLoginServerRequest::md5code() const {
  return *md5code_;
}
inline void CMessageLoginServerRequest::set_md5code(const ::std::string& value) {
  _set_bit(1);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageLoginServerRequest::set_md5code(const char* value) {
  _set_bit(1);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageLoginServerRequest::set_md5code(const char* value, size_t size) {
  _set_bit(1);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_md5code() {
  _set_bit(1);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  return md5code_;
}

// optional uint32 TaskVersion = 3;
inline bool CMessageLoginServerRequest::has_taskversion() const {
  return _has_bit(2);
}
inline void CMessageLoginServerRequest::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::taskversion() const {
  return taskversion_;
}
inline void CMessageLoginServerRequest::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(2);
  taskversion_ = value;
}

// optional string UserPsw = 4;
inline bool CMessageLoginServerRequest::has_userpsw() const {
  return _has_bit(3);
}
inline void CMessageLoginServerRequest::clear_userpsw() {
  if (userpsw_ != &_default_userpsw_) {
    userpsw_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageLoginServerRequest::userpsw() const {
  return *userpsw_;
}
inline void CMessageLoginServerRequest::set_userpsw(const ::std::string& value) {
  _set_bit(3);
  if (userpsw_ == &_default_userpsw_) {
    userpsw_ = new ::std::string;
  }
  userpsw_->assign(value);
}
inline void CMessageLoginServerRequest::set_userpsw(const char* value) {
  _set_bit(3);
  if (userpsw_ == &_default_userpsw_) {
    userpsw_ = new ::std::string;
  }
  userpsw_->assign(value);
}
inline void CMessageLoginServerRequest::set_userpsw(const char* value, size_t size) {
  _set_bit(3);
  if (userpsw_ == &_default_userpsw_) {
    userpsw_ = new ::std::string;
  }
  userpsw_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_userpsw() {
  _set_bit(3);
  if (userpsw_ == &_default_userpsw_) {
    userpsw_ = new ::std::string;
  }
  return userpsw_;
}

// optional uint32 Version = 5;
inline bool CMessageLoginServerRequest::has_version() const {
  return _has_bit(4);
}
inline void CMessageLoginServerRequest::clear_version() {
  version_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::version() const {
  return version_;
}
inline void CMessageLoginServerRequest::set_version(::google::protobuf::uint32 value) {
  _set_bit(4);
  version_ = value;
}

// optional int32 SourceID = 6;
inline bool CMessageLoginServerRequest::has_sourceid() const {
  return _has_bit(5);
}
inline void CMessageLoginServerRequest::clear_sourceid() {
  sourceid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CMessageLoginServerRequest::sourceid() const {
  return sourceid_;
}
inline void CMessageLoginServerRequest::set_sourceid(::google::protobuf::int32 value) {
  _set_bit(5);
  sourceid_ = value;
}

// optional uint32 TemplateVersion = 7;
inline bool CMessageLoginServerRequest::has_templateversion() const {
  return _has_bit(6);
}
inline void CMessageLoginServerRequest::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::templateversion() const {
  return templateversion_;
}
inline void CMessageLoginServerRequest::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(6);
  templateversion_ = value;
}

// optional uint32 MatrixType = 8;
inline bool CMessageLoginServerRequest::has_matrixtype() const {
  return _has_bit(7);
}
inline void CMessageLoginServerRequest::clear_matrixtype() {
  matrixtype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::matrixtype() const {
  return matrixtype_;
}
inline void CMessageLoginServerRequest::set_matrixtype(::google::protobuf::uint32 value) {
  _set_bit(7);
  matrixtype_ = value;
}

// optional string MatrixCode = 9;
inline bool CMessageLoginServerRequest::has_matrixcode() const {
  return _has_bit(8);
}
inline void CMessageLoginServerRequest::clear_matrixcode() {
  if (matrixcode_ != &_default_matrixcode_) {
    matrixcode_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CMessageLoginServerRequest::matrixcode() const {
  return *matrixcode_;
}
inline void CMessageLoginServerRequest::set_matrixcode(const ::std::string& value) {
  _set_bit(8);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageLoginServerRequest::set_matrixcode(const char* value) {
  _set_bit(8);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageLoginServerRequest::set_matrixcode(const char* value, size_t size) {
  _set_bit(8);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_matrixcode() {
  _set_bit(8);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  return matrixcode_;
}

// optional string Mac = 10;
inline bool CMessageLoginServerRequest::has_mac() const {
  return _has_bit(9);
}
inline void CMessageLoginServerRequest::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CMessageLoginServerRequest::mac() const {
  return *mac_;
}
inline void CMessageLoginServerRequest::set_mac(const ::std::string& value) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageLoginServerRequest::set_mac(const char* value) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageLoginServerRequest::set_mac(const char* value, size_t size) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_mac() {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// optional string MatrixCoord = 11;
inline bool CMessageLoginServerRequest::has_matrixcoord() const {
  return _has_bit(10);
}
inline void CMessageLoginServerRequest::clear_matrixcoord() {
  if (matrixcoord_ != &_default_matrixcoord_) {
    matrixcoord_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CMessageLoginServerRequest::matrixcoord() const {
  return *matrixcoord_;
}
inline void CMessageLoginServerRequest::set_matrixcoord(const ::std::string& value) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageLoginServerRequest::set_matrixcoord(const char* value) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageLoginServerRequest::set_matrixcoord(const char* value, size_t size) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginServerRequest::mutable_matrixcoord() {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  return matrixcoord_;
}

// optional .CMessageLoginServerRequest.EType type = 12;
inline bool CMessageLoginServerRequest::has_type() const {
  return _has_bit(11);
}
inline void CMessageLoginServerRequest::clear_type() {
  type_ = 0;
  _clear_bit(11);
}
inline ::CMessageLoginServerRequest_EType CMessageLoginServerRequest::type() const {
  return static_cast< ::CMessageLoginServerRequest_EType >(type_);
}
inline void CMessageLoginServerRequest::set_type(::CMessageLoginServerRequest_EType value) {
  GOOGLE_DCHECK(::CMessageLoginServerRequest_EType_IsValid(value));
  _set_bit(11);
  type_ = value;
}

// optional uint32 accountId = 13;
inline bool CMessageLoginServerRequest::has_accountid() const {
  return _has_bit(12);
}
inline void CMessageLoginServerRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::accountid() const {
  return accountid_;
}
inline void CMessageLoginServerRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(12);
  accountid_ = value;
}

// optional uint32 token = 14;
inline bool CMessageLoginServerRequest::has_token() const {
  return _has_bit(13);
}
inline void CMessageLoginServerRequest::clear_token() {
  token_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::token() const {
  return token_;
}
inline void CMessageLoginServerRequest::set_token(::google::protobuf::uint32 value) {
  _set_bit(13);
  token_ = value;
}

// optional uint32 cpuid = 15;
inline bool CMessageLoginServerRequest::has_cpuid() const {
  return _has_bit(14);
}
inline void CMessageLoginServerRequest::clear_cpuid() {
  cpuid_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::cpuid() const {
  return cpuid_;
}
inline void CMessageLoginServerRequest::set_cpuid(::google::protobuf::uint32 value) {
  _set_bit(14);
  cpuid_ = value;
}

// optional uint32 diskid = 16;
inline bool CMessageLoginServerRequest::has_diskid() const {
  return _has_bit(15);
}
inline void CMessageLoginServerRequest::clear_diskid() {
  diskid_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMessageLoginServerRequest::diskid() const {
  return diskid_;
}
inline void CMessageLoginServerRequest::set_diskid(::google::protobuf::uint32 value) {
  _set_bit(15);
  diskid_ = value;
}

// -------------------------------------------------------------------

// CMessageWaitForLoginNotice

// optional uint32 QueueNumber = 1;
inline bool CMessageWaitForLoginNotice::has_queuenumber() const {
  return _has_bit(0);
}
inline void CMessageWaitForLoginNotice::clear_queuenumber() {
  queuenumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWaitForLoginNotice::queuenumber() const {
  return queuenumber_;
}
inline void CMessageWaitForLoginNotice::set_queuenumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  queuenumber_ = value;
}

// -------------------------------------------------------------------

// CMessageRedirectGateNotice

// optional string Address = 1;
inline bool CMessageRedirectGateNotice::has_address() const {
  return _has_bit(0);
}
inline void CMessageRedirectGateNotice::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageRedirectGateNotice::address() const {
  return *address_;
}
inline void CMessageRedirectGateNotice::set_address(const ::std::string& value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageRedirectGateNotice::set_address(const char* value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageRedirectGateNotice::set_address(const char* value, size_t size) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRedirectGateNotice::mutable_address() {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// optional uint32 OtherClient = 2;
inline bool CMessageRedirectGateNotice::has_otherclient() const {
  return _has_bit(1);
}
inline void CMessageRedirectGateNotice::clear_otherclient() {
  otherclient_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectGateNotice::otherclient() const {
  return otherclient_;
}
inline void CMessageRedirectGateNotice::set_otherclient(::google::protobuf::uint32 value) {
  _set_bit(1);
  otherclient_ = value;
}

// optional uint32 LoginToken = 3;
inline bool CMessageRedirectGateNotice::has_logintoken() const {
  return _has_bit(2);
}
inline void CMessageRedirectGateNotice::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectGateNotice::logintoken() const {
  return logintoken_;
}
inline void CMessageRedirectGateNotice::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(2);
  logintoken_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageRedirectGateNotice::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageRedirectGateNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRedirectGateNotice::accountid() const {
  return accountid_;
}
inline void CMessageRedirectGateNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 CleanCSkey = 5;
inline bool CMessageRedirectGateNotice::has_cleancskey() const {
  return _has_bit(4);
}
inline void CMessageRedirectGateNotice::clear_cleancskey() {
  cleancskey_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRedirectGateNotice::cleancskey() const {
  return cleancskey_;
}
inline void CMessageRedirectGateNotice::set_cleancskey(::google::protobuf::uint32 value) {
  _set_bit(4);
  cleancskey_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginGateRequest

// optional uint32 LoginToken = 1;
inline bool CMessageLoginGateRequest::has_logintoken() const {
  return _has_bit(0);
}
inline void CMessageLoginGateRequest::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoginGateRequest::logintoken() const {
  return logintoken_;
}
inline void CMessageLoginGateRequest::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(0);
  logintoken_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageLoginGateRequest::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageLoginGateRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoginGateRequest::accountid() const {
  return accountid_;
}
inline void CMessageLoginGateRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 TemplateVer = 3;
inline bool CMessageLoginGateRequest::has_templatever() const {
  return _has_bit(2);
}
inline void CMessageLoginGateRequest::clear_templatever() {
  templatever_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoginGateRequest::templatever() const {
  return templatever_;
}
inline void CMessageLoginGateRequest::set_templatever(::google::protobuf::uint32 value) {
  _set_bit(2);
  templatever_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginGateResponse

// optional string ErrorString = 1;
inline bool CMessageLoginGateResponse::has_errorstring() const {
  return _has_bit(0);
}
inline void CMessageLoginGateResponse::clear_errorstring() {
  if (errorstring_ != &_default_errorstring_) {
    errorstring_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageLoginGateResponse::errorstring() const {
  return *errorstring_;
}
inline void CMessageLoginGateResponse::set_errorstring(const ::std::string& value) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageLoginGateResponse::set_errorstring(const char* value) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(value);
}
inline void CMessageLoginGateResponse::set_errorstring(const char* value, size_t size) {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  errorstring_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginGateResponse::mutable_errorstring() {
  _set_bit(0);
  if (errorstring_ == &_default_errorstring_) {
    errorstring_ = new ::std::string;
  }
  return errorstring_;
}

// optional int32 ErrorCode = 2;
inline bool CMessageLoginGateResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageLoginGateResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageLoginGateResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageLoginGateResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// optional int32 GateWayID = 3;
inline bool CMessageLoginGateResponse::has_gatewayid() const {
  return _has_bit(2);
}
inline void CMessageLoginGateResponse::clear_gatewayid() {
  gatewayid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageLoginGateResponse::gatewayid() const {
  return gatewayid_;
}
inline void CMessageLoginGateResponse::set_gatewayid(::google::protobuf::int32 value) {
  _set_bit(2);
  gatewayid_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainCharRequest

// -------------------------------------------------------------------

// PBCharProfile

// optional uint32 CharID = 1;
inline bool PBCharProfile::has_charid() const {
  return _has_bit(0);
}
inline void PBCharProfile::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCharProfile::charid() const {
  return charid_;
}
inline void PBCharProfile::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LineID = 2;
inline bool PBCharProfile::has_lineid() const {
  return _has_bit(1);
}
inline void PBCharProfile::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCharProfile::lineid() const {
  return lineid_;
}
inline void PBCharProfile::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 Sex = 3;
inline bool PBCharProfile::has_sex() const {
  return _has_bit(2);
}
inline void PBCharProfile::clear_sex() {
  sex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBCharProfile::sex() const {
  return sex_;
}
inline void PBCharProfile::set_sex(::google::protobuf::uint32 value) {
  _set_bit(2);
  sex_ = value;
}

// optional uint32 HairColour = 4;
inline bool PBCharProfile::has_haircolour() const {
  return _has_bit(3);
}
inline void PBCharProfile::clear_haircolour() {
  haircolour_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCharProfile::haircolour() const {
  return haircolour_;
}
inline void PBCharProfile::set_haircolour(::google::protobuf::uint32 value) {
  _set_bit(3);
  haircolour_ = value;
}

// optional uint32 Exp = 5;
inline bool PBCharProfile::has_exp() const {
  return _has_bit(4);
}
inline void PBCharProfile::clear_exp() {
  exp_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBCharProfile::exp() const {
  return exp_;
}
inline void PBCharProfile::set_exp(::google::protobuf::uint32 value) {
  _set_bit(4);
  exp_ = value;
}

// optional uint32 Level = 6;
inline bool PBCharProfile::has_level() const {
  return _has_bit(5);
}
inline void PBCharProfile::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBCharProfile::level() const {
  return level_;
}
inline void PBCharProfile::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// optional uint32 AccountID = 7;
inline bool PBCharProfile::has_accountid() const {
  return _has_bit(6);
}
inline void PBCharProfile::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBCharProfile::accountid() const {
  return accountid_;
}
inline void PBCharProfile::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(6);
  accountid_ = value;
}

// optional uint32 LastLogin = 8;
inline bool PBCharProfile::has_lastlogin() const {
  return _has_bit(7);
}
inline void PBCharProfile::clear_lastlogin() {
  lastlogin_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBCharProfile::lastlogin() const {
  return lastlogin_;
}
inline void PBCharProfile::set_lastlogin(::google::protobuf::uint32 value) {
  _set_bit(7);
  lastlogin_ = value;
}

// optional uint32 OnlineTime = 9;
inline bool PBCharProfile::has_onlinetime() const {
  return _has_bit(8);
}
inline void PBCharProfile::clear_onlinetime() {
  onlinetime_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBCharProfile::onlinetime() const {
  return onlinetime_;
}
inline void PBCharProfile::set_onlinetime(::google::protobuf::uint32 value) {
  _set_bit(8);
  onlinetime_ = value;
}

// optional uint32 Metier = 10;
inline bool PBCharProfile::has_metier() const {
  return _has_bit(9);
}
inline void PBCharProfile::clear_metier() {
  metier_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBCharProfile::metier() const {
  return metier_;
}
inline void PBCharProfile::set_metier(::google::protobuf::uint32 value) {
  _set_bit(9);
  metier_ = value;
}

// optional uint32 HairType = 11;
inline bool PBCharProfile::has_hairtype() const {
  return _has_bit(10);
}
inline void PBCharProfile::clear_hairtype() {
  hairtype_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBCharProfile::hairtype() const {
  return hairtype_;
}
inline void PBCharProfile::set_hairtype(::google::protobuf::uint32 value) {
  _set_bit(10);
  hairtype_ = value;
}

// optional uint32 FaceType = 12;
inline bool PBCharProfile::has_facetype() const {
  return _has_bit(11);
}
inline void PBCharProfile::clear_facetype() {
  facetype_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBCharProfile::facetype() const {
  return facetype_;
}
inline void PBCharProfile::set_facetype(::google::protobuf::uint32 value) {
  _set_bit(11);
  facetype_ = value;
}

// optional uint32 MapID = 13;
inline bool PBCharProfile::has_mapid() const {
  return _has_bit(12);
}
inline void PBCharProfile::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBCharProfile::mapid() const {
  return mapid_;
}
inline void PBCharProfile::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(12);
  mapid_ = value;
}

// optional string CharName = 14;
inline bool PBCharProfile::has_charname() const {
  return _has_bit(13);
}
inline void PBCharProfile::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(13);
}
inline const ::std::string& PBCharProfile::charname() const {
  return *charname_;
}
inline void PBCharProfile::set_charname(const ::std::string& value) {
  _set_bit(13);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBCharProfile::set_charname(const char* value) {
  _set_bit(13);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBCharProfile::set_charname(const char* value, size_t size) {
  _set_bit(13);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCharProfile::mutable_charname() {
  _set_bit(13);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Nationality = 15;
inline bool PBCharProfile::has_nationality() const {
  return _has_bit(14);
}
inline void PBCharProfile::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBCharProfile::nationality() const {
  return nationality_;
}
inline void PBCharProfile::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(14);
  nationality_ = value;
}

// optional uint32 RoleDeleteStatus = 16;
inline bool PBCharProfile::has_roledeletestatus() const {
  return _has_bit(15);
}
inline void PBCharProfile::clear_roledeletestatus() {
  roledeletestatus_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBCharProfile::roledeletestatus() const {
  return roledeletestatus_;
}
inline void PBCharProfile::set_roledeletestatus(::google::protobuf::uint32 value) {
  _set_bit(15);
  roledeletestatus_ = value;
}

// optional uint32 DeleteStatusLeftTime = 17;
inline bool PBCharProfile::has_deletestatuslefttime() const {
  return _has_bit(16);
}
inline void PBCharProfile::clear_deletestatuslefttime() {
  deletestatuslefttime_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBCharProfile::deletestatuslefttime() const {
  return deletestatuslefttime_;
}
inline void PBCharProfile::set_deletestatuslefttime(::google::protobuf::uint32 value) {
  _set_bit(16);
  deletestatuslefttime_ = value;
}

// optional uint32 PasswordUsed = 18;
inline bool PBCharProfile::has_passwordused() const {
  return _has_bit(17);
}
inline void PBCharProfile::clear_passwordused() {
  passwordused_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBCharProfile::passwordused() const {
  return passwordused_;
}
inline void PBCharProfile::set_passwordused(::google::protobuf::uint32 value) {
  _set_bit(17);
  passwordused_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainCharNotice

// repeated .PBCharProfile CharProfile = 1;
inline int CMessageObtainCharNotice::charprofile_size() const {
  return charprofile_.size();
}
inline void CMessageObtainCharNotice::clear_charprofile() {
  charprofile_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCharProfile >&
CMessageObtainCharNotice::charprofile() const {
  return charprofile_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCharProfile >*
CMessageObtainCharNotice::mutable_charprofile() {
  return &charprofile_;
}
inline const ::PBCharProfile& CMessageObtainCharNotice::charprofile(int index) const {
  return charprofile_.Get(index);
}
inline ::PBCharProfile* CMessageObtainCharNotice::mutable_charprofile(int index) {
  return charprofile_.Mutable(index);
}
inline ::PBCharProfile* CMessageObtainCharNotice::add_charprofile() {
  return charprofile_.Add();
}

// optional uint32 LastLoginIP = 2;
inline bool CMessageObtainCharNotice::has_lastloginip() const {
  return _has_bit(1);
}
inline void CMessageObtainCharNotice::clear_lastloginip() {
  lastloginip_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageObtainCharNotice::lastloginip() const {
  return lastloginip_;
}
inline void CMessageObtainCharNotice::set_lastloginip(::google::protobuf::uint32 value) {
  _set_bit(1);
  lastloginip_ = value;
}

// optional uint32 LoginIP = 3;
inline bool CMessageObtainCharNotice::has_loginip() const {
  return _has_bit(2);
}
inline void CMessageObtainCharNotice::clear_loginip() {
  loginip_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageObtainCharNotice::loginip() const {
  return loginip_;
}
inline void CMessageObtainCharNotice::set_loginip(::google::protobuf::uint32 value) {
  _set_bit(2);
  loginip_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainCharCompleteNotice

// -------------------------------------------------------------------

// CMessageEnterGameRequest

// optional uint32 AccountID = 1;
inline bool CMessageEnterGameRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageEnterGameRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterGameRequest::accountid() const {
  return accountid_;
}
inline void CMessageEnterGameRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageEnterGameRequest::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageEnterGameRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageEnterGameRequest::lineid() const {
  return lineid_;
}
inline void CMessageEnterGameRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageEnterGameRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageEnterGameRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageEnterGameRequest::mapid() const {
  return mapid_;
}
inline void CMessageEnterGameRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 CharID = 4;
inline bool CMessageEnterGameRequest::has_charid() const {
  return _has_bit(3);
}
inline void CMessageEnterGameRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageEnterGameRequest::charid() const {
  return charid_;
}
inline void CMessageEnterGameRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// optional string Mac = 5;
inline bool CMessageEnterGameRequest::has_mac() const {
  return _has_bit(4);
}
inline void CMessageEnterGameRequest::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageEnterGameRequest::mac() const {
  return *mac_;
}
inline void CMessageEnterGameRequest::set_mac(const ::std::string& value) {
  _set_bit(4);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageEnterGameRequest::set_mac(const char* value) {
  _set_bit(4);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageEnterGameRequest::set_mac(const char* value, size_t size) {
  _set_bit(4);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageEnterGameRequest::mutable_mac() {
  _set_bit(4);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// -------------------------------------------------------------------

// CMessageEnterGameResponse

// optional string SceneName = 1;
inline bool CMessageEnterGameResponse::has_scenename() const {
  return _has_bit(0);
}
inline void CMessageEnterGameResponse::clear_scenename() {
  if (scenename_ != &_default_scenename_) {
    scenename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageEnterGameResponse::scenename() const {
  return *scenename_;
}
inline void CMessageEnterGameResponse::set_scenename(const ::std::string& value) {
  _set_bit(0);
  if (scenename_ == &_default_scenename_) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
}
inline void CMessageEnterGameResponse::set_scenename(const char* value) {
  _set_bit(0);
  if (scenename_ == &_default_scenename_) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(value);
}
inline void CMessageEnterGameResponse::set_scenename(const char* value, size_t size) {
  _set_bit(0);
  if (scenename_ == &_default_scenename_) {
    scenename_ = new ::std::string;
  }
  scenename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageEnterGameResponse::mutable_scenename() {
  _set_bit(0);
  if (scenename_ == &_default_scenename_) {
    scenename_ = new ::std::string;
  }
  return scenename_;
}

// optional string Address = 2;
inline bool CMessageEnterGameResponse::has_address() const {
  return _has_bit(1);
}
inline void CMessageEnterGameResponse::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageEnterGameResponse::address() const {
  return *address_;
}
inline void CMessageEnterGameResponse::set_address(const ::std::string& value) {
  _set_bit(1);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageEnterGameResponse::set_address(const char* value) {
  _set_bit(1);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageEnterGameResponse::set_address(const char* value, size_t size) {
  _set_bit(1);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageEnterGameResponse::mutable_address() {
  _set_bit(1);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// optional uint32 ClearDialog = 3;
inline bool CMessageEnterGameResponse::has_cleardialog() const {
  return _has_bit(2);
}
inline void CMessageEnterGameResponse::clear_cleardialog() {
  cleardialog_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageEnterGameResponse::cleardialog() const {
  return cleardialog_;
}
inline void CMessageEnterGameResponse::set_cleardialog(::google::protobuf::uint32 value) {
  _set_bit(2);
  cleardialog_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginSceneRequest

// optional uint32 AccountID = 1;
inline bool CMessageLoginSceneRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageLoginSceneRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoginSceneRequest::accountid() const {
  return accountid_;
}
inline void CMessageLoginSceneRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageLoginSceneRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageLoginSceneRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoginSceneRequest::charid() const {
  return charid_;
}
inline void CMessageLoginSceneRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 LoginToken = 3;
inline bool CMessageLoginSceneRequest::has_logintoken() const {
  return _has_bit(2);
}
inline void CMessageLoginSceneRequest::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoginSceneRequest::logintoken() const {
  return logintoken_;
}
inline void CMessageLoginSceneRequest::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(2);
  logintoken_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginSceneResponse

// optional bytes Key = 1;
inline bool CMessageLoginSceneResponse::has_key() const {
  return _has_bit(0);
}
inline void CMessageLoginSceneResponse::clear_key() {
  if (key_ != &_default_key_) {
    key_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageLoginSceneResponse::key() const {
  return *key_;
}
inline void CMessageLoginSceneResponse::set_key(const ::std::string& value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CMessageLoginSceneResponse::set_key(const char* value) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CMessageLoginSceneResponse::set_key(const void* value, size_t size) {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLoginSceneResponse::mutable_key() {
  _set_bit(0);
  if (key_ == &_default_key_) {
    key_ = new ::std::string;
  }
  return key_;
}

// optional uint32 CSDialogID = 2;
inline bool CMessageLoginSceneResponse::has_csdialogid() const {
  return _has_bit(1);
}
inline void CMessageLoginSceneResponse::clear_csdialogid() {
  csdialogid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoginSceneResponse::csdialogid() const {
  return csdialogid_;
}
inline void CMessageLoginSceneResponse::set_csdialogid(::google::protobuf::uint32 value) {
  _set_bit(1);
  csdialogid_ = value;
}

// optional uint64 ServerTime = 3;
inline bool CMessageLoginSceneResponse::has_servertime() const {
  return _has_bit(2);
}
inline void CMessageLoginSceneResponse::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageLoginSceneResponse::servertime() const {
  return servertime_;
}
inline void CMessageLoginSceneResponse::set_servertime(::google::protobuf::uint64 value) {
  _set_bit(2);
  servertime_ = value;
}

// -------------------------------------------------------------------

// CMessageReturn2GateRequest

// -------------------------------------------------------------------

// CMessageReturn2GateResponse

// optional uint32 ReturnType = 1;
inline bool CMessageReturn2GateResponse::has_returntype() const {
  return _has_bit(0);
}
inline void CMessageReturn2GateResponse::clear_returntype() {
  returntype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageReturn2GateResponse::returntype() const {
  return returntype_;
}
inline void CMessageReturn2GateResponse::set_returntype(::google::protobuf::uint32 value) {
  _set_bit(0);
  returntype_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateCharRequest

// optional .PBCharProfile Profile = 1;
inline bool CMessageCreateCharRequest::has_profile() const {
  return _has_bit(0);
}
inline void CMessageCreateCharRequest::clear_profile() {
  if (profile_ != NULL) profile_->::PBCharProfile::Clear();
  _clear_bit(0);
}
inline const ::PBCharProfile& CMessageCreateCharRequest::profile() const {
  return profile_ != NULL ? *profile_ : *default_instance_->profile_;
}
inline ::PBCharProfile* CMessageCreateCharRequest::mutable_profile() {
  _set_bit(0);
  if (profile_ == NULL) profile_ = new ::PBCharProfile;
  return profile_;
}

// -------------------------------------------------------------------

// CMessageCreateCharResponse

// optional uint32 CharID = 1;
inline bool CMessageCreateCharResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCreateCharResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateCharResponse::charid() const {
  return charid_;
}
inline void CMessageCreateCharResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageDeleteCharRequest

// optional uint32 PasswdType = 1;
inline bool CMessageDeleteCharRequest::has_passwdtype() const {
  return _has_bit(0);
}
inline void CMessageDeleteCharRequest::clear_passwdtype() {
  passwdtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDeleteCharRequest::passwdtype() const {
  return passwdtype_;
}
inline void CMessageDeleteCharRequest::set_passwdtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  passwdtype_ = value;
}

// optional string Passwd = 2;
inline bool CMessageDeleteCharRequest::has_passwd() const {
  return _has_bit(1);
}
inline void CMessageDeleteCharRequest::clear_passwd() {
  if (passwd_ != &_default_passwd_) {
    passwd_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageDeleteCharRequest::passwd() const {
  return *passwd_;
}
inline void CMessageDeleteCharRequest::set_passwd(const ::std::string& value) {
  _set_bit(1);
  if (passwd_ == &_default_passwd_) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void CMessageDeleteCharRequest::set_passwd(const char* value) {
  _set_bit(1);
  if (passwd_ == &_default_passwd_) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void CMessageDeleteCharRequest::set_passwd(const char* value, size_t size) {
  _set_bit(1);
  if (passwd_ == &_default_passwd_) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageDeleteCharRequest::mutable_passwd() {
  _set_bit(1);
  if (passwd_ == &_default_passwd_) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}

// optional uint32 CharID = 3;
inline bool CMessageDeleteCharRequest::has_charid() const {
  return _has_bit(2);
}
inline void CMessageDeleteCharRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageDeleteCharRequest::charid() const {
  return charid_;
}
inline void CMessageDeleteCharRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageDeleteCharResponse

// optional uint32 CharID = 1;
inline bool CMessageDeleteCharResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageDeleteCharResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDeleteCharResponse::charid() const {
  return charid_;
}
inline void CMessageDeleteCharResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Errcode = 2;
inline bool CMessageDeleteCharResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageDeleteCharResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDeleteCharResponse::errcode() const {
  return errcode_;
}
inline void CMessageDeleteCharResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 DeleteStatus = 3;
inline bool CMessageDeleteCharResponse::has_deletestatus() const {
  return _has_bit(2);
}
inline void CMessageDeleteCharResponse::clear_deletestatus() {
  deletestatus_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageDeleteCharResponse::deletestatus() const {
  return deletestatus_;
}
inline void CMessageDeleteCharResponse::set_deletestatus(::google::protobuf::uint32 value) {
  _set_bit(2);
  deletestatus_ = value;
}

// optional uint32 DeleteStatusLeftTime = 4;
inline bool CMessageDeleteCharResponse::has_deletestatuslefttime() const {
  return _has_bit(3);
}
inline void CMessageDeleteCharResponse::clear_deletestatuslefttime() {
  deletestatuslefttime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageDeleteCharResponse::deletestatuslefttime() const {
  return deletestatuslefttime_;
}
inline void CMessageDeleteCharResponse::set_deletestatuslefttime(::google::protobuf::uint32 value) {
  _set_bit(3);
  deletestatuslefttime_ = value;
}

// -------------------------------------------------------------------

// CMessageReconnectSceneNotice

// optional uint32 MapID = 1;
inline bool CMessageReconnectSceneNotice::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageReconnectSceneNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageReconnectSceneNotice::mapid() const {
  return mapid_;
}
inline void CMessageReconnectSceneNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageReconnectSceneNotice::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageReconnectSceneNotice::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReconnectSceneNotice::lineid() const {
  return lineid_;
}
inline void CMessageReconnectSceneNotice::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional string Address = 3;
inline bool CMessageReconnectSceneNotice::has_address() const {
  return _has_bit(2);
}
inline void CMessageReconnectSceneNotice::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageReconnectSceneNotice::address() const {
  return *address_;
}
inline void CMessageReconnectSceneNotice::set_address(const ::std::string& value) {
  _set_bit(2);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_address(const char* value) {
  _set_bit(2);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_address(const char* value, size_t size) {
  _set_bit(2);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReconnectSceneNotice::mutable_address() {
  _set_bit(2);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// optional uint32 PosY = 4;
inline bool CMessageReconnectSceneNotice::has_posy() const {
  return _has_bit(3);
}
inline void CMessageReconnectSceneNotice::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReconnectSceneNotice::posy() const {
  return posy_;
}
inline void CMessageReconnectSceneNotice::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// optional uint32 PosX = 5;
inline bool CMessageReconnectSceneNotice::has_posx() const {
  return _has_bit(4);
}
inline void CMessageReconnectSceneNotice::clear_posx() {
  posx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageReconnectSceneNotice::posx() const {
  return posx_;
}
inline void CMessageReconnectSceneNotice::set_posx(::google::protobuf::uint32 value) {
  _set_bit(4);
  posx_ = value;
}

// optional string CountryName = 6;
inline bool CMessageReconnectSceneNotice::has_countryname() const {
  return _has_bit(5);
}
inline void CMessageReconnectSceneNotice::clear_countryname() {
  if (countryname_ != &_default_countryname_) {
    countryname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageReconnectSceneNotice::countryname() const {
  return *countryname_;
}
inline void CMessageReconnectSceneNotice::set_countryname(const ::std::string& value) {
  _set_bit(5);
  if (countryname_ == &_default_countryname_) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_countryname(const char* value) {
  _set_bit(5);
  if (countryname_ == &_default_countryname_) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_countryname(const char* value, size_t size) {
  _set_bit(5);
  if (countryname_ == &_default_countryname_) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReconnectSceneNotice::mutable_countryname() {
  _set_bit(5);
  if (countryname_ == &_default_countryname_) {
    countryname_ = new ::std::string;
  }
  return countryname_;
}

// optional string MapName = 7;
inline bool CMessageReconnectSceneNotice::has_mapname() const {
  return _has_bit(6);
}
inline void CMessageReconnectSceneNotice::clear_mapname() {
  if (mapname_ != &_default_mapname_) {
    mapname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageReconnectSceneNotice::mapname() const {
  return *mapname_;
}
inline void CMessageReconnectSceneNotice::set_mapname(const ::std::string& value) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_mapname(const char* value) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
}
inline void CMessageReconnectSceneNotice::set_mapname(const char* value, size_t size) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReconnectSceneNotice::mutable_mapname() {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  return mapname_;
}

// -------------------------------------------------------------------

// CMessageRedirectSceneRequest

// optional uint32 AccountID = 1;
inline bool CMessageRedirectSceneRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageRedirectSceneRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRedirectSceneRequest::accountid() const {
  return accountid_;
}
inline void CMessageRedirectSceneRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 LoginToken = 2;
inline bool CMessageRedirectSceneRequest::has_logintoken() const {
  return _has_bit(1);
}
inline void CMessageRedirectSceneRequest::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRedirectSceneRequest::logintoken() const {
  return logintoken_;
}
inline void CMessageRedirectSceneRequest::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(1);
  logintoken_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageRedirectSceneRequest::has_charid() const {
  return _has_bit(2);
}
inline void CMessageRedirectSceneRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectSceneRequest::charid() const {
  return charid_;
}
inline void CMessageRedirectSceneRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageRedirectSceneResponse

// -------------------------------------------------------------------

// CMessageLeaveGameRequest

// optional uint32 LeaveType = 1;
inline bool CMessageLeaveGameRequest::has_leavetype() const {
  return _has_bit(0);
}
inline void CMessageLeaveGameRequest::clear_leavetype() {
  leavetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLeaveGameRequest::leavetype() const {
  return leavetype_;
}
inline void CMessageLeaveGameRequest::set_leavetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  leavetype_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveGameResponse

// -------------------------------------------------------------------

// CMessageKickoutNotice

// optional uint32 reason = 1;
inline bool CMessageKickoutNotice::has_reason() const {
  return _has_bit(0);
}
inline void CMessageKickoutNotice::clear_reason() {
  reason_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickoutNotice::reason() const {
  return reason_;
}
inline void CMessageKickoutNotice::set_reason(::google::protobuf::uint32 value) {
  _set_bit(0);
  reason_ = value;
}

// optional uint32 param = 2;
inline bool CMessageKickoutNotice::has_param() const {
  return _has_bit(1);
}
inline void CMessageKickoutNotice::clear_param() {
  param_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickoutNotice::param() const {
  return param_;
}
inline void CMessageKickoutNotice::set_param(::google::protobuf::uint32 value) {
  _set_bit(1);
  param_ = value;
}

// -------------------------------------------------------------------

// CMessageClientPingServerRequest

// optional uint32 CharID = 1;
inline bool CMessageClientPingServerRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageClientPingServerRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClientPingServerRequest::charid() const {
  return charid_;
}
inline void CMessageClientPingServerRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LatestPingValue = 2;
inline bool CMessageClientPingServerRequest::has_latestpingvalue() const {
  return _has_bit(1);
}
inline void CMessageClientPingServerRequest::clear_latestpingvalue() {
  latestpingvalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageClientPingServerRequest::latestpingvalue() const {
  return latestpingvalue_;
}
inline void CMessageClientPingServerRequest::set_latestpingvalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  latestpingvalue_ = value;
}

// optional uint64 ClientLocalTime = 3;
inline bool CMessageClientPingServerRequest::has_clientlocaltime() const {
  return _has_bit(2);
}
inline void CMessageClientPingServerRequest::clear_clientlocaltime() {
  clientlocaltime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageClientPingServerRequest::clientlocaltime() const {
  return clientlocaltime_;
}
inline void CMessageClientPingServerRequest::set_clientlocaltime(::google::protobuf::uint64 value) {
  _set_bit(2);
  clientlocaltime_ = value;
}

// -------------------------------------------------------------------

// CMessageClientPingServerResponse

// optional uint32 CharID = 1;
inline bool CMessageClientPingServerResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageClientPingServerResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClientPingServerResponse::charid() const {
  return charid_;
}
inline void CMessageClientPingServerResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint64 ClientLocalTime = 2;
inline bool CMessageClientPingServerResponse::has_clientlocaltime() const {
  return _has_bit(1);
}
inline void CMessageClientPingServerResponse::clear_clientlocaltime() {
  clientlocaltime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMessageClientPingServerResponse::clientlocaltime() const {
  return clientlocaltime_;
}
inline void CMessageClientPingServerResponse::set_clientlocaltime(::google::protobuf::uint64 value) {
  _set_bit(1);
  clientlocaltime_ = value;
}

// optional uint64 ServerTime = 3;
inline bool CMessageClientPingServerResponse::has_servertime() const {
  return _has_bit(2);
}
inline void CMessageClientPingServerResponse::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageClientPingServerResponse::servertime() const {
  return servertime_;
}
inline void CMessageClientPingServerResponse::set_servertime(::google::protobuf::uint64 value) {
  _set_bit(2);
  servertime_ = value;
}

// -------------------------------------------------------------------

// CMessageGateKickPlayerNotify

// optional uint32 CharID = 1;
inline bool CMessageGateKickPlayerNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGateKickPlayerNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGateKickPlayerNotify::charid() const {
  return charid_;
}
inline void CMessageGateKickPlayerNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 KickReason = 2;
inline bool CMessageGateKickPlayerNotify::has_kickreason() const {
  return _has_bit(1);
}
inline void CMessageGateKickPlayerNotify::clear_kickreason() {
  kickreason_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGateKickPlayerNotify::kickreason() const {
  return kickreason_;
}
inline void CMessageGateKickPlayerNotify::set_kickreason(::google::protobuf::uint32 value) {
  _set_bit(1);
  kickreason_ = value;
}

// -------------------------------------------------------------------

// CMessageQueuePlayerNotify

// optional uint32 CountInScene = 1;
inline bool CMessageQueuePlayerNotify::has_countinscene() const {
  return _has_bit(0);
}
inline void CMessageQueuePlayerNotify::clear_countinscene() {
  countinscene_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueuePlayerNotify::countinscene() const {
  return countinscene_;
}
inline void CMessageQueuePlayerNotify::set_countinscene(::google::protobuf::uint32 value) {
  _set_bit(0);
  countinscene_ = value;
}

// optional uint32 ElapsSeconds = 2;
inline bool CMessageQueuePlayerNotify::has_elapsseconds() const {
  return _has_bit(1);
}
inline void CMessageQueuePlayerNotify::clear_elapsseconds() {
  elapsseconds_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueuePlayerNotify::elapsseconds() const {
  return elapsseconds_;
}
inline void CMessageQueuePlayerNotify::set_elapsseconds(::google::protobuf::uint32 value) {
  _set_bit(1);
  elapsseconds_ = value;
}

// optional uint32 NeedSeconds = 3;
inline bool CMessageQueuePlayerNotify::has_needseconds() const {
  return _has_bit(2);
}
inline void CMessageQueuePlayerNotify::clear_needseconds() {
  needseconds_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueuePlayerNotify::needseconds() const {
  return needseconds_;
}
inline void CMessageQueuePlayerNotify::set_needseconds(::google::protobuf::uint32 value) {
  _set_bit(2);
  needseconds_ = value;
}

// optional uint32 YourPosition = 4;
inline bool CMessageQueuePlayerNotify::has_yourposition() const {
  return _has_bit(3);
}
inline void CMessageQueuePlayerNotify::clear_yourposition() {
  yourposition_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageQueuePlayerNotify::yourposition() const {
  return yourposition_;
}
inline void CMessageQueuePlayerNotify::set_yourposition(::google::protobuf::uint32 value) {
  _set_bit(3);
  yourposition_ = value;
}

// optional uint32 CountInQueue = 5;
inline bool CMessageQueuePlayerNotify::has_countinqueue() const {
  return _has_bit(4);
}
inline void CMessageQueuePlayerNotify::clear_countinqueue() {
  countinqueue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageQueuePlayerNotify::countinqueue() const {
  return countinqueue_;
}
inline void CMessageQueuePlayerNotify::set_countinqueue(::google::protobuf::uint32 value) {
  _set_bit(4);
  countinqueue_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerCancelLoginQueue

// -------------------------------------------------------------------

// CMessageCheckRolePwdRequest

// optional uint32 CharID = 1;
inline bool CMessageCheckRolePwdRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCheckRolePwdRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCheckRolePwdRequest::charid() const {
  return charid_;
}
inline void CMessageCheckRolePwdRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string Password = 2;
inline bool CMessageCheckRolePwdRequest::has_password() const {
  return _has_bit(1);
}
inline void CMessageCheckRolePwdRequest::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCheckRolePwdRequest::password() const {
  return *password_;
}
inline void CMessageCheckRolePwdRequest::set_password(const ::std::string& value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCheckRolePwdRequest::set_password(const char* value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCheckRolePwdRequest::set_password(const char* value, size_t size) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCheckRolePwdRequest::mutable_password() {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// -------------------------------------------------------------------

// CMessageCheckRolePwdResponse

// optional uint32 Errcode = 1;
inline bool CMessageCheckRolePwdResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCheckRolePwdResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCheckRolePwdResponse::errcode() const {
  return errcode_;
}
inline void CMessageCheckRolePwdResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageSendClientInfoRequest

// optional string HostInfo = 1;
inline bool CMessageSendClientInfoRequest::has_hostinfo() const {
  return _has_bit(0);
}
inline void CMessageSendClientInfoRequest::clear_hostinfo() {
  if (hostinfo_ != &_default_hostinfo_) {
    hostinfo_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageSendClientInfoRequest::hostinfo() const {
  return *hostinfo_;
}
inline void CMessageSendClientInfoRequest::set_hostinfo(const ::std::string& value) {
  _set_bit(0);
  if (hostinfo_ == &_default_hostinfo_) {
    hostinfo_ = new ::std::string;
  }
  hostinfo_->assign(value);
}
inline void CMessageSendClientInfoRequest::set_hostinfo(const char* value) {
  _set_bit(0);
  if (hostinfo_ == &_default_hostinfo_) {
    hostinfo_ = new ::std::string;
  }
  hostinfo_->assign(value);
}
inline void CMessageSendClientInfoRequest::set_hostinfo(const char* value, size_t size) {
  _set_bit(0);
  if (hostinfo_ == &_default_hostinfo_) {
    hostinfo_ = new ::std::string;
  }
  hostinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendClientInfoRequest::mutable_hostinfo() {
  _set_bit(0);
  if (hostinfo_ == &_default_hostinfo_) {
    hostinfo_ = new ::std::string;
  }
  return hostinfo_;
}

// optional string MacAddr = 2;
inline bool CMessageSendClientInfoRequest::has_macaddr() const {
  return _has_bit(1);
}
inline void CMessageSendClientInfoRequest::clear_macaddr() {
  if (macaddr_ != &_default_macaddr_) {
    macaddr_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageSendClientInfoRequest::macaddr() const {
  return *macaddr_;
}
inline void CMessageSendClientInfoRequest::set_macaddr(const ::std::string& value) {
  _set_bit(1);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(value);
}
inline void CMessageSendClientInfoRequest::set_macaddr(const char* value) {
  _set_bit(1);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(value);
}
inline void CMessageSendClientInfoRequest::set_macaddr(const char* value, size_t size) {
  _set_bit(1);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendClientInfoRequest::mutable_macaddr() {
  _set_bit(1);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  return macaddr_;
}

// -------------------------------------------------------------------

// CMessageSendAntiBotDataToServerNotify

// optional uint32 Length = 1;
inline bool CMessageSendAntiBotDataToServerNotify::has_length() const {
  return _has_bit(0);
}
inline void CMessageSendAntiBotDataToServerNotify::clear_length() {
  length_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSendAntiBotDataToServerNotify::length() const {
  return length_;
}
inline void CMessageSendAntiBotDataToServerNotify::set_length(::google::protobuf::uint32 value) {
  _set_bit(0);
  length_ = value;
}

// optional bytes ClientData = 2;
inline bool CMessageSendAntiBotDataToServerNotify::has_clientdata() const {
  return _has_bit(1);
}
inline void CMessageSendAntiBotDataToServerNotify::clear_clientdata() {
  if (clientdata_ != &_default_clientdata_) {
    clientdata_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageSendAntiBotDataToServerNotify::clientdata() const {
  return *clientdata_;
}
inline void CMessageSendAntiBotDataToServerNotify::set_clientdata(const ::std::string& value) {
  _set_bit(1);
  if (clientdata_ == &_default_clientdata_) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(value);
}
inline void CMessageSendAntiBotDataToServerNotify::set_clientdata(const char* value) {
  _set_bit(1);
  if (clientdata_ == &_default_clientdata_) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(value);
}
inline void CMessageSendAntiBotDataToServerNotify::set_clientdata(const void* value, size_t size) {
  _set_bit(1);
  if (clientdata_ == &_default_clientdata_) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendAntiBotDataToServerNotify::mutable_clientdata() {
  _set_bit(1);
  if (clientdata_ == &_default_clientdata_) {
    clientdata_ = new ::std::string;
  }
  return clientdata_;
}

// -------------------------------------------------------------------

// CMessageSendAntiBotDataToClientNotify

// optional bytes ServerData = 1;
inline bool CMessageSendAntiBotDataToClientNotify::has_serverdata() const {
  return _has_bit(0);
}
inline void CMessageSendAntiBotDataToClientNotify::clear_serverdata() {
  if (serverdata_ != &_default_serverdata_) {
    serverdata_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageSendAntiBotDataToClientNotify::serverdata() const {
  return *serverdata_;
}
inline void CMessageSendAntiBotDataToClientNotify::set_serverdata(const ::std::string& value) {
  _set_bit(0);
  if (serverdata_ == &_default_serverdata_) {
    serverdata_ = new ::std::string;
  }
  serverdata_->assign(value);
}
inline void CMessageSendAntiBotDataToClientNotify::set_serverdata(const char* value) {
  _set_bit(0);
  if (serverdata_ == &_default_serverdata_) {
    serverdata_ = new ::std::string;
  }
  serverdata_->assign(value);
}
inline void CMessageSendAntiBotDataToClientNotify::set_serverdata(const void* value, size_t size) {
  _set_bit(0);
  if (serverdata_ == &_default_serverdata_) {
    serverdata_ = new ::std::string;
  }
  serverdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendAntiBotDataToClientNotify::mutable_serverdata() {
  _set_bit(0);
  if (serverdata_ == &_default_serverdata_) {
    serverdata_ = new ::std::string;
  }
  return serverdata_;
}

// optional uint32 Length = 2;
inline bool CMessageSendAntiBotDataToClientNotify::has_length() const {
  return _has_bit(1);
}
inline void CMessageSendAntiBotDataToClientNotify::clear_length() {
  length_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSendAntiBotDataToClientNotify::length() const {
  return length_;
}
inline void CMessageSendAntiBotDataToClientNotify::set_length(::google::protobuf::uint32 value) {
  _set_bit(1);
  length_ = value;
}

// -------------------------------------------------------------------

// CMessageClientAntiBotStartRetNotify

// optional uint32 StartRet = 1;
inline bool CMessageClientAntiBotStartRetNotify::has_startret() const {
  return _has_bit(0);
}
inline void CMessageClientAntiBotStartRetNotify::clear_startret() {
  startret_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClientAntiBotStartRetNotify::startret() const {
  return startret_;
}
inline void CMessageClientAntiBotStartRetNotify::set_startret(::google::protobuf::uint32 value) {
  _set_bit(0);
  startret_ = value;
}

// -------------------------------------------------------------------

// CMessageDisconnectNotify

// -------------------------------------------------------------------

// CMessageUserAuthNotify

// optional uint32 ActionID = 1;
inline bool CMessageUserAuthNotify::has_actionid() const {
  return _has_bit(0);
}
inline void CMessageUserAuthNotify::clear_actionid() {
  actionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserAuthNotify::actionid() const {
  return actionid_;
}
inline void CMessageUserAuthNotify::set_actionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  actionid_ = value;
}

// optional uint32 AuthType = 2;
inline bool CMessageUserAuthNotify::has_authtype() const {
  return _has_bit(1);
}
inline void CMessageUserAuthNotify::clear_authtype() {
  authtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserAuthNotify::authtype() const {
  return authtype_;
}
inline void CMessageUserAuthNotify::set_authtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  authtype_ = value;
}

// -------------------------------------------------------------------

// CMessageUserAuthRequest

// optional uint32 ActionID = 1;
inline bool CMessageUserAuthRequest::has_actionid() const {
  return _has_bit(0);
}
inline void CMessageUserAuthRequest::clear_actionid() {
  actionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserAuthRequest::actionid() const {
  return actionid_;
}
inline void CMessageUserAuthRequest::set_actionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  actionid_ = value;
}

// optional uint32 AuthValue = 2;
inline bool CMessageUserAuthRequest::has_authvalue() const {
  return _has_bit(1);
}
inline void CMessageUserAuthRequest::clear_authvalue() {
  authvalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserAuthRequest::authvalue() const {
  return authvalue_;
}
inline void CMessageUserAuthRequest::set_authvalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  authvalue_ = value;
}

// -------------------------------------------------------------------

// CMessageUserAuthResponse

// optional uint32 ActionID = 1;
inline bool CMessageUserAuthResponse::has_actionid() const {
  return _has_bit(0);
}
inline void CMessageUserAuthResponse::clear_actionid() {
  actionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserAuthResponse::actionid() const {
  return actionid_;
}
inline void CMessageUserAuthResponse::set_actionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  actionid_ = value;
}

// optional uint32 OK = 2;
inline bool CMessageUserAuthResponse::has_ok() const {
  return _has_bit(1);
}
inline void CMessageUserAuthResponse::clear_ok() {
  ok_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserAuthResponse::ok() const {
  return ok_;
}
inline void CMessageUserAuthResponse::set_ok(::google::protobuf::uint32 value) {
  _set_bit(1);
  ok_ = value;
}

// -------------------------------------------------------------------

// CMessageCancelDeleteRoleRequest

// optional uint32 RoleID = 1;
inline bool CMessageCancelDeleteRoleRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageCancelDeleteRoleRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCancelDeleteRoleRequest::roleid() const {
  return roleid_;
}
inline void CMessageCancelDeleteRoleRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageCancelDeleteRoleResponse

// optional uint32 Errcode = 1;
inline bool CMessageCancelDeleteRoleResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCancelDeleteRoleResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCancelDeleteRoleResponse::errcode() const {
  return errcode_;
}
inline void CMessageCancelDeleteRoleResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCancelDeleteRoleResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCancelDeleteRoleResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCancelDeleteRoleResponse::roleid() const {
  return roleid_;
}
inline void CMessageCancelDeleteRoleResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageQuestionRequireRequest

// -------------------------------------------------------------------

// CMessageQuestionRequireResponse

// optional .CMessageQuestionRequireResponse.EStatus Status = 1;
inline bool CMessageQuestionRequireResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageQuestionRequireResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageQuestionRequireResponse_EStatus CMessageQuestionRequireResponse::status() const {
  return static_cast< ::CMessageQuestionRequireResponse_EStatus >(status_);
}
inline void CMessageQuestionRequireResponse::set_status(::CMessageQuestionRequireResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageQuestionRequireResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 QuestionId = 2;
inline bool CMessageQuestionRequireResponse::has_questionid() const {
  return _has_bit(1);
}
inline void CMessageQuestionRequireResponse::clear_questionid() {
  questionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQuestionRequireResponse::questionid() const {
  return questionid_;
}
inline void CMessageQuestionRequireResponse::set_questionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  questionid_ = value;
}

// optional string Question = 3;
inline bool CMessageQuestionRequireResponse::has_question() const {
  return _has_bit(2);
}
inline void CMessageQuestionRequireResponse::clear_question() {
  if (question_ != &_default_question_) {
    question_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageQuestionRequireResponse::question() const {
  return *question_;
}
inline void CMessageQuestionRequireResponse::set_question(const ::std::string& value) {
  _set_bit(2);
  if (question_ == &_default_question_) {
    question_ = new ::std::string;
  }
  question_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_question(const char* value) {
  _set_bit(2);
  if (question_ == &_default_question_) {
    question_ = new ::std::string;
  }
  question_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_question(const char* value, size_t size) {
  _set_bit(2);
  if (question_ == &_default_question_) {
    question_ = new ::std::string;
  }
  question_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionRequireResponse::mutable_question() {
  _set_bit(2);
  if (question_ == &_default_question_) {
    question_ = new ::std::string;
  }
  return question_;
}

// optional bytes OptionA = 4;
inline bool CMessageQuestionRequireResponse::has_optiona() const {
  return _has_bit(3);
}
inline void CMessageQuestionRequireResponse::clear_optiona() {
  if (optiona_ != &_default_optiona_) {
    optiona_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageQuestionRequireResponse::optiona() const {
  return *optiona_;
}
inline void CMessageQuestionRequireResponse::set_optiona(const ::std::string& value) {
  _set_bit(3);
  if (optiona_ == &_default_optiona_) {
    optiona_ = new ::std::string;
  }
  optiona_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optiona(const char* value) {
  _set_bit(3);
  if (optiona_ == &_default_optiona_) {
    optiona_ = new ::std::string;
  }
  optiona_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optiona(const void* value, size_t size) {
  _set_bit(3);
  if (optiona_ == &_default_optiona_) {
    optiona_ = new ::std::string;
  }
  optiona_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionRequireResponse::mutable_optiona() {
  _set_bit(3);
  if (optiona_ == &_default_optiona_) {
    optiona_ = new ::std::string;
  }
  return optiona_;
}

// optional bytes OptionB = 5;
inline bool CMessageQuestionRequireResponse::has_optionb() const {
  return _has_bit(4);
}
inline void CMessageQuestionRequireResponse::clear_optionb() {
  if (optionb_ != &_default_optionb_) {
    optionb_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageQuestionRequireResponse::optionb() const {
  return *optionb_;
}
inline void CMessageQuestionRequireResponse::set_optionb(const ::std::string& value) {
  _set_bit(4);
  if (optionb_ == &_default_optionb_) {
    optionb_ = new ::std::string;
  }
  optionb_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optionb(const char* value) {
  _set_bit(4);
  if (optionb_ == &_default_optionb_) {
    optionb_ = new ::std::string;
  }
  optionb_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optionb(const void* value, size_t size) {
  _set_bit(4);
  if (optionb_ == &_default_optionb_) {
    optionb_ = new ::std::string;
  }
  optionb_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionRequireResponse::mutable_optionb() {
  _set_bit(4);
  if (optionb_ == &_default_optionb_) {
    optionb_ = new ::std::string;
  }
  return optionb_;
}

// optional bytes OptionC = 6;
inline bool CMessageQuestionRequireResponse::has_optionc() const {
  return _has_bit(5);
}
inline void CMessageQuestionRequireResponse::clear_optionc() {
  if (optionc_ != &_default_optionc_) {
    optionc_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageQuestionRequireResponse::optionc() const {
  return *optionc_;
}
inline void CMessageQuestionRequireResponse::set_optionc(const ::std::string& value) {
  _set_bit(5);
  if (optionc_ == &_default_optionc_) {
    optionc_ = new ::std::string;
  }
  optionc_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optionc(const char* value) {
  _set_bit(5);
  if (optionc_ == &_default_optionc_) {
    optionc_ = new ::std::string;
  }
  optionc_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optionc(const void* value, size_t size) {
  _set_bit(5);
  if (optionc_ == &_default_optionc_) {
    optionc_ = new ::std::string;
  }
  optionc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionRequireResponse::mutable_optionc() {
  _set_bit(5);
  if (optionc_ == &_default_optionc_) {
    optionc_ = new ::std::string;
  }
  return optionc_;
}

// optional bytes OptionD = 7;
inline bool CMessageQuestionRequireResponse::has_optiond() const {
  return _has_bit(6);
}
inline void CMessageQuestionRequireResponse::clear_optiond() {
  if (optiond_ != &_default_optiond_) {
    optiond_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageQuestionRequireResponse::optiond() const {
  return *optiond_;
}
inline void CMessageQuestionRequireResponse::set_optiond(const ::std::string& value) {
  _set_bit(6);
  if (optiond_ == &_default_optiond_) {
    optiond_ = new ::std::string;
  }
  optiond_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optiond(const char* value) {
  _set_bit(6);
  if (optiond_ == &_default_optiond_) {
    optiond_ = new ::std::string;
  }
  optiond_->assign(value);
}
inline void CMessageQuestionRequireResponse::set_optiond(const void* value, size_t size) {
  _set_bit(6);
  if (optiond_ == &_default_optiond_) {
    optiond_ = new ::std::string;
  }
  optiond_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionRequireResponse::mutable_optiond() {
  _set_bit(6);
  if (optiond_ == &_default_optiond_) {
    optiond_ = new ::std::string;
  }
  return optiond_;
}

// -------------------------------------------------------------------

// CMessageQuestionAnswerRequest

// optional uint32 QuestionId = 1;
inline bool CMessageQuestionAnswerRequest::has_questionid() const {
  return _has_bit(0);
}
inline void CMessageQuestionAnswerRequest::clear_questionid() {
  questionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQuestionAnswerRequest::questionid() const {
  return questionid_;
}
inline void CMessageQuestionAnswerRequest::set_questionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  questionid_ = value;
}

// optional bytes Answer = 2;
inline bool CMessageQuestionAnswerRequest::has_answer() const {
  return _has_bit(1);
}
inline void CMessageQuestionAnswerRequest::clear_answer() {
  if (answer_ != &_default_answer_) {
    answer_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageQuestionAnswerRequest::answer() const {
  return *answer_;
}
inline void CMessageQuestionAnswerRequest::set_answer(const ::std::string& value) {
  _set_bit(1);
  if (answer_ == &_default_answer_) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
}
inline void CMessageQuestionAnswerRequest::set_answer(const char* value) {
  _set_bit(1);
  if (answer_ == &_default_answer_) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
}
inline void CMessageQuestionAnswerRequest::set_answer(const void* value, size_t size) {
  _set_bit(1);
  if (answer_ == &_default_answer_) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageQuestionAnswerRequest::mutable_answer() {
  _set_bit(1);
  if (answer_ == &_default_answer_) {
    answer_ = new ::std::string;
  }
  return answer_;
}

// -------------------------------------------------------------------

// CMessageQuestionAnswerResponse

// optional .CMessageQuestionAnswerResponse.EStatus Status = 1;
inline bool CMessageQuestionAnswerResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageQuestionAnswerResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageQuestionAnswerResponse_EStatus CMessageQuestionAnswerResponse::status() const {
  return static_cast< ::CMessageQuestionAnswerResponse_EStatus >(status_);
}
inline void CMessageQuestionAnswerResponse::set_status(::CMessageQuestionAnswerResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageQuestionAnswerResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginServerInfo

// optional uint32 id = 1;
inline bool CMessageLoginServerInfo::has_id() const {
  return _has_bit(0);
}
inline void CMessageLoginServerInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoginServerInfo::id() const {
  return id_;
}
inline void CMessageLoginServerInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 flag = 2;
inline bool CMessageLoginServerInfo::has_flag() const {
  return _has_bit(1);
}
inline void CMessageLoginServerInfo::clear_flag() {
  flag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoginServerInfo::flag() const {
  return flag_;
}
inline void CMessageLoginServerInfo::set_flag(::google::protobuf::uint32 value) {
  _set_bit(1);
  flag_ = value;
}

// optional uint32 status = 3;
inline bool CMessageLoginServerInfo::has_status() const {
  return _has_bit(2);
}
inline void CMessageLoginServerInfo::clear_status() {
  status_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoginServerInfo::status() const {
  return status_;
}
inline void CMessageLoginServerInfo::set_status(::google::protobuf::uint32 value) {
  _set_bit(2);
  status_ = value;
}

// optional uint32 count = 4;
inline bool CMessageLoginServerInfo::has_count() const {
  return _has_bit(3);
}
inline void CMessageLoginServerInfo::clear_count() {
  count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLoginServerInfo::count() const {
  return count_;
}
inline void CMessageLoginServerInfo::set_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  count_ = value;
}

// -------------------------------------------------------------------

// CMessageCertifyRequest

// optional string passport = 1;
inline bool CMessageCertifyRequest::has_passport() const {
  return _has_bit(0);
}
inline void CMessageCertifyRequest::clear_passport() {
  if (passport_ != &_default_passport_) {
    passport_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageCertifyRequest::passport() const {
  return *passport_;
}
inline void CMessageCertifyRequest::set_passport(const ::std::string& value) {
  _set_bit(0);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyRequest::set_passport(const char* value) {
  _set_bit(0);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyRequest::set_passport(const char* value, size_t size) {
  _set_bit(0);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_passport() {
  _set_bit(0);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  return passport_;
}

// optional string password = 2;
inline bool CMessageCertifyRequest::has_password() const {
  return _has_bit(1);
}
inline void CMessageCertifyRequest::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCertifyRequest::password() const {
  return *password_;
}
inline void CMessageCertifyRequest::set_password(const ::std::string& value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyRequest::set_password(const char* value) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyRequest::set_password(const char* value, size_t size) {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_password() {
  _set_bit(1);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional string md5Code = 3;
inline bool CMessageCertifyRequest::has_md5code() const {
  return _has_bit(2);
}
inline void CMessageCertifyRequest::clear_md5code() {
  if (md5code_ != &_default_md5code_) {
    md5code_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCertifyRequest::md5code() const {
  return *md5code_;
}
inline void CMessageCertifyRequest::set_md5code(const ::std::string& value) {
  _set_bit(2);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyRequest::set_md5code(const char* value) {
  _set_bit(2);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyRequest::set_md5code(const char* value, size_t size) {
  _set_bit(2);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_md5code() {
  _set_bit(2);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  return md5code_;
}

// optional string mac = 4;
inline bool CMessageCertifyRequest::has_mac() const {
  return _has_bit(3);
}
inline void CMessageCertifyRequest::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCertifyRequest::mac() const {
  return *mac_;
}
inline void CMessageCertifyRequest::set_mac(const ::std::string& value) {
  _set_bit(3);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageCertifyRequest::set_mac(const char* value) {
  _set_bit(3);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageCertifyRequest::set_mac(const char* value, size_t size) {
  _set_bit(3);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_mac() {
  _set_bit(3);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// optional int32 sourceId = 5;
inline bool CMessageCertifyRequest::has_sourceid() const {
  return _has_bit(4);
}
inline void CMessageCertifyRequest::clear_sourceid() {
  sourceid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageCertifyRequest::sourceid() const {
  return sourceid_;
}
inline void CMessageCertifyRequest::set_sourceid(::google::protobuf::int32 value) {
  _set_bit(4);
  sourceid_ = value;
}

// optional uint32 version = 6;
inline bool CMessageCertifyRequest::has_version() const {
  return _has_bit(5);
}
inline void CMessageCertifyRequest::clear_version() {
  version_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCertifyRequest::version() const {
  return version_;
}
inline void CMessageCertifyRequest::set_version(::google::protobuf::uint32 value) {
  _set_bit(5);
  version_ = value;
}

// optional uint32 taskVersion = 7;
inline bool CMessageCertifyRequest::has_taskversion() const {
  return _has_bit(6);
}
inline void CMessageCertifyRequest::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCertifyRequest::taskversion() const {
  return taskversion_;
}
inline void CMessageCertifyRequest::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(6);
  taskversion_ = value;
}

// optional uint32 templateVersion = 8;
inline bool CMessageCertifyRequest::has_templateversion() const {
  return _has_bit(7);
}
inline void CMessageCertifyRequest::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageCertifyRequest::templateversion() const {
  return templateversion_;
}
inline void CMessageCertifyRequest::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(7);
  templateversion_ = value;
}

// optional uint32 matrixType = 9;
inline bool CMessageCertifyRequest::has_matrixtype() const {
  return _has_bit(8);
}
inline void CMessageCertifyRequest::clear_matrixtype() {
  matrixtype_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageCertifyRequest::matrixtype() const {
  return matrixtype_;
}
inline void CMessageCertifyRequest::set_matrixtype(::google::protobuf::uint32 value) {
  _set_bit(8);
  matrixtype_ = value;
}

// optional string matrixCode = 10;
inline bool CMessageCertifyRequest::has_matrixcode() const {
  return _has_bit(9);
}
inline void CMessageCertifyRequest::clear_matrixcode() {
  if (matrixcode_ != &_default_matrixcode_) {
    matrixcode_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CMessageCertifyRequest::matrixcode() const {
  return *matrixcode_;
}
inline void CMessageCertifyRequest::set_matrixcode(const ::std::string& value) {
  _set_bit(9);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyRequest::set_matrixcode(const char* value) {
  _set_bit(9);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyRequest::set_matrixcode(const char* value, size_t size) {
  _set_bit(9);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_matrixcode() {
  _set_bit(9);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  return matrixcode_;
}

// optional string matrixCoord = 11;
inline bool CMessageCertifyRequest::has_matrixcoord() const {
  return _has_bit(10);
}
inline void CMessageCertifyRequest::clear_matrixcoord() {
  if (matrixcoord_ != &_default_matrixcoord_) {
    matrixcoord_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CMessageCertifyRequest::matrixcoord() const {
  return *matrixcoord_;
}
inline void CMessageCertifyRequest::set_matrixcoord(const ::std::string& value) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyRequest::set_matrixcoord(const char* value) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyRequest::set_matrixcoord(const char* value, size_t size) {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyRequest::mutable_matrixcoord() {
  _set_bit(10);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  return matrixcoord_;
}

// -------------------------------------------------------------------

// CMessageCertifyResponse

// optional .CMessageCertifyResponse.EStatus status = 1;
inline bool CMessageCertifyResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageCertifyResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageCertifyResponse_EStatus CMessageCertifyResponse::status() const {
  return static_cast< ::CMessageCertifyResponse_EStatus >(status_);
}
inline void CMessageCertifyResponse::set_status(::CMessageCertifyResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageCertifyResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageCertifyResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageCertifyResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCertifyResponse::playerid() const {
  return playerid_;
}
inline void CMessageCertifyResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 accountId = 3;
inline bool CMessageCertifyResponse::has_accountid() const {
  return _has_bit(2);
}
inline void CMessageCertifyResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCertifyResponse::accountid() const {
  return accountid_;
}
inline void CMessageCertifyResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 token = 4;
inline bool CMessageCertifyResponse::has_token() const {
  return _has_bit(3);
}
inline void CMessageCertifyResponse::clear_token() {
  token_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCertifyResponse::token() const {
  return token_;
}
inline void CMessageCertifyResponse::set_token(::google::protobuf::uint32 value) {
  _set_bit(3);
  token_ = value;
}

// repeated .CMessageLoginServerInfo servers = 5;
inline int CMessageCertifyResponse::servers_size() const {
  return servers_.size();
}
inline void CMessageCertifyResponse::clear_servers() {
  servers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMessageLoginServerInfo >&
CMessageCertifyResponse::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMessageLoginServerInfo >*
CMessageCertifyResponse::mutable_servers() {
  return &servers_;
}
inline const ::CMessageLoginServerInfo& CMessageCertifyResponse::servers(int index) const {
  return servers_.Get(index);
}
inline ::CMessageLoginServerInfo* CMessageCertifyResponse::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::CMessageLoginServerInfo* CMessageCertifyResponse::add_servers() {
  return servers_.Add();
}

// optional uint32 errorCode = 6;
inline bool CMessageCertifyResponse::has_errorcode() const {
  return _has_bit(5);
}
inline void CMessageCertifyResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCertifyResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageCertifyResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(5);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCertifyQueryRequest

// optional uint32 playerId = 1;
inline bool CMessageCertifyQueryRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageCertifyQueryRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::playerid() const {
  return playerid_;
}
inline void CMessageCertifyQueryRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 accountId = 2;
inline bool CMessageCertifyQueryRequest::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageCertifyQueryRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::accountid() const {
  return accountid_;
}
inline void CMessageCertifyQueryRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional string passport = 3;
inline bool CMessageCertifyQueryRequest::has_passport() const {
  return _has_bit(2);
}
inline void CMessageCertifyQueryRequest::clear_passport() {
  if (passport_ != &_default_passport_) {
    passport_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCertifyQueryRequest::passport() const {
  return *passport_;
}
inline void CMessageCertifyQueryRequest::set_passport(const ::std::string& value) {
  _set_bit(2);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_passport(const char* value) {
  _set_bit(2);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_passport(const char* value, size_t size) {
  _set_bit(2);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_passport() {
  _set_bit(2);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  return passport_;
}

// optional string password = 4;
inline bool CMessageCertifyQueryRequest::has_password() const {
  return _has_bit(3);
}
inline void CMessageCertifyQueryRequest::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCertifyQueryRequest::password() const {
  return *password_;
}
inline void CMessageCertifyQueryRequest::set_password(const ::std::string& value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_password(const char* value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_password(const char* value, size_t size) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_password() {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional string md5Code = 5;
inline bool CMessageCertifyQueryRequest::has_md5code() const {
  return _has_bit(4);
}
inline void CMessageCertifyQueryRequest::clear_md5code() {
  if (md5code_ != &_default_md5code_) {
    md5code_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCertifyQueryRequest::md5code() const {
  return *md5code_;
}
inline void CMessageCertifyQueryRequest::set_md5code(const ::std::string& value) {
  _set_bit(4);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_md5code(const char* value) {
  _set_bit(4);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_md5code(const char* value, size_t size) {
  _set_bit(4);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_md5code() {
  _set_bit(4);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  return md5code_;
}

// optional uint32 playerHost = 6;
inline bool CMessageCertifyQueryRequest::has_playerhost() const {
  return _has_bit(5);
}
inline void CMessageCertifyQueryRequest::clear_playerhost() {
  playerhost_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::playerhost() const {
  return playerhost_;
}
inline void CMessageCertifyQueryRequest::set_playerhost(::google::protobuf::uint32 value) {
  _set_bit(5);
  playerhost_ = value;
}

// optional uint32 playerPort = 7;
inline bool CMessageCertifyQueryRequest::has_playerport() const {
  return _has_bit(6);
}
inline void CMessageCertifyQueryRequest::clear_playerport() {
  playerport_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::playerport() const {
  return playerport_;
}
inline void CMessageCertifyQueryRequest::set_playerport(::google::protobuf::uint32 value) {
  _set_bit(6);
  playerport_ = value;
}

// optional string playerMac = 8;
inline bool CMessageCertifyQueryRequest::has_playermac() const {
  return _has_bit(7);
}
inline void CMessageCertifyQueryRequest::clear_playermac() {
  if (playermac_ != &_default_playermac_) {
    playermac_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageCertifyQueryRequest::playermac() const {
  return *playermac_;
}
inline void CMessageCertifyQueryRequest::set_playermac(const ::std::string& value) {
  _set_bit(7);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_playermac(const char* value) {
  _set_bit(7);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_playermac(const char* value, size_t size) {
  _set_bit(7);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_playermac() {
  _set_bit(7);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  return playermac_;
}

// optional int32 sourceId = 9;
inline bool CMessageCertifyQueryRequest::has_sourceid() const {
  return _has_bit(8);
}
inline void CMessageCertifyQueryRequest::clear_sourceid() {
  sourceid_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 CMessageCertifyQueryRequest::sourceid() const {
  return sourceid_;
}
inline void CMessageCertifyQueryRequest::set_sourceid(::google::protobuf::int32 value) {
  _set_bit(8);
  sourceid_ = value;
}

// optional uint32 version = 10;
inline bool CMessageCertifyQueryRequest::has_version() const {
  return _has_bit(9);
}
inline void CMessageCertifyQueryRequest::clear_version() {
  version_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::version() const {
  return version_;
}
inline void CMessageCertifyQueryRequest::set_version(::google::protobuf::uint32 value) {
  _set_bit(9);
  version_ = value;
}

// optional uint32 taskVersion = 11;
inline bool CMessageCertifyQueryRequest::has_taskversion() const {
  return _has_bit(10);
}
inline void CMessageCertifyQueryRequest::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::taskversion() const {
  return taskversion_;
}
inline void CMessageCertifyQueryRequest::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(10);
  taskversion_ = value;
}

// optional uint32 templateVersion = 12;
inline bool CMessageCertifyQueryRequest::has_templateversion() const {
  return _has_bit(11);
}
inline void CMessageCertifyQueryRequest::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::templateversion() const {
  return templateversion_;
}
inline void CMessageCertifyQueryRequest::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(11);
  templateversion_ = value;
}

// optional uint32 matrixType = 13;
inline bool CMessageCertifyQueryRequest::has_matrixtype() const {
  return _has_bit(12);
}
inline void CMessageCertifyQueryRequest::clear_matrixtype() {
  matrixtype_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryRequest::matrixtype() const {
  return matrixtype_;
}
inline void CMessageCertifyQueryRequest::set_matrixtype(::google::protobuf::uint32 value) {
  _set_bit(12);
  matrixtype_ = value;
}

// optional string matrixCode = 14;
inline bool CMessageCertifyQueryRequest::has_matrixcode() const {
  return _has_bit(13);
}
inline void CMessageCertifyQueryRequest::clear_matrixcode() {
  if (matrixcode_ != &_default_matrixcode_) {
    matrixcode_->clear();
  }
  _clear_bit(13);
}
inline const ::std::string& CMessageCertifyQueryRequest::matrixcode() const {
  return *matrixcode_;
}
inline void CMessageCertifyQueryRequest::set_matrixcode(const ::std::string& value) {
  _set_bit(13);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_matrixcode(const char* value) {
  _set_bit(13);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_matrixcode(const char* value, size_t size) {
  _set_bit(13);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_matrixcode() {
  _set_bit(13);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  return matrixcode_;
}

// optional string matrixCoord = 15;
inline bool CMessageCertifyQueryRequest::has_matrixcoord() const {
  return _has_bit(14);
}
inline void CMessageCertifyQueryRequest::clear_matrixcoord() {
  if (matrixcoord_ != &_default_matrixcoord_) {
    matrixcoord_->clear();
  }
  _clear_bit(14);
}
inline const ::std::string& CMessageCertifyQueryRequest::matrixcoord() const {
  return *matrixcoord_;
}
inline void CMessageCertifyQueryRequest::set_matrixcoord(const ::std::string& value) {
  _set_bit(14);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_matrixcoord(const char* value) {
  _set_bit(14);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyQueryRequest::set_matrixcoord(const char* value, size_t size) {
  _set_bit(14);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyQueryRequest::mutable_matrixcoord() {
  _set_bit(14);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  return matrixcoord_;
}

// -------------------------------------------------------------------

// CMessageCertifyQueryResponse

// optional .CMessageCertifyQueryResponse.EStatus status = 1;
inline bool CMessageCertifyQueryResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageCertifyQueryResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageCertifyQueryResponse_EStatus CMessageCertifyQueryResponse::status() const {
  return static_cast< ::CMessageCertifyQueryResponse_EStatus >(status_);
}
inline void CMessageCertifyQueryResponse::set_status(::CMessageCertifyQueryResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageCertifyQueryResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageCertifyQueryResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageCertifyQueryResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryResponse::playerid() const {
  return playerid_;
}
inline void CMessageCertifyQueryResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 accountId = 3;
inline bool CMessageCertifyQueryResponse::has_accountid() const {
  return _has_bit(2);
}
inline void CMessageCertifyQueryResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryResponse::accountid() const {
  return accountid_;
}
inline void CMessageCertifyQueryResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 errorCode = 4;
inline bool CMessageCertifyQueryResponse::has_errorcode() const {
  return _has_bit(3);
}
inline void CMessageCertifyQueryResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCertifyQueryResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageCertifyQueryResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(3);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCertifyTokenRequest

// optional uint32 playerId = 1;
inline bool CMessageCertifyTokenRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageCertifyTokenRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenRequest::playerid() const {
  return playerid_;
}
inline void CMessageCertifyTokenRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 accountId = 2;
inline bool CMessageCertifyTokenRequest::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageCertifyTokenRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenRequest::accountid() const {
  return accountid_;
}
inline void CMessageCertifyTokenRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 token = 3;
inline bool CMessageCertifyTokenRequest::has_token() const {
  return _has_bit(2);
}
inline void CMessageCertifyTokenRequest::clear_token() {
  token_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenRequest::token() const {
  return token_;
}
inline void CMessageCertifyTokenRequest::set_token(::google::protobuf::uint32 value) {
  _set_bit(2);
  token_ = value;
}

// optional uint32 handle = 4;
inline bool CMessageCertifyTokenRequest::has_handle() const {
  return _has_bit(3);
}
inline void CMessageCertifyTokenRequest::clear_handle() {
  handle_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenRequest::handle() const {
  return handle_;
}
inline void CMessageCertifyTokenRequest::set_handle(::google::protobuf::uint32 value) {
  _set_bit(3);
  handle_ = value;
}

// -------------------------------------------------------------------

// CMessageCertifyTokenResponse

// optional .CMessageCertifyTokenResponse.EStatus status = 1;
inline bool CMessageCertifyTokenResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageCertifyTokenResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageCertifyTokenResponse_EStatus CMessageCertifyTokenResponse::status() const {
  return static_cast< ::CMessageCertifyTokenResponse_EStatus >(status_);
}
inline void CMessageCertifyTokenResponse::set_status(::CMessageCertifyTokenResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageCertifyTokenResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageCertifyTokenResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageCertifyTokenResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::playerid() const {
  return playerid_;
}
inline void CMessageCertifyTokenResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 accountId = 3;
inline bool CMessageCertifyTokenResponse::has_accountid() const {
  return _has_bit(2);
}
inline void CMessageCertifyTokenResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::accountid() const {
  return accountid_;
}
inline void CMessageCertifyTokenResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 handle = 4;
inline bool CMessageCertifyTokenResponse::has_handle() const {
  return _has_bit(3);
}
inline void CMessageCertifyTokenResponse::clear_handle() {
  handle_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::handle() const {
  return handle_;
}
inline void CMessageCertifyTokenResponse::set_handle(::google::protobuf::uint32 value) {
  _set_bit(3);
  handle_ = value;
}

// optional string passport = 5;
inline bool CMessageCertifyTokenResponse::has_passport() const {
  return _has_bit(4);
}
inline void CMessageCertifyTokenResponse::clear_passport() {
  if (passport_ != &_default_passport_) {
    passport_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCertifyTokenResponse::passport() const {
  return *passport_;
}
inline void CMessageCertifyTokenResponse::set_passport(const ::std::string& value) {
  _set_bit(4);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_passport(const char* value) {
  _set_bit(4);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_passport(const char* value, size_t size) {
  _set_bit(4);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  passport_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_passport() {
  _set_bit(4);
  if (passport_ == &_default_passport_) {
    passport_ = new ::std::string;
  }
  return passport_;
}

// optional string password = 6;
inline bool CMessageCertifyTokenResponse::has_password() const {
  return _has_bit(5);
}
inline void CMessageCertifyTokenResponse::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageCertifyTokenResponse::password() const {
  return *password_;
}
inline void CMessageCertifyTokenResponse::set_password(const ::std::string& value) {
  _set_bit(5);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_password(const char* value) {
  _set_bit(5);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_password(const char* value, size_t size) {
  _set_bit(5);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_password() {
  _set_bit(5);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional uint32 playerHost = 7;
inline bool CMessageCertifyTokenResponse::has_playerhost() const {
  return _has_bit(6);
}
inline void CMessageCertifyTokenResponse::clear_playerhost() {
  playerhost_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::playerhost() const {
  return playerhost_;
}
inline void CMessageCertifyTokenResponse::set_playerhost(::google::protobuf::uint32 value) {
  _set_bit(6);
  playerhost_ = value;
}

// optional uint32 playerPort = 8;
inline bool CMessageCertifyTokenResponse::has_playerport() const {
  return _has_bit(7);
}
inline void CMessageCertifyTokenResponse::clear_playerport() {
  playerport_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::playerport() const {
  return playerport_;
}
inline void CMessageCertifyTokenResponse::set_playerport(::google::protobuf::uint32 value) {
  _set_bit(7);
  playerport_ = value;
}

// optional string playerMac = 9;
inline bool CMessageCertifyTokenResponse::has_playermac() const {
  return _has_bit(8);
}
inline void CMessageCertifyTokenResponse::clear_playermac() {
  if (playermac_ != &_default_playermac_) {
    playermac_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CMessageCertifyTokenResponse::playermac() const {
  return *playermac_;
}
inline void CMessageCertifyTokenResponse::set_playermac(const ::std::string& value) {
  _set_bit(8);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_playermac(const char* value) {
  _set_bit(8);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_playermac(const char* value, size_t size) {
  _set_bit(8);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  playermac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_playermac() {
  _set_bit(8);
  if (playermac_ == &_default_playermac_) {
    playermac_ = new ::std::string;
  }
  return playermac_;
}

// optional string md5Code = 10;
inline bool CMessageCertifyTokenResponse::has_md5code() const {
  return _has_bit(9);
}
inline void CMessageCertifyTokenResponse::clear_md5code() {
  if (md5code_ != &_default_md5code_) {
    md5code_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CMessageCertifyTokenResponse::md5code() const {
  return *md5code_;
}
inline void CMessageCertifyTokenResponse::set_md5code(const ::std::string& value) {
  _set_bit(9);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_md5code(const char* value) {
  _set_bit(9);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_md5code(const char* value, size_t size) {
  _set_bit(9);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  md5code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_md5code() {
  _set_bit(9);
  if (md5code_ == &_default_md5code_) {
    md5code_ = new ::std::string;
  }
  return md5code_;
}

// optional int32 sourceId = 11;
inline bool CMessageCertifyTokenResponse::has_sourceid() const {
  return _has_bit(10);
}
inline void CMessageCertifyTokenResponse::clear_sourceid() {
  sourceid_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 CMessageCertifyTokenResponse::sourceid() const {
  return sourceid_;
}
inline void CMessageCertifyTokenResponse::set_sourceid(::google::protobuf::int32 value) {
  _set_bit(10);
  sourceid_ = value;
}

// optional uint32 version = 12;
inline bool CMessageCertifyTokenResponse::has_version() const {
  return _has_bit(11);
}
inline void CMessageCertifyTokenResponse::clear_version() {
  version_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::version() const {
  return version_;
}
inline void CMessageCertifyTokenResponse::set_version(::google::protobuf::uint32 value) {
  _set_bit(11);
  version_ = value;
}

// optional uint32 taskVersion = 13;
inline bool CMessageCertifyTokenResponse::has_taskversion() const {
  return _has_bit(12);
}
inline void CMessageCertifyTokenResponse::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::taskversion() const {
  return taskversion_;
}
inline void CMessageCertifyTokenResponse::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(12);
  taskversion_ = value;
}

// optional uint32 templateVersion = 14;
inline bool CMessageCertifyTokenResponse::has_templateversion() const {
  return _has_bit(13);
}
inline void CMessageCertifyTokenResponse::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::templateversion() const {
  return templateversion_;
}
inline void CMessageCertifyTokenResponse::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(13);
  templateversion_ = value;
}

// optional uint32 matrixType = 15;
inline bool CMessageCertifyTokenResponse::has_matrixtype() const {
  return _has_bit(14);
}
inline void CMessageCertifyTokenResponse::clear_matrixtype() {
  matrixtype_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMessageCertifyTokenResponse::matrixtype() const {
  return matrixtype_;
}
inline void CMessageCertifyTokenResponse::set_matrixtype(::google::protobuf::uint32 value) {
  _set_bit(14);
  matrixtype_ = value;
}

// optional string matrixCode = 16;
inline bool CMessageCertifyTokenResponse::has_matrixcode() const {
  return _has_bit(15);
}
inline void CMessageCertifyTokenResponse::clear_matrixcode() {
  if (matrixcode_ != &_default_matrixcode_) {
    matrixcode_->clear();
  }
  _clear_bit(15);
}
inline const ::std::string& CMessageCertifyTokenResponse::matrixcode() const {
  return *matrixcode_;
}
inline void CMessageCertifyTokenResponse::set_matrixcode(const ::std::string& value) {
  _set_bit(15);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_matrixcode(const char* value) {
  _set_bit(15);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_matrixcode(const char* value, size_t size) {
  _set_bit(15);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  matrixcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_matrixcode() {
  _set_bit(15);
  if (matrixcode_ == &_default_matrixcode_) {
    matrixcode_ = new ::std::string;
  }
  return matrixcode_;
}

// optional string matrixCoord = 17;
inline bool CMessageCertifyTokenResponse::has_matrixcoord() const {
  return _has_bit(16);
}
inline void CMessageCertifyTokenResponse::clear_matrixcoord() {
  if (matrixcoord_ != &_default_matrixcoord_) {
    matrixcoord_->clear();
  }
  _clear_bit(16);
}
inline const ::std::string& CMessageCertifyTokenResponse::matrixcoord() const {
  return *matrixcoord_;
}
inline void CMessageCertifyTokenResponse::set_matrixcoord(const ::std::string& value) {
  _set_bit(16);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_matrixcoord(const char* value) {
  _set_bit(16);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(value);
}
inline void CMessageCertifyTokenResponse::set_matrixcoord(const char* value, size_t size) {
  _set_bit(16);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  matrixcoord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCertifyTokenResponse::mutable_matrixcoord() {
  _set_bit(16);
  if (matrixcoord_ == &_default_matrixcoord_) {
    matrixcoord_ = new ::std::string;
  }
  return matrixcoord_;
}

// -------------------------------------------------------------------

// CMessageRoleQueryRequest

// optional uint32 playerId = 1;
inline bool CMessageRoleQueryRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageRoleQueryRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRoleQueryRequest::playerid() const {
  return playerid_;
}
inline void CMessageRoleQueryRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 accountId = 2;
inline bool CMessageRoleQueryRequest::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageRoleQueryRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRoleQueryRequest::accountid() const {
  return accountid_;
}
inline void CMessageRoleQueryRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessageRoleQueryResponse

// optional .CMessageRoleQueryResponse.EStatus status = 1;
inline bool CMessageRoleQueryResponse::has_status() const {
  return _has_bit(0);
}
inline void CMessageRoleQueryResponse::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageRoleQueryResponse_EStatus CMessageRoleQueryResponse::status() const {
  return static_cast< ::CMessageRoleQueryResponse_EStatus >(status_);
}
inline void CMessageRoleQueryResponse::set_status(::CMessageRoleQueryResponse_EStatus value) {
  GOOGLE_DCHECK(::CMessageRoleQueryResponse_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageRoleQueryResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageRoleQueryResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRoleQueryResponse::playerid() const {
  return playerid_;
}
inline void CMessageRoleQueryResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 accountId = 3;
inline bool CMessageRoleQueryResponse::has_accountid() const {
  return _has_bit(2);
}
inline void CMessageRoleQueryResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRoleQueryResponse::accountid() const {
  return accountid_;
}
inline void CMessageRoleQueryResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 roleCount = 4;
inline bool CMessageRoleQueryResponse::has_rolecount() const {
  return _has_bit(3);
}
inline void CMessageRoleQueryResponse::clear_rolecount() {
  rolecount_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRoleQueryResponse::rolecount() const {
  return rolecount_;
}
inline void CMessageRoleQueryResponse::set_rolecount(::google::protobuf::uint32 value) {
  _set_bit(3);
  rolecount_ = value;
}

// -------------------------------------------------------------------

// CMessageRoleQueryNotify

// optional .CMessageRoleQueryNotify.EStatus status = 1;
inline bool CMessageRoleQueryNotify::has_status() const {
  return _has_bit(0);
}
inline void CMessageRoleQueryNotify::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::CMessageRoleQueryNotify_EStatus CMessageRoleQueryNotify::status() const {
  return static_cast< ::CMessageRoleQueryNotify_EStatus >(status_);
}
inline void CMessageRoleQueryNotify::set_status(::CMessageRoleQueryNotify_EStatus value) {
  GOOGLE_DCHECK(::CMessageRoleQueryNotify_EStatus_IsValid(value));
  _set_bit(0);
  status_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageRoleQueryNotify::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageRoleQueryNotify::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRoleQueryNotify::playerid() const {
  return playerid_;
}
inline void CMessageRoleQueryNotify::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 accountId = 3;
inline bool CMessageRoleQueryNotify::has_accountid() const {
  return _has_bit(2);
}
inline void CMessageRoleQueryNotify::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRoleQueryNotify::accountid() const {
  return accountid_;
}
inline void CMessageRoleQueryNotify::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 loginId = 4;
inline bool CMessageRoleQueryNotify::has_loginid() const {
  return _has_bit(3);
}
inline void CMessageRoleQueryNotify::clear_loginid() {
  loginid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRoleQueryNotify::loginid() const {
  return loginid_;
}
inline void CMessageRoleQueryNotify::set_loginid(::google::protobuf::uint32 value) {
  _set_bit(3);
  loginid_ = value;
}

// optional uint32 roleCount = 5;
inline bool CMessageRoleQueryNotify::has_rolecount() const {
  return _has_bit(4);
}
inline void CMessageRoleQueryNotify::clear_rolecount() {
  rolecount_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRoleQueryNotify::rolecount() const {
  return rolecount_;
}
inline void CMessageRoleQueryNotify::set_rolecount(::google::protobuf::uint32 value) {
  _set_bit(4);
  rolecount_ = value;
}

// -------------------------------------------------------------------

// CMessageOnlineStatusNotify

// optional uint32 serverId = 1;
inline bool CMessageOnlineStatusNotify::has_serverid() const {
  return _has_bit(0);
}
inline void CMessageOnlineStatusNotify::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOnlineStatusNotify::serverid() const {
  return serverid_;
}
inline void CMessageOnlineStatusNotify::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(0);
  serverid_ = value;
}

// optional uint32 total = 2;
inline bool CMessageOnlineStatusNotify::has_total() const {
  return _has_bit(1);
}
inline void CMessageOnlineStatusNotify::clear_total() {
  total_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageOnlineStatusNotify::total() const {
  return total_;
}
inline void CMessageOnlineStatusNotify::set_total(::google::protobuf::uint32 value) {
  _set_bit(1);
  total_ = value;
}

// optional uint32 current = 3;
inline bool CMessageOnlineStatusNotify::has_current() const {
  return _has_bit(2);
}
inline void CMessageOnlineStatusNotify::clear_current() {
  current_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageOnlineStatusNotify::current() const {
  return current_;
}
inline void CMessageOnlineStatusNotify::set_current(::google::protobuf::uint32 value) {
  _set_bit(2);
  current_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteCampRequest

// optional uint32 playerId = 1;
inline bool CMessageInviteCampRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageInviteCampRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageInviteCampRequest::playerid() const {
  return playerid_;
}
inline void CMessageInviteCampRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 currentCampId = 2;
inline bool CMessageInviteCampRequest::has_currentcampid() const {
  return _has_bit(1);
}
inline void CMessageInviteCampRequest::clear_currentcampid() {
  currentcampid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteCampRequest::currentcampid() const {
  return currentcampid_;
}
inline void CMessageInviteCampRequest::set_currentcampid(::google::protobuf::uint32 value) {
  _set_bit(1);
  currentcampid_ = value;
}

// optional uint32 npcId = 3;
inline bool CMessageInviteCampRequest::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageInviteCampRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteCampRequest::npcid() const {
  return npcid_;
}
inline void CMessageInviteCampRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CampLevel

// optional uint32 camp_id = 1;
inline bool CampLevel::has_camp_id() const {
  return _has_bit(0);
}
inline void CampLevel::clear_camp_id() {
  camp_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CampLevel::camp_id() const {
  return camp_id_;
}
inline void CampLevel::set_camp_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  camp_id_ = value;
}

// optional uint32 weak_level = 2;
inline bool CampLevel::has_weak_level() const {
  return _has_bit(1);
}
inline void CampLevel::clear_weak_level() {
  weak_level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CampLevel::weak_level() const {
  return weak_level_;
}
inline void CampLevel::set_weak_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  weak_level_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteCampResponse

// repeated .CampLevel camp_list = 1;
inline int CMessageInviteCampResponse::camp_list_size() const {
  return camp_list_.size();
}
inline void CMessageInviteCampResponse::clear_camp_list() {
  camp_list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CampLevel >&
CMessageInviteCampResponse::camp_list() const {
  return camp_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::CampLevel >*
CMessageInviteCampResponse::mutable_camp_list() {
  return &camp_list_;
}
inline const ::CampLevel& CMessageInviteCampResponse::camp_list(int index) const {
  return camp_list_.Get(index);
}
inline ::CampLevel* CMessageInviteCampResponse::mutable_camp_list(int index) {
  return camp_list_.Mutable(index);
}
inline ::CampLevel* CMessageInviteCampResponse::add_camp_list() {
  return camp_list_.Add();
}

// optional uint32 errorcode = 2;
inline bool CMessageInviteCampResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageInviteCampResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteCampResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageInviteCampResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeSingleCampRequest

// optional uint32 playerId = 1;
inline bool CMessageChangeSingleCampRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageChangeSingleCampRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampRequest::playerid() const {
  return playerid_;
}
inline void CMessageChangeSingleCampRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 crrentCampId = 2;
inline bool CMessageChangeSingleCampRequest::has_crrentcampid() const {
  return _has_bit(1);
}
inline void CMessageChangeSingleCampRequest::clear_crrentcampid() {
  crrentcampid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampRequest::crrentcampid() const {
  return crrentcampid_;
}
inline void CMessageChangeSingleCampRequest::set_crrentcampid(::google::protobuf::uint32 value) {
  _set_bit(1);
  crrentcampid_ = value;
}

// optional uint32 targetCampId = 3;
inline bool CMessageChangeSingleCampRequest::has_targetcampid() const {
  return _has_bit(2);
}
inline void CMessageChangeSingleCampRequest::clear_targetcampid() {
  targetcampid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampRequest::targetcampid() const {
  return targetcampid_;
}
inline void CMessageChangeSingleCampRequest::set_targetcampid(::google::protobuf::uint32 value) {
  _set_bit(2);
  targetcampid_ = value;
}

// optional uint32 npcId = 4;
inline bool CMessageChangeSingleCampRequest::has_npcid() const {
  return _has_bit(3);
}
inline void CMessageChangeSingleCampRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampRequest::npcid() const {
  return npcid_;
}
inline void CMessageChangeSingleCampRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeSingleCampResponse

// optional uint32 campId = 1;
inline bool CMessageChangeSingleCampResponse::has_campid() const {
  return _has_bit(0);
}
inline void CMessageChangeSingleCampResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampResponse::campid() const {
  return campid_;
}
inline void CMessageChangeSingleCampResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(0);
  campid_ = value;
}

// optional uint32 errorcode = 2;
inline bool CMessageChangeSingleCampResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageChangeSingleCampResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageChangeSingleCampResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// optional uint32 playerId = 3;
inline bool CMessageChangeSingleCampResponse::has_playerid() const {
  return _has_bit(2);
}
inline void CMessageChangeSingleCampResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeSingleCampResponse::playerid() const {
  return playerid_;
}
inline void CMessageChangeSingleCampResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(2);
  playerid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCampSuccesNotify

// optional string playerName = 1;
inline bool CMessageChangeCampSuccesNotify::has_playername() const {
  return _has_bit(0);
}
inline void CMessageChangeCampSuccesNotify::clear_playername() {
  if (playername_ != &_default_playername_) {
    playername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageChangeCampSuccesNotify::playername() const {
  return *playername_;
}
inline void CMessageChangeCampSuccesNotify::set_playername(const ::std::string& value) {
  _set_bit(0);
  if (playername_ == &_default_playername_) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void CMessageChangeCampSuccesNotify::set_playername(const char* value) {
  _set_bit(0);
  if (playername_ == &_default_playername_) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void CMessageChangeCampSuccesNotify::set_playername(const char* value, size_t size) {
  _set_bit(0);
  if (playername_ == &_default_playername_) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCampSuccesNotify::mutable_playername() {
  _set_bit(0);
  if (playername_ == &_default_playername_) {
    playername_ = new ::std::string;
  }
  return playername_;
}

// optional uint32 campId = 2;
inline bool CMessageChangeCampSuccesNotify::has_campid() const {
  return _has_bit(1);
}
inline void CMessageChangeCampSuccesNotify::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCampSuccesNotify::campid() const {
  return campid_;
}
inline void CMessageChangeCampSuccesNotify::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 srcCampId = 3;
inline bool CMessageChangeCampSuccesNotify::has_srccampid() const {
  return _has_bit(2);
}
inline void CMessageChangeCampSuccesNotify::clear_srccampid() {
  srccampid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCampSuccesNotify::srccampid() const {
  return srccampid_;
}
inline void CMessageChangeCampSuccesNotify::set_srccampid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccampid_ = value;
}

// optional uint32 playerId = 4;
inline bool CMessageChangeCampSuccesNotify::has_playerid() const {
  return _has_bit(3);
}
inline void CMessageChangeCampSuccesNotify::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCampSuccesNotify::playerid() const {
  return playerid_;
}
inline void CMessageChangeCampSuccesNotify::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(3);
  playerid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCamp2GateNotice

// optional uint32 playerId = 1;
inline bool CMessageChangeCamp2GateNotice::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageChangeCamp2GateNotice::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCamp2GateNotice::playerid() const {
  return playerid_;
}
inline void CMessageChangeCamp2GateNotice::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 campId = 2;
inline bool CMessageChangeCamp2GateNotice::has_campid() const {
  return _has_bit(1);
}
inline void CMessageChangeCamp2GateNotice::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCamp2GateNotice::campid() const {
  return campid_;
}
inline void CMessageChangeCamp2GateNotice::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCampConditionRequest

// optional uint32 playerId = 1;
inline bool CMessageChangeCampConditionRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageChangeCampConditionRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionRequest::playerid() const {
  return playerid_;
}
inline void CMessageChangeCampConditionRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 npcId = 2;
inline bool CMessageChangeCampConditionRequest::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageChangeCampConditionRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionRequest::npcid() const {
  return npcid_;
}
inline void CMessageChangeCampConditionRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCampConditionResponse

// optional uint32 isHaveTeam = 1;
inline bool CMessageChangeCampConditionResponse::has_ishaveteam() const {
  return _has_bit(0);
}
inline void CMessageChangeCampConditionResponse::clear_ishaveteam() {
  ishaveteam_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishaveteam() const {
  return ishaveteam_;
}
inline void CMessageChangeCampConditionResponse::set_ishaveteam(::google::protobuf::uint32 value) {
  _set_bit(0);
  ishaveteam_ = value;
}

// optional uint32 isHaveFamily = 2;
inline bool CMessageChangeCampConditionResponse::has_ishavefamily() const {
  return _has_bit(1);
}
inline void CMessageChangeCampConditionResponse::clear_ishavefamily() {
  ishavefamily_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavefamily() const {
  return ishavefamily_;
}
inline void CMessageChangeCampConditionResponse::set_ishavefamily(::google::protobuf::uint32 value) {
  _set_bit(1);
  ishavefamily_ = value;
}

// optional uint32 isHaveCountry = 3;
inline bool CMessageChangeCampConditionResponse::has_ishavecountry() const {
  return _has_bit(2);
}
inline void CMessageChangeCampConditionResponse::clear_ishavecountry() {
  ishavecountry_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavecountry() const {
  return ishavecountry_;
}
inline void CMessageChangeCampConditionResponse::set_ishavecountry(::google::protobuf::uint32 value) {
  _set_bit(2);
  ishavecountry_ = value;
}

// optional uint32 isHaveMaster = 4;
inline bool CMessageChangeCampConditionResponse::has_ishavemaster() const {
  return _has_bit(3);
}
inline void CMessageChangeCampConditionResponse::clear_ishavemaster() {
  ishavemaster_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavemaster() const {
  return ishavemaster_;
}
inline void CMessageChangeCampConditionResponse::set_ishavemaster(::google::protobuf::uint32 value) {
  _set_bit(3);
  ishavemaster_ = value;
}

// optional uint32 isHaveMarriage = 5;
inline bool CMessageChangeCampConditionResponse::has_ishavemarriage() const {
  return _has_bit(4);
}
inline void CMessageChangeCampConditionResponse::clear_ishavemarriage() {
  ishavemarriage_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavemarriage() const {
  return ishavemarriage_;
}
inline void CMessageChangeCampConditionResponse::set_ishavemarriage(::google::protobuf::uint32 value) {
  _set_bit(4);
  ishavemarriage_ = value;
}

// optional uint32 isHavePayMail = 6;
inline bool CMessageChangeCampConditionResponse::has_ishavepaymail() const {
  return _has_bit(5);
}
inline void CMessageChangeCampConditionResponse::clear_ishavepaymail() {
  ishavepaymail_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavepaymail() const {
  return ishavepaymail_;
}
inline void CMessageChangeCampConditionResponse::set_ishavepaymail(::google::protobuf::uint32 value) {
  _set_bit(5);
  ishavepaymail_ = value;
}

// optional uint32 ishaveEnoughLevel = 7;
inline bool CMessageChangeCampConditionResponse::has_ishaveenoughlevel() const {
  return _has_bit(6);
}
inline void CMessageChangeCampConditionResponse::clear_ishaveenoughlevel() {
  ishaveenoughlevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishaveenoughlevel() const {
  return ishaveenoughlevel_;
}
inline void CMessageChangeCampConditionResponse::set_ishaveenoughlevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  ishaveenoughlevel_ = value;
}

// optional uint32 errorcode = 8;
inline bool CMessageChangeCampConditionResponse::has_errorcode() const {
  return _has_bit(7);
}
inline void CMessageChangeCampConditionResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageChangeCampConditionResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(7);
  errorcode_ = value;
}

// optional uint32 isHaveSworn = 9;
inline bool CMessageChangeCampConditionResponse::has_ishavesworn() const {
  return _has_bit(8);
}
inline void CMessageChangeCampConditionResponse::clear_ishavesworn() {
  ishavesworn_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageChangeCampConditionResponse::ishavesworn() const {
  return ishavesworn_;
}
inline void CMessageChangeCampConditionResponse::set_ishavesworn(::google::protobuf::uint32 value) {
  _set_bit(8);
  ishavesworn_ = value;
}

#endif  // PROTOBUF_coremessage_5fpb_2ehxx__INCLUDED
