// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_property_5fpb_2ehxx__INCLUDED
#define PROTOBUF_property_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_property_5fpb_2ehxx();
void protobuf_AssignDesc_property_5fpb_2ehxx();
void protobuf_ShutdownFile_property_5fpb_2ehxx();

class PBPropertyValue1;
class PBSkillBox;
class PBItemObject;
class PBItemContent;
class PBItemObjEquip;
class PBItemObjMW;
class PBItemBox;
class PBTransform;
class PBBuffObject;
class PBBuffList;
class PBStateParam;
class PBStateList;
class PBSkillObject;
class PBSkillList;
class PBShortcut;
class PBShortcutList;
class PBKillData;
class PBWizard;
class PBTelePostion;
class PBPlayerBasicInfo;
class PBMonsterRecordInfo;
class PBPlayerMWInfo;
class PBSingleCDGroup;
class PBPlayerCDGroupInfo;
class PBTelePosInfo;
class PBPlayerPVPInfo;
class PBPlayerStatisticInfo;
class PBPlayerTalentInfo;
class PBPlayerTitleInfo;
class PBActivityStateInf;
class PBPlayerActivityInfo;
class PBPlayerClientInfo;
class PBSpiritTypeInfo;
class PBSpiritPositionInfo;
class PBSpiritInfo;
class PBProperty;
class PBTask;
class PBLoopTaskData;
class PBStorageTaskData;
class TragedyStruct;
class PBTaskGroupData;
class SingleChairManTask;
class SingleCompletedInf;
class PBChairManTaskData;
class PBRefreshTaskData;
class GroupPublishData;
class PBTaskList;
class PBMapData;
class PBFriendGlobalData;
class PBFriendData;
class PBEnemyData;
class PBFriend;
class PBRepetionData;
class PBRepetionMap;
class PBRepetionRepe;
class PBRepetion;
class PBMember;
class PBTeamMsg;
class PBStallInfo;
class PBLifeSkill;
class PBLifeSkillBox;
class PBExpTimeInfo;
class PBSinglePublishInfo;
class PBTaskPublishInfo;
class CMessagePlayerInfo;
class PBAwardRecord;
class PBMatrixInfo;
class PBCharm;
class PBGuideData;
class PBSingleTimes;
class PBTimes;
class PBTreasureBowlItem;
class PBTreasureBowl;
class PBRepetDataToClient;
class PBRepetDataList;
class PBSwornMember;
class PBSwornTeam;

// ===================================================================

class PBPropertyValue1 : public ::google::protobuf::Message {
 public:
  PBPropertyValue1();
  virtual ~PBPropertyValue1();
  
  PBPropertyValue1(const PBPropertyValue1& from);
  
  inline PBPropertyValue1& operator=(const PBPropertyValue1& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPropertyValue1& default_instance();
  void Swap(PBPropertyValue1* other);
  
  // implements Message ----------------------------------------------
  
  PBPropertyValue1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPropertyValue1& from);
  void MergeFrom(const PBPropertyValue1& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 InitValue = 1;
  inline bool has_initvalue() const;
  inline void clear_initvalue();
  static const int kInitValueFieldNumber = 1;
  inline ::google::protobuf::uint32 initvalue() const;
  inline void set_initvalue(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaValue = 2;
  inline bool has_deltavalue() const;
  inline void clear_deltavalue();
  static const int kDeltaValueFieldNumber = 2;
  inline ::google::protobuf::uint32 deltavalue() const;
  inline void set_deltavalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 initvalue_;
  ::google::protobuf::uint32 deltavalue_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPropertyValue1* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillBox : public ::google::protobuf::Message {
 public:
  PBSkillBox();
  virtual ~PBSkillBox();
  
  PBSkillBox(const PBSkillBox& from);
  
  inline PBSkillBox& operator=(const PBSkillBox& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillBox& default_instance();
  void Swap(PBSkillBox* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillBox& from);
  void MergeFrom(const PBSkillBox& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Skills = 1;
  inline bool has_skills() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline ::google::protobuf::uint32 skills() const;
  inline void set_skills(::google::protobuf::uint32 value);
  
  // optional uint32 SkillActNum = 2;
  inline bool has_skillactnum() const;
  inline void clear_skillactnum();
  static const int kSkillActNumFieldNumber = 2;
  inline ::google::protobuf::uint32 skillactnum() const;
  inline void set_skillactnum(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBookID = 3;
  inline bool has_skillbookid() const;
  inline void clear_skillbookid();
  static const int kSkillBookIDFieldNumber = 3;
  inline ::google::protobuf::uint32 skillbookid() const;
  inline void set_skillbookid(::google::protobuf::uint32 value);
  
  // optional uint32 AddedSkillPoints = 4;
  inline bool has_addedskillpoints() const;
  inline void clear_addedskillpoints();
  static const int kAddedSkillPointsFieldNumber = 4;
  inline ::google::protobuf::uint32 addedskillpoints() const;
  inline void set_addedskillpoints(::google::protobuf::uint32 value);
  
  // optional uint32 SkillInitLevel = 5;
  inline bool has_skillinitlevel() const;
  inline void clear_skillinitlevel();
  static const int kSkillInitLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 skillinitlevel() const;
  inline void set_skillinitlevel(::google::protobuf::uint32 value);
  
  // optional uint32 ActiveState = 6;
  inline bool has_activestate() const;
  inline void clear_activestate();
  static const int kActiveStateFieldNumber = 6;
  inline ::google::protobuf::uint32 activestate() const;
  inline void set_activestate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skills_;
  ::google::protobuf::uint32 skillactnum_;
  ::google::protobuf::uint32 skillbookid_;
  ::google::protobuf::uint32 addedskillpoints_;
  ::google::protobuf::uint32 skillinitlevel_;
  ::google::protobuf::uint32 activestate_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillBox* default_instance_;
};
// -------------------------------------------------------------------

class PBItemObject : public ::google::protobuf::Message {
 public:
  PBItemObject();
  virtual ~PBItemObject();
  
  PBItemObject(const PBItemObject& from);
  
  inline PBItemObject& operator=(const PBItemObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemObject& default_instance();
  void Swap(PBItemObject* other);
  
  // implements Message ----------------------------------------------
  
  PBItemObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemObject& from);
  void MergeFrom(const PBItemObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 Index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 InvalidTime = 4;
  inline bool has_invalidtime() const;
  inline void clear_invalidtime();
  static const int kInvalidTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 invalidtime() const;
  inline void set_invalidtime(::google::protobuf::uint32 value);
  
  // optional uint32 Cooldown = 5;
  inline bool has_cooldown() const;
  inline void clear_cooldown();
  static const int kCooldownFieldNumber = 5;
  inline ::google::protobuf::uint32 cooldown() const;
  inline void set_cooldown(::google::protobuf::uint32 value);
  
  // optional uint32 BindStatus = 6;
  inline bool has_bindstatus() const;
  inline void clear_bindstatus();
  static const int kBindStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 bindstatus() const;
  inline void set_bindstatus(::google::protobuf::uint32 value);
  
  // optional uint64 ObjGuID = 7;
  inline bool has_objguid() const;
  inline void clear_objguid();
  static const int kObjGuIDFieldNumber = 7;
  inline ::google::protobuf::uint64 objguid() const;
  inline void set_objguid(::google::protobuf::uint64 value);
  
  // optional uint32 UsedTimes = 8;
  inline bool has_usedtimes() const;
  inline void clear_usedtimes();
  static const int kUsedTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 usedtimes() const;
  inline void set_usedtimes(::google::protobuf::uint32 value);
  
  // optional .PBItemContent ItemContent = 9;
  inline bool has_itemcontent() const;
  inline void clear_itemcontent();
  static const int kItemContentFieldNumber = 9;
  inline const ::PBItemContent& itemcontent() const;
  inline ::PBItemContent* mutable_itemcontent();
  
  // optional uint64 PurchaseID = 10;
  inline bool has_purchaseid() const;
  inline void clear_purchaseid();
  static const int kPurchaseIDFieldNumber = 10;
  inline ::google::protobuf::uint64 purchaseid() const;
  inline void set_purchaseid(::google::protobuf::uint64 value);
  
  // optional string GroomName = 11;
  inline bool has_groomname() const;
  inline void clear_groomname();
  static const int kGroomNameFieldNumber = 11;
  inline const ::std::string& groomname() const;
  inline void set_groomname(const ::std::string& value);
  inline void set_groomname(const char* value);
  inline void set_groomname(const char* value, size_t size);
  inline ::std::string* mutable_groomname();
  
  // optional string BrideName = 12;
  inline bool has_bridename() const;
  inline void clear_bridename();
  static const int kBrideNameFieldNumber = 12;
  inline const ::std::string& bridename() const;
  inline void set_bridename(const ::std::string& value);
  inline void set_bridename(const char* value);
  inline void set_bridename(const char* value, size_t size);
  inline ::std::string* mutable_bridename();
  
  // optional uint32 WeddingTime = 13;
  inline bool has_weddingtime() const;
  inline void clear_weddingtime();
  static const int kWeddingTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 weddingtime() const;
  inline void set_weddingtime(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingTimeLength = 14;
  inline bool has_weddingtimelength() const;
  inline void clear_weddingtimelength();
  static const int kWeddingTimeLengthFieldNumber = 14;
  inline ::google::protobuf::uint32 weddingtimelength() const;
  inline void set_weddingtimelength(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 invalidtime_;
  ::google::protobuf::uint32 cooldown_;
  ::google::protobuf::uint32 bindstatus_;
  ::google::protobuf::uint64 objguid_;
  ::google::protobuf::uint32 usedtimes_;
  ::PBItemContent* itemcontent_;
  ::google::protobuf::uint64 purchaseid_;
  ::std::string* groomname_;
  static const ::std::string _default_groomname_;
  ::std::string* bridename_;
  static const ::std::string _default_bridename_;
  ::google::protobuf::uint32 weddingtime_;
  ::google::protobuf::uint32 weddingtimelength_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemObject* default_instance_;
};
// -------------------------------------------------------------------

class PBItemContent : public ::google::protobuf::Message {
 public:
  PBItemContent();
  virtual ~PBItemContent();
  
  PBItemContent(const PBItemContent& from);
  
  inline PBItemContent& operator=(const PBItemContent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemContent& default_instance();
  void Swap(PBItemContent* other);
  
  // implements Message ----------------------------------------------
  
  PBItemContent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemContent& from);
  void MergeFrom(const PBItemContent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RemainHP = 1;
  inline bool has_remainhp() const;
  inline void clear_remainhp();
  static const int kRemainHPFieldNumber = 1;
  inline ::google::protobuf::uint32 remainhp() const;
  inline void set_remainhp(::google::protobuf::uint32 value);
  
  // optional uint32 RemainMP = 2;
  inline bool has_remainmp() const;
  inline void clear_remainmp();
  static const int kRemainMPFieldNumber = 2;
  inline ::google::protobuf::uint32 remainmp() const;
  inline void set_remainmp(::google::protobuf::uint32 value);
  
  // optional uint32 RemainAP = 3;
  inline bool has_remainap() const;
  inline void clear_remainap();
  static const int kRemainAPFieldNumber = 3;
  inline ::google::protobuf::uint32 remainap() const;
  inline void set_remainap(::google::protobuf::uint32 value);
  
  // optional uint32 Current = 4;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 4;
  inline ::google::protobuf::uint32 current() const;
  inline void set_current(::google::protobuf::uint32 value);
  
  // repeated .PBTelePostion TelePos = 5;
  inline int telepos_size() const;
  inline void clear_telepos();
  static const int kTelePosFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTelePostion >& telepos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTelePostion >* mutable_telepos();
  inline const ::PBTelePostion& telepos(int index) const;
  inline ::PBTelePostion* mutable_telepos(int index);
  inline ::PBTelePostion* add_telepos();
  
  // optional .PBItemObjMW ItemMW = 6;
  inline bool has_itemmw() const;
  inline void clear_itemmw();
  static const int kItemMWFieldNumber = 6;
  inline const ::PBItemObjMW& itemmw() const;
  inline ::PBItemObjMW* mutable_itemmw();
  
  // optional .PBItemObjEquip ItemEquip = 7;
  inline bool has_itemequip() const;
  inline void clear_itemequip();
  static const int kItemEquipFieldNumber = 7;
  inline const ::PBItemObjEquip& itemequip() const;
  inline ::PBItemObjEquip* mutable_itemequip();
  
  // optional uint32 LeftOffLineTime = 8;
  inline bool has_leftofflinetime() const;
  inline void clear_leftofflinetime();
  static const int kLeftOffLineTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 leftofflinetime() const;
  inline void set_leftofflinetime(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 remainhp_;
  ::google::protobuf::uint32 remainmp_;
  ::google::protobuf::uint32 remainap_;
  ::google::protobuf::uint32 current_;
  ::google::protobuf::RepeatedPtrField< ::PBTelePostion > telepos_;
  ::PBItemObjMW* itemmw_;
  ::PBItemObjEquip* itemequip_;
  ::google::protobuf::uint32 leftofflinetime_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemContent* default_instance_;
};
// -------------------------------------------------------------------

class PBItemObjEquip : public ::google::protobuf::Message {
 public:
  PBItemObjEquip();
  virtual ~PBItemObjEquip();
  
  PBItemObjEquip(const PBItemObjEquip& from);
  
  inline PBItemObjEquip& operator=(const PBItemObjEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemObjEquip& default_instance();
  void Swap(PBItemObjEquip* other);
  
  // implements Message ----------------------------------------------
  
  PBItemObjEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemObjEquip& from);
  void MergeFrom(const PBItemObjEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 SlotProperty = 1;
  inline int slotproperty_size() const;
  inline void clear_slotproperty();
  static const int kSlotPropertyFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slotproperty() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slotproperty();
  inline ::google::protobuf::uint32 slotproperty(int index) const;
  inline void set_slotproperty(int index, ::google::protobuf::uint32 value);
  inline void add_slotproperty(::google::protobuf::uint32 value);
  
  // repeated uint32 Property = 2;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& property() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_property();
  inline ::google::protobuf::uint32 property(int index) const;
  inline void set_property(int index, ::google::protobuf::uint32 value);
  inline void add_property(::google::protobuf::uint32 value);
  
  // repeated uint32 SlotValue = 3;
  inline int slotvalue_size() const;
  inline void clear_slotvalue();
  static const int kSlotValueFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slotvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slotvalue();
  inline ::google::protobuf::uint32 slotvalue(int index) const;
  inline void set_slotvalue(int index, ::google::protobuf::uint32 value);
  inline void add_slotvalue(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 SlotNumber = 5;
  inline bool has_slotnumber() const;
  inline void clear_slotnumber();
  static const int kSlotNumberFieldNumber = 5;
  inline ::google::protobuf::uint32 slotnumber() const;
  inline void set_slotnumber(::google::protobuf::uint32 value);
  
  // optional uint32 NameLength = 6;
  inline bool has_namelength() const;
  inline void clear_namelength();
  static const int kNameLengthFieldNumber = 6;
  inline ::google::protobuf::uint32 namelength() const;
  inline void set_namelength(::google::protobuf::uint32 value);
  
  // optional string Name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 SlotSpell = 8;
  inline bool has_slotspell() const;
  inline void clear_slotspell();
  static const int kSlotSpellFieldNumber = 8;
  inline ::google::protobuf::uint32 slotspell() const;
  inline void set_slotspell(::google::protobuf::uint32 value);
  
  // optional uint32 Durability = 9;
  inline bool has_durability() const;
  inline void clear_durability();
  static const int kDurabilityFieldNumber = 9;
  inline ::google::protobuf::uint32 durability() const;
  inline void set_durability(::google::protobuf::uint32 value);
  
  // optional .PBPropertyValue1 MaxSlotNumber = 10;
  inline bool has_maxslotnumber() const;
  inline void clear_maxslotnumber();
  static const int kMaxSlotNumberFieldNumber = 10;
  inline const ::PBPropertyValue1& maxslotnumber() const;
  inline ::PBPropertyValue1* mutable_maxslotnumber();
  
  // repeated uint32 Judge = 11;
  inline int judge_size() const;
  inline void clear_judge();
  static const int kJudgeFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& judge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_judge();
  inline ::google::protobuf::uint32 judge(int index) const;
  inline void set_judge(int index, ::google::protobuf::uint32 value);
  inline void add_judge(::google::protobuf::uint32 value);
  
  // optional uint32 ResDef = 12;
  inline bool has_resdef() const;
  inline void clear_resdef();
  static const int kResDefFieldNumber = 12;
  inline ::google::protobuf::uint32 resdef() const;
  inline void set_resdef(::google::protobuf::uint32 value);
  
  // optional uint32 ResAtt = 13;
  inline bool has_resatt() const;
  inline void clear_resatt();
  static const int kResAttFieldNumber = 13;
  inline ::google::protobuf::uint32 resatt() const;
  inline void set_resatt(::google::protobuf::uint32 value);
  
  // optional uint32 DefLevel = 14;
  inline bool has_deflevel() const;
  inline void clear_deflevel();
  static const int kDefLevelFieldNumber = 14;
  inline ::google::protobuf::uint32 deflevel() const;
  inline void set_deflevel(::google::protobuf::uint32 value);
  
  // optional uint32 AttLevel = 15;
  inline bool has_attlevel() const;
  inline void clear_attlevel();
  static const int kAttLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 attlevel() const;
  inline void set_attlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MagicStoneID = 16;
  inline bool has_magicstoneid() const;
  inline void clear_magicstoneid();
  static const int kMagicStoneIDFieldNumber = 16;
  inline ::google::protobuf::uint32 magicstoneid() const;
  inline void set_magicstoneid(::google::protobuf::uint32 value);
  
  // optional uint32 MagicStoneNum = 17;
  inline bool has_magicstonenum() const;
  inline void clear_magicstonenum();
  static const int kMagicStoneNumFieldNumber = 17;
  inline ::google::protobuf::uint32 magicstonenum() const;
  inline void set_magicstonenum(::google::protobuf::uint32 value);
  
  // optional uint32 BindFreeTime = 18;
  inline bool has_bindfreetime() const;
  inline void clear_bindfreetime();
  static const int kBindFreeTimeFieldNumber = 18;
  inline ::google::protobuf::uint32 bindfreetime() const;
  inline void set_bindfreetime(::google::protobuf::uint32 value);
  
  // optional uint32 SpouseID = 19;
  inline bool has_spouseid() const;
  inline void clear_spouseid();
  static const int kSpouseIDFieldNumber = 19;
  inline ::google::protobuf::uint32 spouseid() const;
  inline void set_spouseid(::google::protobuf::uint32 value);
  
  // optional string SpouseName = 20;
  inline bool has_spousename() const;
  inline void clear_spousename();
  static const int kSpouseNameFieldNumber = 20;
  inline const ::std::string& spousename() const;
  inline void set_spousename(const ::std::string& value);
  inline void set_spousename(const char* value);
  inline void set_spousename(const char* value, size_t size);
  inline ::std::string* mutable_spousename();
  
  // optional uint32 ExtraType = 21;
  inline bool has_extratype() const;
  inline void clear_extratype();
  static const int kExtraTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 extratype() const;
  inline void set_extratype(::google::protobuf::uint32 value);
  
  // optional uint32 BindTime = 22;
  inline bool has_bindtime() const;
  inline void clear_bindtime();
  static const int kBindTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 bindtime() const;
  inline void set_bindtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slotproperty_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > property_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slotvalue_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 slotnumber_;
  ::google::protobuf::uint32 namelength_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 slotspell_;
  ::google::protobuf::uint32 durability_;
  ::PBPropertyValue1* maxslotnumber_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > judge_;
  ::google::protobuf::uint32 resdef_;
  ::google::protobuf::uint32 resatt_;
  ::google::protobuf::uint32 deflevel_;
  ::google::protobuf::uint32 attlevel_;
  ::google::protobuf::uint32 magicstoneid_;
  ::google::protobuf::uint32 magicstonenum_;
  ::google::protobuf::uint32 bindfreetime_;
  ::google::protobuf::uint32 spouseid_;
  ::std::string* spousename_;
  static const ::std::string _default_spousename_;
  ::google::protobuf::uint32 extratype_;
  ::google::protobuf::uint32 bindtime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemObjEquip* default_instance_;
};
// -------------------------------------------------------------------

class PBItemObjMW : public ::google::protobuf::Message {
 public:
  PBItemObjMW();
  virtual ~PBItemObjMW();
  
  PBItemObjMW(const PBItemObjMW& from);
  
  inline PBItemObjMW& operator=(const PBItemObjMW& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemObjMW& default_instance();
  void Swap(PBItemObjMW* other);
  
  // implements Message ----------------------------------------------
  
  PBItemObjMW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemObjMW& from);
  void MergeFrom(const PBItemObjMW& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MWLevel = 1;
  inline bool has_mwlevel() const;
  inline void clear_mwlevel();
  static const int kMWLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 mwlevel() const;
  inline void set_mwlevel(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 Mp = 3;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 3;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);
  
  // optional uint32 Hp = 4;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 CurKeenpoints = 5;
  inline bool has_curkeenpoints() const;
  inline void clear_curkeenpoints();
  static const int kCurKeenpointsFieldNumber = 5;
  inline ::google::protobuf::uint32 curkeenpoints() const;
  inline void set_curkeenpoints(::google::protobuf::uint32 value);
  
  // optional uint32 CurCalmpoints = 6;
  inline bool has_curcalmpoints() const;
  inline void clear_curcalmpoints();
  static const int kCurCalmpointsFieldNumber = 6;
  inline ::google::protobuf::uint32 curcalmpoints() const;
  inline void set_curcalmpoints(::google::protobuf::uint32 value);
  
  // optional uint32 CurMagicpoints = 7;
  inline bool has_curmagicpoints() const;
  inline void clear_curmagicpoints();
  static const int kCurMagicpointsFieldNumber = 7;
  inline ::google::protobuf::uint32 curmagicpoints() const;
  inline void set_curmagicpoints(::google::protobuf::uint32 value);
  
  // optional uint32 CurBierpoints = 8;
  inline bool has_curbierpoints() const;
  inline void clear_curbierpoints();
  static const int kCurBierpointsFieldNumber = 8;
  inline ::google::protobuf::uint32 curbierpoints() const;
  inline void set_curbierpoints(::google::protobuf::uint32 value);
  
  // optional uint32 CurImmortalpoints = 9;
  inline bool has_curimmortalpoints() const;
  inline void clear_curimmortalpoints();
  static const int kCurImmortalpointsFieldNumber = 9;
  inline ::google::protobuf::uint32 curimmortalpoints() const;
  inline void set_curimmortalpoints(::google::protobuf::uint32 value);
  
  // optional uint32 LeftPoints = 10;
  inline bool has_leftpoints() const;
  inline void clear_leftpoints();
  static const int kLeftPointsFieldNumber = 10;
  inline ::google::protobuf::uint32 leftpoints() const;
  inline void set_leftpoints(::google::protobuf::uint32 value);
  
  // optional uint32 ProBase = 11;
  inline bool has_probase() const;
  inline void clear_probase();
  static const int kProBaseFieldNumber = 11;
  inline ::google::protobuf::uint32 probase() const;
  inline void set_probase(::google::protobuf::uint32 value);
  
  // optional uint32 ProUp = 12;
  inline bool has_proup() const;
  inline void clear_proup();
  static const int kProUpFieldNumber = 12;
  inline ::google::protobuf::uint32 proup() const;
  inline void set_proup(::google::protobuf::uint32 value);
  
  // optional uint32 ProEff = 13;
  inline bool has_proeff() const;
  inline void clear_proeff();
  static const int kProEffFieldNumber = 13;
  inline ::google::protobuf::uint32 proeff() const;
  inline void set_proeff(::google::protobuf::uint32 value);
  
  // optional uint32 ProSpir = 14;
  inline bool has_prospir() const;
  inline void clear_prospir();
  static const int kProSpirFieldNumber = 14;
  inline ::google::protobuf::uint32 prospir() const;
  inline void set_prospir(::google::protobuf::uint32 value);
  
  // optional uint32 ProcessVal = 15;
  inline bool has_processval() const;
  inline void clear_processval();
  static const int kProcessValFieldNumber = 15;
  inline ::google::protobuf::uint32 processval() const;
  inline void set_processval(::google::protobuf::uint32 value);
  
  // optional uint32 LeftSkillPoints = 16;
  inline bool has_leftskillpoints() const;
  inline void clear_leftskillpoints();
  static const int kLeftSkillPointsFieldNumber = 16;
  inline ::google::protobuf::uint32 leftskillpoints() const;
  inline void set_leftskillpoints(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMp = 17;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxMpFieldNumber = 17;
  inline ::google::protobuf::uint32 maxmp() const;
  inline void set_maxmp(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHp = 18;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHpFieldNumber = 18;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);
  
  // optional uint32 IncMp = 19;
  inline bool has_incmp() const;
  inline void clear_incmp();
  static const int kIncMpFieldNumber = 19;
  inline ::google::protobuf::uint32 incmp() const;
  inline void set_incmp(::google::protobuf::uint32 value);
  
  // optional uint32 IncHp = 20;
  inline bool has_inchp() const;
  inline void clear_inchp();
  static const int kIncHpFieldNumber = 20;
  inline ::google::protobuf::uint32 inchp() const;
  inline void set_inchp(::google::protobuf::uint32 value);
  
  // repeated .PBSkillBox SkillBox = 21;
  inline int skillbox_size() const;
  inline void clear_skillbox();
  static const int kSkillBoxFieldNumber = 21;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillBox >& skillbox() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillBox >* mutable_skillbox();
  inline const ::PBSkillBox& skillbox(int index) const;
  inline ::PBSkillBox* mutable_skillbox(int index);
  inline ::PBSkillBox* add_skillbox();
  
  // optional uint32 AddKeenpoints = 22;
  inline bool has_addkeenpoints() const;
  inline void clear_addkeenpoints();
  static const int kAddKeenpointsFieldNumber = 22;
  inline ::google::protobuf::uint32 addkeenpoints() const;
  inline void set_addkeenpoints(::google::protobuf::uint32 value);
  
  // optional uint32 AddCalmpoints = 23;
  inline bool has_addcalmpoints() const;
  inline void clear_addcalmpoints();
  static const int kAddCalmpointsFieldNumber = 23;
  inline ::google::protobuf::uint32 addcalmpoints() const;
  inline void set_addcalmpoints(::google::protobuf::uint32 value);
  
  // optional uint32 AddMagicpoints = 24;
  inline bool has_addmagicpoints() const;
  inline void clear_addmagicpoints();
  static const int kAddMagicpointsFieldNumber = 24;
  inline ::google::protobuf::uint32 addmagicpoints() const;
  inline void set_addmagicpoints(::google::protobuf::uint32 value);
  
  // optional uint32 AddBierpoints = 25;
  inline bool has_addbierpoints() const;
  inline void clear_addbierpoints();
  static const int kAddBierpointsFieldNumber = 25;
  inline ::google::protobuf::uint32 addbierpoints() const;
  inline void set_addbierpoints(::google::protobuf::uint32 value);
  
  // optional uint32 AddImmortalpoints = 26;
  inline bool has_addimmortalpoints() const;
  inline void clear_addimmortalpoints();
  static const int kAddImmortalpointsFieldNumber = 26;
  inline ::google::protobuf::uint32 addimmortalpoints() const;
  inline void set_addimmortalpoints(::google::protobuf::uint32 value);
  
  // optional .PBSkillList SkillList = 27;
  inline bool has_skilllist() const;
  inline void clear_skilllist();
  static const int kSkillListFieldNumber = 27;
  inline const ::PBSkillList& skilllist() const;
  inline ::PBSkillList* mutable_skilllist();
  
  // optional uint32 JudgeFlag = 28;
  inline bool has_judgeflag() const;
  inline void clear_judgeflag();
  static const int kJudgeFlagFieldNumber = 28;
  inline ::google::protobuf::uint32 judgeflag() const;
  inline void set_judgeflag(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraKeenpoints = 29;
  inline bool has_extrakeenpoints() const;
  inline void clear_extrakeenpoints();
  static const int kExtraKeenpointsFieldNumber = 29;
  inline ::google::protobuf::uint32 extrakeenpoints() const;
  inline void set_extrakeenpoints(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraCalmpoints = 30;
  inline bool has_extracalmpoints() const;
  inline void clear_extracalmpoints();
  static const int kExtraCalmpointsFieldNumber = 30;
  inline ::google::protobuf::uint32 extracalmpoints() const;
  inline void set_extracalmpoints(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraMagicpoints = 31;
  inline bool has_extramagicpoints() const;
  inline void clear_extramagicpoints();
  static const int kExtraMagicpointsFieldNumber = 31;
  inline ::google::protobuf::uint32 extramagicpoints() const;
  inline void set_extramagicpoints(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraBierpoints = 32;
  inline bool has_extrabierpoints() const;
  inline void clear_extrabierpoints();
  static const int kExtraBierpointsFieldNumber = 32;
  inline ::google::protobuf::uint32 extrabierpoints() const;
  inline void set_extrabierpoints(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraImmortalpoints = 33;
  inline bool has_extraimmortalpoints() const;
  inline void clear_extraimmortalpoints();
  static const int kExtraImmortalpointsFieldNumber = 33;
  inline ::google::protobuf::uint32 extraimmortalpoints() const;
  inline void set_extraimmortalpoints(::google::protobuf::uint32 value);
  
  // repeated uint32 PlayerAddPointLastLevel = 34;
  inline int playeraddpointlastlevel_size() const;
  inline void clear_playeraddpointlastlevel();
  static const int kPlayerAddPointLastLevelFieldNumber = 34;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& playeraddpointlastlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_playeraddpointlastlevel();
  inline ::google::protobuf::uint32 playeraddpointlastlevel(int index) const;
  inline void set_playeraddpointlastlevel(int index, ::google::protobuf::uint32 value);
  inline void add_playeraddpointlastlevel(::google::protobuf::uint32 value);
  
  // optional uint32 LeftPointsLastLevel = 35;
  inline bool has_leftpointslastlevel() const;
  inline void clear_leftpointslastlevel();
  static const int kLeftPointsLastLevelFieldNumber = 35;
  inline ::google::protobuf::uint32 leftpointslastlevel() const;
  inline void set_leftpointslastlevel(::google::protobuf::uint32 value);
  
  // optional uint32 NewAddPoints = 36;
  inline bool has_newaddpoints() const;
  inline void clear_newaddpoints();
  static const int kNewAddPointsFieldNumber = 36;
  inline ::google::protobuf::uint32 newaddpoints() const;
  inline void set_newaddpoints(::google::protobuf::uint32 value);
  
  // optional uint32 NewAddSkillPoints = 37;
  inline bool has_newaddskillpoints() const;
  inline void clear_newaddskillpoints();
  static const int kNewAddSkillPointsFieldNumber = 37;
  inline ::google::protobuf::uint32 newaddskillpoints() const;
  inline void set_newaddskillpoints(::google::protobuf::uint32 value);
  
  // optional uint32 StepClearState = 38;
  inline bool has_stepclearstate() const;
  inline void clear_stepclearstate();
  static const int kStepClearStateFieldNumber = 38;
  inline ::google::protobuf::uint32 stepclearstate() const;
  inline void set_stepclearstate(::google::protobuf::uint32 value);
  
  // optional uint32 LastAddedSkillBoxIndex = 39;
  inline bool has_lastaddedskillboxindex() const;
  inline void clear_lastaddedskillboxindex();
  static const int kLastAddedSkillBoxIndexFieldNumber = 39;
  inline ::google::protobuf::uint32 lastaddedskillboxindex() const;
  inline void set_lastaddedskillboxindex(::google::protobuf::uint32 value);
  
  // optional uint32 LastLevelProcessVal = 40;
  inline bool has_lastlevelprocessval() const;
  inline void clear_lastlevelprocessval();
  static const int kLastLevelProcessValFieldNumber = 40;
  inline ::google::protobuf::uint32 lastlevelprocessval() const;
  inline void set_lastlevelprocessval(::google::protobuf::uint32 value);
  
  // optional uint32 NextActBoxIndex = 41;
  inline bool has_nextactboxindex() const;
  inline void clear_nextactboxindex();
  static const int kNextActBoxIndexFieldNumber = 41;
  inline ::google::protobuf::uint32 nextactboxindex() const;
  inline void set_nextactboxindex(::google::protobuf::uint32 value);
  
  // optional uint32 LastLevelNextActBox = 42;
  inline bool has_lastlevelnextactbox() const;
  inline void clear_lastlevelnextactbox();
  static const int kLastLevelNextActBoxFieldNumber = 42;
  inline ::google::protobuf::uint32 lastlevelnextactbox() const;
  inline void set_lastlevelnextactbox(::google::protobuf::uint32 value);
  
  // optional uint32 QLTempID = 43;
  inline bool has_qltempid() const;
  inline void clear_qltempid();
  static const int kQLTempIDFieldNumber = 43;
  inline ::google::protobuf::uint32 qltempid() const;
  inline void set_qltempid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mwlevel_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 curkeenpoints_;
  ::google::protobuf::uint32 curcalmpoints_;
  ::google::protobuf::uint32 curmagicpoints_;
  ::google::protobuf::uint32 curbierpoints_;
  ::google::protobuf::uint32 curimmortalpoints_;
  ::google::protobuf::uint32 leftpoints_;
  ::google::protobuf::uint32 probase_;
  ::google::protobuf::uint32 proup_;
  ::google::protobuf::uint32 proeff_;
  ::google::protobuf::uint32 prospir_;
  ::google::protobuf::uint32 processval_;
  ::google::protobuf::uint32 leftskillpoints_;
  ::google::protobuf::uint32 maxmp_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 incmp_;
  ::google::protobuf::uint32 inchp_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillBox > skillbox_;
  ::google::protobuf::uint32 addkeenpoints_;
  ::google::protobuf::uint32 addcalmpoints_;
  ::google::protobuf::uint32 addmagicpoints_;
  ::google::protobuf::uint32 addbierpoints_;
  ::google::protobuf::uint32 addimmortalpoints_;
  ::PBSkillList* skilllist_;
  ::google::protobuf::uint32 judgeflag_;
  ::google::protobuf::uint32 extrakeenpoints_;
  ::google::protobuf::uint32 extracalmpoints_;
  ::google::protobuf::uint32 extramagicpoints_;
  ::google::protobuf::uint32 extrabierpoints_;
  ::google::protobuf::uint32 extraimmortalpoints_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > playeraddpointlastlevel_;
  ::google::protobuf::uint32 leftpointslastlevel_;
  ::google::protobuf::uint32 newaddpoints_;
  ::google::protobuf::uint32 newaddskillpoints_;
  ::google::protobuf::uint32 stepclearstate_;
  ::google::protobuf::uint32 lastaddedskillboxindex_;
  ::google::protobuf::uint32 lastlevelprocessval_;
  ::google::protobuf::uint32 nextactboxindex_;
  ::google::protobuf::uint32 lastlevelnextactbox_;
  ::google::protobuf::uint32 qltempid_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemObjMW* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBox : public ::google::protobuf::Message {
 public:
  PBItemBox();
  virtual ~PBItemBox();
  
  PBItemBox(const PBItemBox& from);
  
  inline PBItemBox& operator=(const PBItemBox& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBox& default_instance();
  void Swap(PBItemBox* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBox& from);
  void MergeFrom(const PBItemBox& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ReleaseIndex = 1;
  inline bool has_releaseindex() const;
  inline void clear_releaseindex();
  static const int kReleaseIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 releaseindex() const;
  inline void set_releaseindex(::google::protobuf::uint32 value);
  
  // repeated .PBItemObject ItemObjects = 2;
  inline int itemobjects_size() const;
  inline void clear_itemobjects();
  static const int kItemObjectsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >& itemobjects() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >* mutable_itemobjects();
  inline const ::PBItemObject& itemobjects(int index) const;
  inline ::PBItemObject* mutable_itemobjects(int index);
  inline ::PBItemObject* add_itemobjects();
  
  // repeated .PBItemObject KitBag = 3;
  inline int kitbag_size() const;
  inline void clear_kitbag();
  static const int kKitBagFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >& kitbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >* mutable_kitbag();
  inline const ::PBItemObject& kitbag(int index) const;
  inline ::PBItemObject* mutable_kitbag(int index);
  inline ::PBItemObject* add_kitbag();
  
  // repeated uint32 KitLocked = 4;
  inline int kitlocked_size() const;
  inline void clear_kitlocked();
  static const int kKitLockedFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& kitlocked() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_kitlocked();
  inline ::google::protobuf::uint32 kitlocked(int index) const;
  inline void set_kitlocked(int index, ::google::protobuf::uint32 value);
  inline void add_kitlocked(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 releaseindex_;
  ::google::protobuf::RepeatedPtrField< ::PBItemObject > itemobjects_;
  ::google::protobuf::RepeatedPtrField< ::PBItemObject > kitbag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kitlocked_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBox* default_instance_;
};
// -------------------------------------------------------------------

class PBTransform : public ::google::protobuf::Message {
 public:
  PBTransform();
  virtual ~PBTransform();
  
  PBTransform(const PBTransform& from);
  
  inline PBTransform& operator=(const PBTransform& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTransform& default_instance();
  void Swap(PBTransform* other);
  
  // implements Message ----------------------------------------------
  
  PBTransform* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTransform& from);
  void MergeFrom(const PBTransform& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 HasTransform = 1;
  inline bool has_hastransform() const;
  inline void clear_hastransform();
  static const int kHasTransformFieldNumber = 1;
  inline ::google::protobuf::uint32 hastransform() const;
  inline void set_hastransform(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 2;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 2;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 StateID = 3;
  inline bool has_stateid() const;
  inline void clear_stateid();
  static const int kStateIDFieldNumber = 3;
  inline ::google::protobuf::uint32 stateid() const;
  inline void set_stateid(::google::protobuf::uint32 value);
  
  // optional uint32 WeaponID = 4;
  inline bool has_weaponid() const;
  inline void clear_weaponid();
  static const int kWeaponIDFieldNumber = 4;
  inline ::google::protobuf::uint32 weaponid() const;
  inline void set_weaponid(::google::protobuf::uint32 value);
  
  // optional uint32 ClothID = 5;
  inline bool has_clothid() const;
  inline void clear_clothid();
  static const int kClothIDFieldNumber = 5;
  inline ::google::protobuf::uint32 clothid() const;
  inline void set_clothid(::google::protobuf::uint32 value);
  
  // optional uint32 FashionID = 6;
  inline bool has_fashionid() const;
  inline void clear_fashionid();
  static const int kFashionIDFieldNumber = 6;
  inline ::google::protobuf::uint32 fashionid() const;
  inline void set_fashionid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 7;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 7;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 hastransform_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 stateid_;
  ::google::protobuf::uint32 weaponid_;
  ::google::protobuf::uint32 clothid_;
  ::google::protobuf::uint32 fashionid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTransform* default_instance_;
};
// -------------------------------------------------------------------

class PBBuffObject : public ::google::protobuf::Message {
 public:
  PBBuffObject();
  virtual ~PBBuffObject();
  
  PBBuffObject(const PBBuffObject& from);
  
  inline PBBuffObject& operator=(const PBBuffObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBuffObject& default_instance();
  void Swap(PBBuffObject* other);
  
  // implements Message ----------------------------------------------
  
  PBBuffObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBuffObject& from);
  void MergeFrom(const PBBuffObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BuffID = 1;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 1;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // optional uint64 PersistTime = 2;
  inline bool has_persisttime() const;
  inline void clear_persisttime();
  static const int kPersistTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 persisttime() const;
  inline void set_persisttime(::google::protobuf::uint64 value);
  
  // optional uint32 SrcEntityID = 3;
  inline bool has_srcentityid() const;
  inline void clear_srcentityid();
  static const int kSrcEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srcentityid() const;
  inline void set_srcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 TimerType = 4;
  inline bool has_timertype() const;
  inline void clear_timertype();
  static const int kTimerTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 timertype() const;
  inline void set_timertype(::google::protobuf::uint32 value);
  
  // optional uint32 LastInterval = 5;
  inline bool has_lastinterval() const;
  inline void clear_lastinterval();
  static const int kLastIntervalFieldNumber = 5;
  inline ::google::protobuf::uint32 lastinterval() const;
  inline void set_lastinterval(::google::protobuf::uint32 value);
  
  // repeated uint32 Parames = 6;
  inline int parames_size() const;
  inline void clear_parames();
  static const int kParamesFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parames() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parames();
  inline ::google::protobuf::uint32 parames(int index) const;
  inline void set_parames(int index, ::google::protobuf::uint32 value);
  inline void add_parames(::google::protobuf::uint32 value);
  
  // repeated uint32 Parames2 = 7;
  inline int parames2_size() const;
  inline void clear_parames2();
  static const int kParames2FieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parames2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parames2();
  inline ::google::protobuf::uint32 parames2(int index) const;
  inline void set_parames2(int index, ::google::protobuf::uint32 value);
  inline void add_parames2(::google::protobuf::uint32 value);
  
  // optional uint32 BackDamage = 8;
  inline bool has_backdamage() const;
  inline void clear_backdamage();
  static const int kBackDamageFieldNumber = 8;
  inline ::google::protobuf::uint32 backdamage() const;
  inline void set_backdamage(::google::protobuf::uint32 value);
  
  // optional uint32 ListID = 9;
  inline bool has_listid() const;
  inline void clear_listid();
  static const int kListIDFieldNumber = 9;
  inline ::google::protobuf::uint32 listid() const;
  inline void set_listid(::google::protobuf::uint32 value);
  
  // optional uint32 SuperCount = 10;
  inline bool has_supercount() const;
  inline void clear_supercount();
  static const int kSuperCountFieldNumber = 10;
  inline ::google::protobuf::uint32 supercount() const;
  inline void set_supercount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::uint64 persisttime_;
  ::google::protobuf::uint32 srcentityid_;
  ::google::protobuf::uint32 timertype_;
  ::google::protobuf::uint32 lastinterval_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parames_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parames2_;
  ::google::protobuf::uint32 backdamage_;
  ::google::protobuf::uint32 listid_;
  ::google::protobuf::uint32 supercount_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBuffObject* default_instance_;
};
// -------------------------------------------------------------------

class PBBuffList : public ::google::protobuf::Message {
 public:
  PBBuffList();
  virtual ~PBBuffList();
  
  PBBuffList(const PBBuffList& from);
  
  inline PBBuffList& operator=(const PBBuffList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBuffList& default_instance();
  void Swap(PBBuffList* other);
  
  // implements Message ----------------------------------------------
  
  PBBuffList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBuffList& from);
  void MergeFrom(const PBBuffList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BuffNumber = 1;
  inline bool has_buffnumber() const;
  inline void clear_buffnumber();
  static const int kBuffNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 buffnumber() const;
  inline void set_buffnumber(::google::protobuf::uint32 value);
  
  // repeated .PBBuffObject BuffObjects = 2;
  inline int buffobjects_size() const;
  inline void clear_buffobjects();
  static const int kBuffObjectsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBuffObject >& buffobjects() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBuffObject >* mutable_buffobjects();
  inline const ::PBBuffObject& buffobjects(int index) const;
  inline ::PBBuffObject* mutable_buffobjects(int index);
  inline ::PBBuffObject* add_buffobjects();
  
  // optional .PBTransform Transform = 3;
  inline bool has_transform() const;
  inline void clear_transform();
  static const int kTransformFieldNumber = 3;
  inline const ::PBTransform& transform() const;
  inline ::PBTransform* mutable_transform();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 buffnumber_;
  ::google::protobuf::RepeatedPtrField< ::PBBuffObject > buffobjects_;
  ::PBTransform* transform_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBuffList* default_instance_;
};
// -------------------------------------------------------------------

class PBStateParam : public ::google::protobuf::Message {
 public:
  PBStateParam();
  virtual ~PBStateParam();
  
  PBStateParam(const PBStateParam& from);
  
  inline PBStateParam& operator=(const PBStateParam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStateParam& default_instance();
  void Swap(PBStateParam* other);
  
  // implements Message ----------------------------------------------
  
  PBStateParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStateParam& from);
  void MergeFrom(const PBStateParam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StateType = 1;
  inline bool has_statetype() const;
  inline void clear_statetype();
  static const int kStateTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 statetype() const;
  inline void set_statetype(::google::protobuf::uint32 value);
  
  // optional uint32 From = 2;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 2;
  inline ::google::protobuf::uint32 from() const;
  inline void set_from(::google::protobuf::uint32 value);
  
  // optional uint32 Index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 Parames1 = 4;
  inline bool has_parames1() const;
  inline void clear_parames1();
  static const int kParames1FieldNumber = 4;
  inline ::google::protobuf::uint32 parames1() const;
  inline void set_parames1(::google::protobuf::uint32 value);
  
  // optional uint32 Parames2 = 5;
  inline bool has_parames2() const;
  inline void clear_parames2();
  static const int kParames2FieldNumber = 5;
  inline ::google::protobuf::uint32 parames2() const;
  inline void set_parames2(::google::protobuf::uint32 value);
  
  // optional uint32 InState = 6;
  inline bool has_instate() const;
  inline void clear_instate();
  static const int kInStateFieldNumber = 6;
  inline ::google::protobuf::uint32 instate() const;
  inline void set_instate(::google::protobuf::uint32 value);
  
  // optional fixed32 BuffAdd = 7;
  inline bool has_buffadd() const;
  inline void clear_buffadd();
  static const int kBuffAddFieldNumber = 7;
  inline ::google::protobuf::uint32 buffadd() const;
  inline void set_buffadd(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 statetype_;
  ::google::protobuf::uint32 from_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 parames1_;
  ::google::protobuf::uint32 parames2_;
  ::google::protobuf::uint32 instate_;
  ::google::protobuf::uint32 buffadd_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStateParam* default_instance_;
};
// -------------------------------------------------------------------

class PBStateList : public ::google::protobuf::Message {
 public:
  PBStateList();
  virtual ~PBStateList();
  
  PBStateList(const PBStateList& from);
  
  inline PBStateList& operator=(const PBStateList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStateList& default_instance();
  void Swap(PBStateList* other);
  
  // implements Message ----------------------------------------------
  
  PBStateList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStateList& from);
  void MergeFrom(const PBStateList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBStateParam StateParamObj = 1;
  inline int stateparamobj_size() const;
  inline void clear_stateparamobj();
  static const int kStateParamObjFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBStateParam >& stateparamobj() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBStateParam >* mutable_stateparamobj();
  inline const ::PBStateParam& stateparamobj(int index) const;
  inline ::PBStateParam* mutable_stateparamobj(int index);
  inline ::PBStateParam* add_stateparamobj();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBStateParam > stateparamobj_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStateList* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillObject : public ::google::protobuf::Message {
 public:
  PBSkillObject();
  virtual ~PBSkillObject();
  
  PBSkillObject(const PBSkillObject& from);
  
  inline PBSkillObject& operator=(const PBSkillObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillObject& default_instance();
  void Swap(PBSkillObject* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillObject& from);
  void MergeFrom(const PBSkillObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillLevel = 2;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 Cooldown = 3;
  inline bool has_cooldown() const;
  inline void clear_cooldown();
  static const int kCooldownFieldNumber = 3;
  inline ::google::protobuf::uint32 cooldown() const;
  inline void set_cooldown(::google::protobuf::uint32 value);
  
  // optional uint32 IncLevel = 4;
  inline bool has_inclevel() const;
  inline void clear_inclevel();
  static const int kIncLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 inclevel() const;
  inline void set_inclevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 cooldown_;
  ::google::protobuf::uint32 inclevel_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillObject* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillList : public ::google::protobuf::Message {
 public:
  PBSkillList();
  virtual ~PBSkillList();
  
  PBSkillList(const PBSkillList& from);
  
  inline PBSkillList& operator=(const PBSkillList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillList& default_instance();
  void Swap(PBSkillList* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillList& from);
  void MergeFrom(const PBSkillList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillNumber = 1;
  inline bool has_skillnumber() const;
  inline void clear_skillnumber();
  static const int kSkillNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 skillnumber() const;
  inline void set_skillnumber(::google::protobuf::uint32 value);
  
  // repeated .PBSkillObject SkillObjects = 2;
  inline int skillobjects_size() const;
  inline void clear_skillobjects();
  static const int kSkillObjectsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillObject >& skillobjects() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillObject >* mutable_skillobjects();
  inline const ::PBSkillObject& skillobjects(int index) const;
  inline ::PBSkillObject* mutable_skillobjects(int index);
  inline ::PBSkillObject* add_skillobjects();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillnumber_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillObject > skillobjects_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillList* default_instance_;
};
// -------------------------------------------------------------------

class PBShortcut : public ::google::protobuf::Message {
 public:
  PBShortcut();
  virtual ~PBShortcut();
  
  PBShortcut(const PBShortcut& from);
  
  inline PBShortcut& operator=(const PBShortcut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBShortcut& default_instance();
  void Swap(PBShortcut* other);
  
  // implements Message ----------------------------------------------
  
  PBShortcut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBShortcut& from);
  void MergeFrom(const PBShortcut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Shortcut = 1;
  inline bool has_shortcut() const;
  inline void clear_shortcut();
  static const int kShortcutFieldNumber = 1;
  inline ::google::protobuf::uint32 shortcut() const;
  inline void set_shortcut(::google::protobuf::uint32 value);
  
  // optional uint32 mType = 2;
  inline bool has_mtype() const;
  inline void clear_mtype();
  static const int kMTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 mtype() const;
  inline void set_mtype(::google::protobuf::uint32 value);
  
  // optional uint32 mIndex = 3;
  inline bool has_mindex() const;
  inline void clear_mindex();
  static const int kMIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 mindex() const;
  inline void set_mindex(::google::protobuf::uint32 value);
  
  // optional uint32 mLabelType = 4;
  inline bool has_mlabeltype() const;
  inline void clear_mlabeltype();
  static const int kMLabelTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 mlabeltype() const;
  inline void set_mlabeltype(::google::protobuf::uint32 value);
  
  // optional uint32 mLabelIndex = 5;
  inline bool has_mlabelindex() const;
  inline void clear_mlabelindex();
  static const int kMLabelIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 mlabelindex() const;
  inline void set_mlabelindex(::google::protobuf::uint32 value);
  
  // optional uint32 Param1 = 6;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 6;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 shortcut_;
  ::google::protobuf::uint32 mtype_;
  ::google::protobuf::uint32 mindex_;
  ::google::protobuf::uint32 mlabeltype_;
  ::google::protobuf::uint32 mlabelindex_;
  ::google::protobuf::uint32 param1_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBShortcut* default_instance_;
};
// -------------------------------------------------------------------

class PBShortcutList : public ::google::protobuf::Message {
 public:
  PBShortcutList();
  virtual ~PBShortcutList();
  
  PBShortcutList(const PBShortcutList& from);
  
  inline PBShortcutList& operator=(const PBShortcutList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBShortcutList& default_instance();
  void Swap(PBShortcutList* other);
  
  // implements Message ----------------------------------------------
  
  PBShortcutList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBShortcutList& from);
  void MergeFrom(const PBShortcutList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ShortcutNumber = 1;
  inline bool has_shortcutnumber() const;
  inline void clear_shortcutnumber();
  static const int kShortcutNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 shortcutnumber() const;
  inline void set_shortcutnumber(::google::protobuf::uint32 value);
  
  // repeated .PBShortcut Shortcuts = 2;
  inline int shortcuts_size() const;
  inline void clear_shortcuts();
  static const int kShortcutsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBShortcut >& shortcuts() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBShortcut >* mutable_shortcuts();
  inline const ::PBShortcut& shortcuts(int index) const;
  inline ::PBShortcut* mutable_shortcuts(int index);
  inline ::PBShortcut* add_shortcuts();
  
  // repeated uint32 HelpStatus = 3;
  inline int helpstatus_size() const;
  inline void clear_helpstatus();
  static const int kHelpStatusFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& helpstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_helpstatus();
  inline ::google::protobuf::uint32 helpstatus(int index) const;
  inline void set_helpstatus(int index, ::google::protobuf::uint32 value);
  inline void add_helpstatus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 shortcutnumber_;
  ::google::protobuf::RepeatedPtrField< ::PBShortcut > shortcuts_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > helpstatus_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBShortcutList* default_instance_;
};
// -------------------------------------------------------------------

class PBKillData : public ::google::protobuf::Message {
 public:
  PBKillData();
  virtual ~PBKillData();
  
  PBKillData(const PBKillData& from);
  
  inline PBKillData& operator=(const PBKillData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBKillData& default_instance();
  void Swap(PBKillData* other);
  
  // implements Message ----------------------------------------------
  
  PBKillData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBKillData& from);
  void MergeFrom(const PBKillData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 KillID = 1;
  inline bool has_killid() const;
  inline void clear_killid();
  static const int kKillIDFieldNumber = 1;
  inline ::google::protobuf::uint32 killid() const;
  inline void set_killid(::google::protobuf::uint32 value);
  
  // optional uint32 KillTime = 2;
  inline bool has_killtime() const;
  inline void clear_killtime();
  static const int kKillTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 killtime() const;
  inline void set_killtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 killid_;
  ::google::protobuf::uint32 killtime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBKillData* default_instance_;
};
// -------------------------------------------------------------------

class PBWizard : public ::google::protobuf::Message {
 public:
  PBWizard();
  virtual ~PBWizard();
  
  PBWizard(const PBWizard& from);
  
  inline PBWizard& operator=(const PBWizard& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWizard& default_instance();
  void Swap(PBWizard* other);
  
  // implements Message ----------------------------------------------
  
  PBWizard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWizard& from);
  void MergeFrom(const PBWizard& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 WizardPoint = 1;
  inline int wizardpoint_size() const;
  inline void clear_wizardpoint();
  static const int kWizardPointFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizardpoint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizardpoint();
  inline ::google::protobuf::uint32 wizardpoint(int index) const;
  inline void set_wizardpoint(int index, ::google::protobuf::uint32 value);
  inline void add_wizardpoint(::google::protobuf::uint32 value);
  
  // repeated uint32 WizardValue = 2;
  inline int wizardvalue_size() const;
  inline void clear_wizardvalue();
  static const int kWizardValueFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizardvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizardvalue();
  inline ::google::protobuf::uint32 wizardvalue(int index) const;
  inline void set_wizardvalue(int index, ::google::protobuf::uint32 value);
  inline void add_wizardvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 WizardSubmit = 3;
  inline int wizardsubmit_size() const;
  inline void clear_wizardsubmit();
  static const int kWizardSubmitFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizardsubmit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizardsubmit();
  inline ::google::protobuf::uint32 wizardsubmit(int index) const;
  inline void set_wizardsubmit(int index, ::google::protobuf::uint32 value);
  inline void add_wizardsubmit(::google::protobuf::uint32 value);
  
  // repeated uint32 WizardIncrease = 4;
  inline int wizardincrease_size() const;
  inline void clear_wizardincrease();
  static const int kWizardIncreaseFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizardincrease() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizardincrease();
  inline ::google::protobuf::uint32 wizardincrease(int index) const;
  inline void set_wizardincrease(int index, ::google::protobuf::uint32 value);
  inline void add_wizardincrease(::google::protobuf::uint32 value);
  
  // optional uint32 Trend = 5;
  inline bool has_trend() const;
  inline void clear_trend();
  static const int kTrendFieldNumber = 5;
  inline ::google::protobuf::uint32 trend() const;
  inline void set_trend(::google::protobuf::uint32 value);
  
  // optional uint32 CombatFame = 6;
  inline bool has_combatfame() const;
  inline void clear_combatfame();
  static const int kCombatFameFieldNumber = 6;
  inline ::google::protobuf::uint32 combatfame() const;
  inline void set_combatfame(::google::protobuf::uint32 value);
  
  // optional uint32 RepeFame = 7;
  inline bool has_repefame() const;
  inline void clear_repefame();
  static const int kRepeFameFieldNumber = 7;
  inline ::google::protobuf::uint32 repefame() const;
  inline void set_repefame(::google::protobuf::uint32 value);
  
  // optional uint32 CommonFame = 8;
  inline bool has_commonfame() const;
  inline void clear_commonfame();
  static const int kCommonFameFieldNumber = 8;
  inline ::google::protobuf::uint32 commonfame() const;
  inline void set_commonfame(::google::protobuf::uint32 value);
  
  // optional uint32 CombatToday = 9;
  inline bool has_combattoday() const;
  inline void clear_combattoday();
  static const int kCombatTodayFieldNumber = 9;
  inline ::google::protobuf::uint32 combattoday() const;
  inline void set_combattoday(::google::protobuf::uint32 value);
  
  // optional uint32 RepeToday = 10;
  inline bool has_repetoday() const;
  inline void clear_repetoday();
  static const int kRepeTodayFieldNumber = 10;
  inline ::google::protobuf::uint32 repetoday() const;
  inline void set_repetoday(::google::protobuf::uint32 value);
  
  // optional uint32 CommonToday = 11;
  inline bool has_commontoday() const;
  inline void clear_commontoday();
  static const int kCommonTodayFieldNumber = 11;
  inline ::google::protobuf::uint32 commontoday() const;
  inline void set_commontoday(::google::protobuf::uint32 value);
  
  // optional uint32 CombatAll = 12;
  inline bool has_combatall() const;
  inline void clear_combatall();
  static const int kCombatAllFieldNumber = 12;
  inline ::google::protobuf::uint32 combatall() const;
  inline void set_combatall(::google::protobuf::uint32 value);
  
  // optional uint32 RepeAll = 13;
  inline bool has_repeall() const;
  inline void clear_repeall();
  static const int kRepeAllFieldNumber = 13;
  inline ::google::protobuf::uint32 repeall() const;
  inline void set_repeall(::google::protobuf::uint32 value);
  
  // optional uint32 CommonAll = 14;
  inline bool has_commonall() const;
  inline void clear_commonall();
  static const int kCommonAllFieldNumber = 14;
  inline ::google::protobuf::uint32 commonall() const;
  inline void set_commonall(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizardpoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizardvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizardsubmit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizardincrease_;
  ::google::protobuf::uint32 trend_;
  ::google::protobuf::uint32 combatfame_;
  ::google::protobuf::uint32 repefame_;
  ::google::protobuf::uint32 commonfame_;
  ::google::protobuf::uint32 combattoday_;
  ::google::protobuf::uint32 repetoday_;
  ::google::protobuf::uint32 commontoday_;
  ::google::protobuf::uint32 combatall_;
  ::google::protobuf::uint32 repeall_;
  ::google::protobuf::uint32 commonall_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWizard* default_instance_;
};
// -------------------------------------------------------------------

class PBTelePostion : public ::google::protobuf::Message {
 public:
  PBTelePostion();
  virtual ~PBTelePostion();
  
  PBTelePostion(const PBTelePostion& from);
  
  inline PBTelePostion& operator=(const PBTelePostion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTelePostion& default_instance();
  void Swap(PBTelePostion* other);
  
  // implements Message ----------------------------------------------
  
  PBTelePostion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTelePostion& from);
  void MergeFrom(const PBTelePostion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Line = 1;
  inline bool has_line() const;
  inline void clear_line();
  static const int kLineFieldNumber = 1;
  inline ::google::protobuf::uint32 line() const;
  inline void set_line(::google::protobuf::uint32 value);
  
  // optional uint32 Map = 2;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 2;
  inline ::google::protobuf::uint32 map() const;
  inline void set_map(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 line_;
  ::google::protobuf::uint32 map_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTelePostion* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerBasicInfo : public ::google::protobuf::Message {
 public:
  PBPlayerBasicInfo();
  virtual ~PBPlayerBasicInfo();
  
  PBPlayerBasicInfo(const PBPlayerBasicInfo& from);
  
  inline PBPlayerBasicInfo& operator=(const PBPlayerBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerBasicInfo& default_instance();
  void Swap(PBPlayerBasicInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerBasicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerBasicInfo& from);
  void MergeFrom(const PBPlayerBasicInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline ::google::protobuf::uint32 str() const;
  inline void set_str(::google::protobuf::uint32 value);
  
  // optional uint32 Sta = 2;
  inline bool has_sta() const;
  inline void clear_sta();
  static const int kStaFieldNumber = 2;
  inline ::google::protobuf::uint32 sta() const;
  inline void set_sta(::google::protobuf::uint32 value);
  
  // optional uint32 Spr = 3;
  inline bool has_spr() const;
  inline void clear_spr();
  static const int kSprFieldNumber = 3;
  inline ::google::protobuf::uint32 spr() const;
  inline void set_spr(::google::protobuf::uint32 value);
  
  // optional uint32 Con = 4;
  inline bool has_con() const;
  inline void clear_con();
  static const int kConFieldNumber = 4;
  inline ::google::protobuf::uint32 con() const;
  inline void set_con(::google::protobuf::uint32 value);
  
  // optional uint32 Wis = 5;
  inline bool has_wis() const;
  inline void clear_wis();
  static const int kWisFieldNumber = 5;
  inline ::google::protobuf::uint32 wis() const;
  inline void set_wis(::google::protobuf::uint32 value);
  
  // optional uint32 RemainPoint = 6;
  inline bool has_remainpoint() const;
  inline void clear_remainpoint();
  static const int kRemainPointFieldNumber = 6;
  inline ::google::protobuf::uint32 remainpoint() const;
  inline void set_remainpoint(::google::protobuf::uint32 value);
  
  // optional uint32 SkillPoint = 7;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 7;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);
  
  // optional uint32 ProLevel = 8;
  inline bool has_prolevel() const;
  inline void clear_prolevel();
  static const int kProLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 prolevel() const;
  inline void set_prolevel(::google::protobuf::uint32 value);
  
  // optional uint32 ProExp = 9;
  inline bool has_proexp() const;
  inline void clear_proexp();
  static const int kProExpFieldNumber = 9;
  inline ::google::protobuf::uint32 proexp() const;
  inline void set_proexp(::google::protobuf::uint32 value);
  
  // optional uint32 ShowFashion = 10;
  inline bool has_showfashion() const;
  inline void clear_showfashion();
  static const int kShowFashionFieldNumber = 10;
  inline ::google::protobuf::uint32 showfashion() const;
  inline void set_showfashion(::google::protobuf::uint32 value);
  
  // optional uint32 ShowEquip = 11;
  inline bool has_showequip() const;
  inline void clear_showequip();
  static const int kShowEquipFieldNumber = 11;
  inline ::google::protobuf::uint32 showequip() const;
  inline void set_showequip(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 str_;
  ::google::protobuf::uint32 sta_;
  ::google::protobuf::uint32 spr_;
  ::google::protobuf::uint32 con_;
  ::google::protobuf::uint32 wis_;
  ::google::protobuf::uint32 remainpoint_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 prolevel_;
  ::google::protobuf::uint32 proexp_;
  ::google::protobuf::uint32 showfashion_;
  ::google::protobuf::uint32 showequip_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerBasicInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBMonsterRecordInfo : public ::google::protobuf::Message {
 public:
  PBMonsterRecordInfo();
  virtual ~PBMonsterRecordInfo();
  
  PBMonsterRecordInfo(const PBMonsterRecordInfo& from);
  
  inline PBMonsterRecordInfo& operator=(const PBMonsterRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMonsterRecordInfo& default_instance();
  void Swap(PBMonsterRecordInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBMonsterRecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMonsterRecordInfo& from);
  void MergeFrom(const PBMonsterRecordInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ActiveCard = 1;
  inline int activecard_size() const;
  inline void clear_activecard();
  static const int kActiveCardFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& activecard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_activecard();
  inline ::google::protobuf::uint32 activecard(int index) const;
  inline void set_activecard(int index, ::google::protobuf::uint32 value);
  inline void add_activecard(::google::protobuf::uint32 value);
  
  // repeated uint32 OwnCard = 2;
  inline int owncard_size() const;
  inline void clear_owncard();
  static const int kOwnCardFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& owncard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_owncard();
  inline ::google::protobuf::uint32 owncard(int index) const;
  inline void set_owncard(int index, ::google::protobuf::uint32 value);
  inline void add_owncard(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activecard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > owncard_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMonsterRecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerMWInfo : public ::google::protobuf::Message {
 public:
  PBPlayerMWInfo();
  virtual ~PBPlayerMWInfo();
  
  PBPlayerMWInfo(const PBPlayerMWInfo& from);
  
  inline PBPlayerMWInfo& operator=(const PBPlayerMWInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerMWInfo& default_instance();
  void Swap(PBPlayerMWInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerMWInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerMWInfo& from);
  void MergeFrom(const PBPlayerMWInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AssignExpScl = 1;
  inline bool has_assignexpscl() const;
  inline void clear_assignexpscl();
  static const int kAssignExpSclFieldNumber = 1;
  inline ::google::protobuf::uint32 assignexpscl() const;
  inline void set_assignexpscl(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 assignexpscl_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerMWInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleCDGroup : public ::google::protobuf::Message {
 public:
  PBSingleCDGroup();
  virtual ~PBSingleCDGroup();
  
  PBSingleCDGroup(const PBSingleCDGroup& from);
  
  inline PBSingleCDGroup& operator=(const PBSingleCDGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleCDGroup& default_instance();
  void Swap(PBSingleCDGroup* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleCDGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleCDGroup& from);
  void MergeFrom(const PBSingleCDGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 CDTime = 2;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCDTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 cdtime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleCDGroup* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerCDGroupInfo : public ::google::protobuf::Message {
 public:
  PBPlayerCDGroupInfo();
  virtual ~PBPlayerCDGroupInfo();
  
  PBPlayerCDGroupInfo(const PBPlayerCDGroupInfo& from);
  
  inline PBPlayerCDGroupInfo& operator=(const PBPlayerCDGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerCDGroupInfo& default_instance();
  void Swap(PBPlayerCDGroupInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerCDGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerCDGroupInfo& from);
  void MergeFrom(const PBPlayerCDGroupInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSingleCDGroup CDGroup = 1;
  inline int cdgroup_size() const;
  inline void clear_cdgroup();
  static const int kCDGroupFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleCDGroup >& cdgroup() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleCDGroup >* mutable_cdgroup();
  inline const ::PBSingleCDGroup& cdgroup(int index) const;
  inline ::PBSingleCDGroup* mutable_cdgroup(int index);
  inline ::PBSingleCDGroup* add_cdgroup();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSingleCDGroup > cdgroup_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerCDGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBTelePosInfo : public ::google::protobuf::Message {
 public:
  PBTelePosInfo();
  virtual ~PBTelePosInfo();
  
  PBTelePosInfo(const PBTelePosInfo& from);
  
  inline PBTelePosInfo& operator=(const PBTelePosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTelePosInfo& default_instance();
  void Swap(PBTelePosInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTelePosInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTelePosInfo& from);
  void MergeFrom(const PBTelePosInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTelePostion TownPos = 1;
  inline bool has_townpos() const;
  inline void clear_townpos();
  static const int kTownPosFieldNumber = 1;
  inline const ::PBTelePostion& townpos() const;
  inline ::PBTelePostion* mutable_townpos();
  
  // repeated .PBTelePostion TeleList = 2;
  inline int telelist_size() const;
  inline void clear_telelist();
  static const int kTeleListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTelePostion >& telelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTelePostion >* mutable_telelist();
  inline const ::PBTelePostion& telelist(int index) const;
  inline ::PBTelePostion* mutable_telelist(int index);
  inline ::PBTelePostion* add_telelist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBTelePostion* townpos_;
  ::google::protobuf::RepeatedPtrField< ::PBTelePostion > telelist_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTelePosInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerPVPInfo : public ::google::protobuf::Message {
 public:
  PBPlayerPVPInfo();
  virtual ~PBPlayerPVPInfo();
  
  PBPlayerPVPInfo(const PBPlayerPVPInfo& from);
  
  inline PBPlayerPVPInfo& operator=(const PBPlayerPVPInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerPVPInfo& default_instance();
  void Swap(PBPlayerPVPInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerPVPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerPVPInfo& from);
  void MergeFrom(const PBPlayerPVPInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PKMode = 1;
  inline bool has_pkmode() const;
  inline void clear_pkmode();
  static const int kPKModeFieldNumber = 1;
  inline ::google::protobuf::uint32 pkmode() const;
  inline void set_pkmode(::google::protobuf::uint32 value);
  
  // optional uint32 PKValue = 2;
  inline bool has_pkvalue() const;
  inline void clear_pkvalue();
  static const int kPKValueFieldNumber = 2;
  inline ::google::protobuf::uint32 pkvalue() const;
  inline void set_pkvalue(::google::protobuf::uint32 value);
  
  // optional uint32 KillNum = 3;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillNumFieldNumber = 3;
  inline ::google::protobuf::uint32 killnum() const;
  inline void set_killnum(::google::protobuf::uint32 value);
  
  // optional uint32 Honor = 4;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 4;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);
  
  // optional uint32 InHonPerDay = 5;
  inline bool has_inhonperday() const;
  inline void clear_inhonperday();
  static const int kInHonPerDayFieldNumber = 5;
  inline ::google::protobuf::uint32 inhonperday() const;
  inline void set_inhonperday(::google::protobuf::uint32 value);
  
  // optional uint32 OutHonPerDay = 6;
  inline bool has_outhonperday() const;
  inline void clear_outhonperday();
  static const int kOutHonPerDayFieldNumber = 6;
  inline ::google::protobuf::uint32 outhonperday() const;
  inline void set_outhonperday(::google::protobuf::uint32 value);
  
  // repeated .PBKillData Kill = 7;
  inline int kill_size() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBKillData >& kill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBKillData >* mutable_kill();
  inline const ::PBKillData& kill(int index) const;
  inline ::PBKillData* mutable_kill(int index);
  inline ::PBKillData* add_kill();
  
  // optional uint32 KillNumIn = 8;
  inline bool has_killnumin() const;
  inline void clear_killnumin();
  static const int kKillNumInFieldNumber = 8;
  inline ::google::protobuf::uint32 killnumin() const;
  inline void set_killnumin(::google::protobuf::uint32 value);
  
  // optional uint32 YellowStatus = 9;
  inline bool has_yellowstatus() const;
  inline void clear_yellowstatus();
  static const int kYellowStatusFieldNumber = 9;
  inline ::google::protobuf::uint32 yellowstatus() const;
  inline void set_yellowstatus(::google::protobuf::uint32 value);
  
  // optional uint32 PrisonTime = 10;
  inline bool has_prisontime() const;
  inline void clear_prisontime();
  static const int kPrisonTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 prisontime() const;
  inline void set_prisontime(::google::protobuf::uint32 value);
  
  // optional uint32 TotalPrisonTime = 11;
  inline bool has_totalprisontime() const;
  inline void clear_totalprisontime();
  static const int kTotalPrisonTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 totalprisontime() const;
  inline void set_totalprisontime(::google::protobuf::uint32 value);
  
  // optional uint32 TodayHonor = 12;
  inline bool has_todayhonor() const;
  inline void clear_todayhonor();
  static const int kTodayHonorFieldNumber = 12;
  inline ::google::protobuf::uint32 todayhonor() const;
  inline void set_todayhonor(::google::protobuf::uint32 value);
  
  // optional uint32 TotalWar = 13;
  inline bool has_totalwar() const;
  inline void clear_totalwar();
  static const int kTotalWarFieldNumber = 13;
  inline ::google::protobuf::uint32 totalwar() const;
  inline void set_totalwar(::google::protobuf::uint32 value);
  
  // optional uint32 TodayWar = 14;
  inline bool has_todaywar() const;
  inline void clear_todaywar();
  static const int kTodayWarFieldNumber = 14;
  inline ::google::protobuf::uint32 todaywar() const;
  inline void set_todaywar(::google::protobuf::uint32 value);
  
  // optional uint32 TodayOther = 15;
  inline bool has_todayother() const;
  inline void clear_todayother();
  static const int kTodayOtherFieldNumber = 15;
  inline ::google::protobuf::uint32 todayother() const;
  inline void set_todayother(::google::protobuf::uint32 value);
  
  // optional uint32 FreeWar = 16;
  inline bool has_freewar() const;
  inline void clear_freewar();
  static const int kFreeWarFieldNumber = 16;
  inline ::google::protobuf::uint32 freewar() const;
  inline void set_freewar(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 17;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 17;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
  // optional uint32 WarKill = 18;
  inline bool has_warkill() const;
  inline void clear_warkill();
  static const int kWarKillFieldNumber = 18;
  inline ::google::protobuf::uint32 warkill() const;
  inline void set_warkill(::google::protobuf::uint32 value);
  
  // optional uint32 ExpHonor = 19;
  inline bool has_exphonor() const;
  inline void clear_exphonor();
  static const int kExpHonorFieldNumber = 19;
  inline ::google::protobuf::uint32 exphonor() const;
  inline void set_exphonor(::google::protobuf::uint32 value);
  
  // optional uint32 ItemHonor = 20;
  inline bool has_itemhonor() const;
  inline void clear_itemhonor();
  static const int kItemHonorFieldNumber = 20;
  inline ::google::protobuf::uint32 itemhonor() const;
  inline void set_itemhonor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 pkmode_;
  ::google::protobuf::uint32 pkvalue_;
  ::google::protobuf::uint32 killnum_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 inhonperday_;
  ::google::protobuf::uint32 outhonperday_;
  ::google::protobuf::RepeatedPtrField< ::PBKillData > kill_;
  ::google::protobuf::uint32 killnumin_;
  ::google::protobuf::uint32 yellowstatus_;
  ::google::protobuf::uint32 prisontime_;
  ::google::protobuf::uint32 totalprisontime_;
  ::google::protobuf::uint32 todayhonor_;
  ::google::protobuf::uint32 totalwar_;
  ::google::protobuf::uint32 todaywar_;
  ::google::protobuf::uint32 todayother_;
  ::google::protobuf::uint32 freewar_;
  ::google::protobuf::uint32 warserial_;
  ::google::protobuf::uint32 warkill_;
  ::google::protobuf::uint32 exphonor_;
  ::google::protobuf::uint32 itemhonor_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerPVPInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerStatisticInfo : public ::google::protobuf::Message {
 public:
  PBPlayerStatisticInfo();
  virtual ~PBPlayerStatisticInfo();
  
  PBPlayerStatisticInfo(const PBPlayerStatisticInfo& from);
  
  inline PBPlayerStatisticInfo& operator=(const PBPlayerStatisticInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerStatisticInfo& default_instance();
  void Swap(PBPlayerStatisticInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerStatisticInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerStatisticInfo& from);
  void MergeFrom(const PBPlayerStatisticInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CompletedTasks = 1;
  inline bool has_completedtasks() const;
  inline void clear_completedtasks();
  static const int kCompletedTasksFieldNumber = 1;
  inline ::google::protobuf::uint32 completedtasks() const;
  inline void set_completedtasks(::google::protobuf::uint32 value);
  
  // optional uint32 OriginReliveTimes = 2;
  inline bool has_originrelivetimes() const;
  inline void clear_originrelivetimes();
  static const int kOriginReliveTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 originrelivetimes() const;
  inline void set_originrelivetimes(::google::protobuf::uint32 value);
  
  // optional uint32 KillSameNationNum = 3;
  inline bool has_killsamenationnum() const;
  inline void clear_killsamenationnum();
  static const int kKillSameNationNumFieldNumber = 3;
  inline ::google::protobuf::uint32 killsamenationnum() const;
  inline void set_killsamenationnum(::google::protobuf::uint32 value);
  
  // optional uint32 KillOgreNum = 4;
  inline bool has_killogrenum() const;
  inline void clear_killogrenum();
  static const int kKillOgreNumFieldNumber = 4;
  inline ::google::protobuf::uint32 killogrenum() const;
  inline void set_killogrenum(::google::protobuf::uint32 value);
  
  // optional uint32 UpFailNum = 5;
  inline bool has_upfailnum() const;
  inline void clear_upfailnum();
  static const int kUpFailNumFieldNumber = 5;
  inline ::google::protobuf::uint32 upfailnum() const;
  inline void set_upfailnum(::google::protobuf::uint32 value);
  
  // optional uint32 TodayKillEnemyIn = 6;
  inline bool has_todaykillenemyin() const;
  inline void clear_todaykillenemyin();
  static const int kTodayKillEnemyInFieldNumber = 6;
  inline ::google::protobuf::uint32 todaykillenemyin() const;
  inline void set_todaykillenemyin(::google::protobuf::uint32 value);
  
  // optional uint32 TodayKillEnemyOut = 7;
  inline bool has_todaykillenemyout() const;
  inline void clear_todaykillenemyout();
  static const int kTodayKillEnemyOutFieldNumber = 7;
  inline ::google::protobuf::uint32 todaykillenemyout() const;
  inline void set_todaykillenemyout(::google::protobuf::uint32 value);
  
  // optional uint32 DieNum = 8;
  inline bool has_dienum() const;
  inline void clear_dienum();
  static const int kDieNumFieldNumber = 8;
  inline ::google::protobuf::uint32 dienum() const;
  inline void set_dienum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 completedtasks_;
  ::google::protobuf::uint32 originrelivetimes_;
  ::google::protobuf::uint32 killsamenationnum_;
  ::google::protobuf::uint32 killogrenum_;
  ::google::protobuf::uint32 upfailnum_;
  ::google::protobuf::uint32 todaykillenemyin_;
  ::google::protobuf::uint32 todaykillenemyout_;
  ::google::protobuf::uint32 dienum_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerStatisticInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerTalentInfo : public ::google::protobuf::Message {
 public:
  PBPlayerTalentInfo();
  virtual ~PBPlayerTalentInfo();
  
  PBPlayerTalentInfo(const PBPlayerTalentInfo& from);
  
  inline PBPlayerTalentInfo& operator=(const PBPlayerTalentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerTalentInfo& default_instance();
  void Swap(PBPlayerTalentInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerTalentInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerTalentInfo& from);
  void MergeFrom(const PBPlayerTalentInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TalentPoint = 1;
  inline bool has_talentpoint() const;
  inline void clear_talentpoint();
  static const int kTalentPointFieldNumber = 1;
  inline ::google::protobuf::uint32 talentpoint() const;
  inline void set_talentpoint(::google::protobuf::uint32 value);
  
  // optional uint32 TalentStep = 2;
  inline bool has_talentstep() const;
  inline void clear_talentstep();
  static const int kTalentStepFieldNumber = 2;
  inline ::google::protobuf::uint32 talentstep() const;
  inline void set_talentstep(::google::protobuf::uint32 value);
  
  // optional uint32 TalentStudy = 3;
  inline bool has_talentstudy() const;
  inline void clear_talentstudy();
  static const int kTalentStudyFieldNumber = 3;
  inline ::google::protobuf::uint32 talentstudy() const;
  inline void set_talentstudy(::google::protobuf::uint32 value);
  
  // optional .PBSkillList TalentSkill = 4;
  inline bool has_talentskill() const;
  inline void clear_talentskill();
  static const int kTalentSkillFieldNumber = 4;
  inline const ::PBSkillList& talentskill() const;
  inline ::PBSkillList* mutable_talentskill();
  
  // optional uint32 TalentExp = 5;
  inline bool has_talentexp() const;
  inline void clear_talentexp();
  static const int kTalentExpFieldNumber = 5;
  inline ::google::protobuf::uint32 talentexp() const;
  inline void set_talentexp(::google::protobuf::uint32 value);
  
  // optional uint32 TalentLevel = 6;
  inline bool has_talentlevel() const;
  inline void clear_talentlevel();
  static const int kTalentLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 talentlevel() const;
  inline void set_talentlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 talentpoint_;
  ::google::protobuf::uint32 talentstep_;
  ::google::protobuf::uint32 talentstudy_;
  ::PBSkillList* talentskill_;
  ::google::protobuf::uint32 talentexp_;
  ::google::protobuf::uint32 talentlevel_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerTalentInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerTitleInfo : public ::google::protobuf::Message {
 public:
  PBPlayerTitleInfo();
  virtual ~PBPlayerTitleInfo();
  
  PBPlayerTitleInfo(const PBPlayerTitleInfo& from);
  
  inline PBPlayerTitleInfo& operator=(const PBPlayerTitleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerTitleInfo& default_instance();
  void Swap(PBPlayerTitleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerTitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerTitleInfo& from);
  void MergeFrom(const PBPlayerTitleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CurrentTitle = 1;
  inline bool has_currenttitle() const;
  inline void clear_currenttitle();
  static const int kCurrentTitleFieldNumber = 1;
  inline ::google::protobuf::uint32 currenttitle() const;
  inline void set_currenttitle(::google::protobuf::uint32 value);
  
  // repeated uint32 TitleList = 2;
  inline int titlelist_size() const;
  inline void clear_titlelist();
  static const int kTitleListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& titlelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_titlelist();
  inline ::google::protobuf::uint32 titlelist(int index) const;
  inline void set_titlelist(int index, ::google::protobuf::uint32 value);
  inline void add_titlelist(::google::protobuf::uint32 value);
  
  // optional .PBSkillList TitleSkill = 3;
  inline bool has_titleskill() const;
  inline void clear_titleskill();
  static const int kTitleSkillFieldNumber = 3;
  inline const ::PBSkillList& titleskill() const;
  inline ::PBSkillList* mutable_titleskill();
  
  // repeated uint32 Time = 4;
  inline int time_size() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& time() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_time();
  inline ::google::protobuf::uint32 time(int index) const;
  inline void set_time(int index, ::google::protobuf::uint32 value);
  inline void add_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 currenttitle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > titlelist_;
  ::PBSkillList* titleskill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > time_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerTitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBActivityStateInf : public ::google::protobuf::Message {
 public:
  PBActivityStateInf();
  virtual ~PBActivityStateInf();
  
  PBActivityStateInf(const PBActivityStateInf& from);
  
  inline PBActivityStateInf& operator=(const PBActivityStateInf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBActivityStateInf& default_instance();
  void Swap(PBActivityStateInf* other);
  
  // implements Message ----------------------------------------------
  
  PBActivityStateInf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBActivityStateInf& from);
  void MergeFrom(const PBActivityStateInf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActivityID = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // optional uint32 CurState = 2;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurStateFieldNumber = 2;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);
  
  // repeated uint32 StateParam = 3;
  inline int stateparam_size() const;
  inline void clear_stateparam();
  static const int kStateParamFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& stateparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_stateparam();
  inline ::google::protobuf::uint32 stateparam(int index) const;
  inline void set_stateparam(int index, ::google::protobuf::uint32 value);
  inline void add_stateparam(::google::protobuf::uint32 value);
  
  // optional uint32 ChgTm = 4;
  inline bool has_chgtm() const;
  inline void clear_chgtm();
  static const int kChgTmFieldNumber = 4;
  inline ::google::protobuf::uint32 chgtm() const;
  inline void set_chgtm(::google::protobuf::uint32 value);
  
  // optional uint32 RealLastedTime = 5;
  inline bool has_reallastedtime() const;
  inline void clear_reallastedtime();
  static const int kRealLastedTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 reallastedtime() const;
  inline void set_reallastedtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::uint32 curstate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stateparam_;
  ::google::protobuf::uint32 chgtm_;
  ::google::protobuf::uint32 reallastedtime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBActivityStateInf* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerActivityInfo : public ::google::protobuf::Message {
 public:
  PBPlayerActivityInfo();
  virtual ~PBPlayerActivityInfo();
  
  PBPlayerActivityInfo(const PBPlayerActivityInfo& from);
  
  inline PBPlayerActivityInfo& operator=(const PBPlayerActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerActivityInfo& default_instance();
  void Swap(PBPlayerActivityInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerActivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerActivityInfo& from);
  void MergeFrom(const PBPlayerActivityInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DiploidTime = 1;
  inline bool has_diploidtime() const;
  inline void clear_diploidtime();
  static const int kDiploidTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 diploidtime() const;
  inline void set_diploidtime(::google::protobuf::uint32 value);
  
  // optional uint32 LastRefreshTimeOfDipLoid = 2;
  inline bool has_lastrefreshtimeofdiploid() const;
  inline void clear_lastrefreshtimeofdiploid();
  static const int kLastRefreshTimeOfDipLoidFieldNumber = 2;
  inline ::google::protobuf::uint32 lastrefreshtimeofdiploid() const;
  inline void set_lastrefreshtimeofdiploid(::google::protobuf::uint32 value);
  
  // repeated uint32 DiploidState = 3;
  inline int diploidstate_size() const;
  inline void clear_diploidstate();
  static const int kDiploidStateFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& diploidstate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_diploidstate();
  inline ::google::protobuf::uint32 diploidstate(int index) const;
  inline void set_diploidstate(int index, ::google::protobuf::uint32 value);
  inline void add_diploidstate(::google::protobuf::uint32 value);
  
  // optional uint32 DailyWelfareSta = 4;
  inline bool has_dailywelfaresta() const;
  inline void clear_dailywelfaresta();
  static const int kDailyWelfareStaFieldNumber = 4;
  inline ::google::protobuf::uint32 dailywelfaresta() const;
  inline void set_dailywelfaresta(::google::protobuf::uint32 value);
  
  // optional uint32 LastDaylyDisposTime = 5;
  inline bool has_lastdaylydispostime() const;
  inline void clear_lastdaylydispostime();
  static const int kLastDaylyDisposTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lastdaylydispostime() const;
  inline void set_lastdaylydispostime(::google::protobuf::uint32 value);
  
  // optional uint32 LastWeeklyDisposTime = 6;
  inline bool has_lastweeklydispostime() const;
  inline void clear_lastweeklydispostime();
  static const int kLastWeeklyDisposTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 lastweeklydispostime() const;
  inline void set_lastweeklydispostime(::google::protobuf::uint32 value);
  
  // optional uint32 LastFamilyApplyTime = 7;
  inline bool has_lastfamilyapplytime() const;
  inline void clear_lastfamilyapplytime();
  static const int kLastFamilyApplyTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lastfamilyapplytime() const;
  inline void set_lastfamilyapplytime(::google::protobuf::uint32 value);
  
  // optional uint32 LastTimeLeaveFamily = 8;
  inline bool has_lasttimeleavefamily() const;
  inline void clear_lasttimeleavefamily();
  static const int kLastTimeLeaveFamilyFieldNumber = 8;
  inline ::google::protobuf::uint32 lasttimeleavefamily() const;
  inline void set_lasttimeleavefamily(::google::protobuf::uint32 value);
  
  // optional uint32 LastJudgeTime = 9;
  inline bool has_lastjudgetime() const;
  inline void clear_lastjudgetime();
  static const int kLastJudgeTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 lastjudgetime() const;
  inline void set_lastjudgetime(::google::protobuf::uint32 value);
  
  // optional uint32 SaveDate = 10;
  inline bool has_savedate() const;
  inline void clear_savedate();
  static const int kSaveDateFieldNumber = 10;
  inline ::google::protobuf::uint32 savedate() const;
  inline void set_savedate(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 11;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 11;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
  // optional uint32 VipTime = 12;
  inline bool has_viptime() const;
  inline void clear_viptime();
  static const int kVipTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 viptime() const;
  inline void set_viptime(::google::protobuf::uint32 value);
  
  // optional .PBAwardRecord AwardRecord = 13;
  inline bool has_awardrecord() const;
  inline void clear_awardrecord();
  static const int kAwardRecordFieldNumber = 13;
  inline const ::PBAwardRecord& awardrecord() const;
  inline ::PBAwardRecord* mutable_awardrecord();
  
  // optional uint32 InvestStatus = 14;
  inline bool has_investstatus() const;
  inline void clear_investstatus();
  static const int kInvestStatusFieldNumber = 14;
  inline ::google::protobuf::uint32 investstatus() const;
  inline void set_investstatus(::google::protobuf::uint32 value);
  
  // optional .PBAwardRecord WeeklyAwardRecord = 15;
  inline bool has_weeklyawardrecord() const;
  inline void clear_weeklyawardrecord();
  static const int kWeeklyAwardRecordFieldNumber = 15;
  inline const ::PBAwardRecord& weeklyawardrecord() const;
  inline ::PBAwardRecord* mutable_weeklyawardrecord();
  
  // repeated .PBActivityStateInf ActivityState = 16;
  inline int activitystate_size() const;
  inline void clear_activitystate();
  static const int kActivityStateFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBActivityStateInf >& activitystate() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBActivityStateInf >* mutable_activitystate();
  inline const ::PBActivityStateInf& activitystate(int index) const;
  inline ::PBActivityStateInf* mutable_activitystate(int index);
  inline ::PBActivityStateInf* add_activitystate();
  
  // optional uint32 HasVoted = 17;
  inline bool has_hasvoted() const;
  inline void clear_hasvoted();
  static const int kHasVotedFieldNumber = 17;
  inline ::google::protobuf::uint32 hasvoted() const;
  inline void set_hasvoted(::google::protobuf::uint32 value);
  
  // optional uint32 SaveTm = 18;
  inline bool has_savetm() const;
  inline void clear_savetm();
  static const int kSaveTmFieldNumber = 18;
  inline ::google::protobuf::uint32 savetm() const;
  inline void set_savetm(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 diploidtime_;
  ::google::protobuf::uint32 lastrefreshtimeofdiploid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > diploidstate_;
  ::google::protobuf::uint32 dailywelfaresta_;
  ::google::protobuf::uint32 lastdaylydispostime_;
  ::google::protobuf::uint32 lastweeklydispostime_;
  ::google::protobuf::uint32 lastfamilyapplytime_;
  ::google::protobuf::uint32 lasttimeleavefamily_;
  ::google::protobuf::uint32 lastjudgetime_;
  ::google::protobuf::uint32 savedate_;
  ::google::protobuf::uint32 vipflag_;
  ::google::protobuf::uint32 viptime_;
  ::PBAwardRecord* awardrecord_;
  ::google::protobuf::uint32 investstatus_;
  ::PBAwardRecord* weeklyawardrecord_;
  ::google::protobuf::RepeatedPtrField< ::PBActivityStateInf > activitystate_;
  ::google::protobuf::uint32 hasvoted_;
  ::google::protobuf::uint32 savetm_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerActivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerClientInfo : public ::google::protobuf::Message {
 public:
  PBPlayerClientInfo();
  virtual ~PBPlayerClientInfo();
  
  PBPlayerClientInfo(const PBPlayerClientInfo& from);
  
  inline PBPlayerClientInfo& operator=(const PBPlayerClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerClientInfo& default_instance();
  void Swap(PBPlayerClientInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerClientInfo& from);
  void MergeFrom(const PBPlayerClientInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBShortcutList Shortcut = 1;
  inline bool has_shortcut() const;
  inline void clear_shortcut();
  static const int kShortcutFieldNumber = 1;
  inline const ::PBShortcutList& shortcut() const;
  inline ::PBShortcutList* mutable_shortcut();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBShortcutList* shortcut_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPlayerClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSpiritTypeInfo : public ::google::protobuf::Message {
 public:
  PBSpiritTypeInfo();
  virtual ~PBSpiritTypeInfo();
  
  PBSpiritTypeInfo(const PBSpiritTypeInfo& from);
  
  inline PBSpiritTypeInfo& operator=(const PBSpiritTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSpiritTypeInfo& default_instance();
  void Swap(PBSpiritTypeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSpiritTypeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSpiritTypeInfo& from);
  void MergeFrom(const PBSpiritTypeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 SlotOpenStatus = 1;
  inline int slotopenstatus_size() const;
  inline void clear_slotopenstatus();
  static const int kSlotOpenStatusFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slotopenstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slotopenstatus();
  inline ::google::protobuf::uint32 slotopenstatus(int index) const;
  inline void set_slotopenstatus(int index, ::google::protobuf::uint32 value);
  inline void add_slotopenstatus(::google::protobuf::uint32 value);
  
  // repeated uint32 CastingItemID = 2;
  inline int castingitemid_size() const;
  inline void clear_castingitemid();
  static const int kCastingItemIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& castingitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_castingitemid();
  inline ::google::protobuf::uint32 castingitemid(int index) const;
  inline void set_castingitemid(int index, ::google::protobuf::uint32 value);
  inline void add_castingitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 BindStatus = 3;
  inline int bindstatus_size() const;
  inline void clear_bindstatus();
  static const int kBindStatusFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bindstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bindstatus();
  inline ::google::protobuf::uint32 bindstatus(int index) const;
  inline void set_bindstatus(int index, ::google::protobuf::uint32 value);
  inline void add_bindstatus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slotopenstatus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > castingitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bindstatus_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSpiritTypeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSpiritPositionInfo : public ::google::protobuf::Message {
 public:
  PBSpiritPositionInfo();
  virtual ~PBSpiritPositionInfo();
  
  PBSpiritPositionInfo(const PBSpiritPositionInfo& from);
  
  inline PBSpiritPositionInfo& operator=(const PBSpiritPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSpiritPositionInfo& default_instance();
  void Swap(PBSpiritPositionInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSpiritPositionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSpiritPositionInfo& from);
  void MergeFrom(const PBSpiritPositionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSpiritTypeInfo SpiritTypeInfo = 1;
  inline int spirittypeinfo_size() const;
  inline void clear_spirittypeinfo();
  static const int kSpiritTypeInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritTypeInfo >& spirittypeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSpiritTypeInfo >* mutable_spirittypeinfo();
  inline const ::PBSpiritTypeInfo& spirittypeinfo(int index) const;
  inline ::PBSpiritTypeInfo* mutable_spirittypeinfo(int index);
  inline ::PBSpiritTypeInfo* add_spirittypeinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSpiritTypeInfo > spirittypeinfo_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSpiritPositionInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSpiritInfo : public ::google::protobuf::Message {
 public:
  PBSpiritInfo();
  virtual ~PBSpiritInfo();
  
  PBSpiritInfo(const PBSpiritInfo& from);
  
  inline PBSpiritInfo& operator=(const PBSpiritInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSpiritInfo& default_instance();
  void Swap(PBSpiritInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSpiritInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSpiritInfo& from);
  void MergeFrom(const PBSpiritInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSpiritPositionInfo PositionInfo = 1;
  inline int positioninfo_size() const;
  inline void clear_positioninfo();
  static const int kPositionInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritPositionInfo >& positioninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSpiritPositionInfo >* mutable_positioninfo();
  inline const ::PBSpiritPositionInfo& positioninfo(int index) const;
  inline ::PBSpiritPositionInfo* mutable_positioninfo(int index);
  inline ::PBSpiritPositionInfo* add_positioninfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSpiritPositionInfo > positioninfo_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSpiritInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBProperty : public ::google::protobuf::Message {
 public:
  PBProperty();
  virtual ~PBProperty();
  
  PBProperty(const PBProperty& from);
  
  inline PBProperty& operator=(const PBProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProperty& default_instance();
  void Swap(PBProperty* other);
  
  // implements Message ----------------------------------------------
  
  PBProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProperty& from);
  void MergeFrom(const PBProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CurHP = 1;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurHPFieldNumber = 1;
  inline ::google::protobuf::uint32 curhp() const;
  inline void set_curhp(::google::protobuf::uint32 value);
  
  // optional uint32 CurMP = 2;
  inline bool has_curmp() const;
  inline void clear_curmp();
  static const int kCurMPFieldNumber = 2;
  inline ::google::protobuf::uint32 curmp() const;
  inline void set_curmp(::google::protobuf::uint32 value);
  
  // optional uint32 CurAP = 3;
  inline bool has_curap() const;
  inline void clear_curap();
  static const int kCurAPFieldNumber = 3;
  inline ::google::protobuf::uint32 curap() const;
  inline void set_curap(::google::protobuf::uint32 value);
  
  // optional .PBPlayerBasicInfo BasicInfo = 4;
  inline bool has_basicinfo() const;
  inline void clear_basicinfo();
  static const int kBasicInfoFieldNumber = 4;
  inline const ::PBPlayerBasicInfo& basicinfo() const;
  inline ::PBPlayerBasicInfo* mutable_basicinfo();
  
  // optional .PBItemBox Baggage = 5;
  inline bool has_baggage() const;
  inline void clear_baggage();
  static const int kBaggageFieldNumber = 5;
  inline const ::PBItemBox& baggage() const;
  inline ::PBItemBox* mutable_baggage();
  
  // optional .PBItemBox TaskBaggage = 6;
  inline bool has_taskbaggage() const;
  inline void clear_taskbaggage();
  static const int kTaskBaggageFieldNumber = 6;
  inline const ::PBItemBox& taskbaggage() const;
  inline ::PBItemBox* mutable_taskbaggage();
  
  // optional .PBItemBox Equipment = 7;
  inline bool has_equipment() const;
  inline void clear_equipment();
  static const int kEquipmentFieldNumber = 7;
  inline const ::PBItemBox& equipment() const;
  inline ::PBItemBox* mutable_equipment();
  
  // optional .PBItemBox Storage = 8;
  inline bool has_storage() const;
  inline void clear_storage();
  static const int kStorageFieldNumber = 8;
  inline const ::PBItemBox& storage() const;
  inline ::PBItemBox* mutable_storage();
  
  // optional .PBSkillList Skill = 9;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 9;
  inline const ::PBSkillList& skill() const;
  inline ::PBSkillList* mutable_skill();
  
  // optional .PBBuffList Buff = 10;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 10;
  inline const ::PBBuffList& buff() const;
  inline ::PBBuffList* mutable_buff();
  
  // optional .PBPlayerCDGroupInfo CDGroup = 11;
  inline bool has_cdgroup() const;
  inline void clear_cdgroup();
  static const int kCDGroupFieldNumber = 11;
  inline const ::PBPlayerCDGroupInfo& cdgroup() const;
  inline ::PBPlayerCDGroupInfo* mutable_cdgroup();
  
  // optional .PBMonsterRecordInfo MonsterRecord = 12;
  inline bool has_monsterrecord() const;
  inline void clear_monsterrecord();
  static const int kMonsterRecordFieldNumber = 12;
  inline const ::PBMonsterRecordInfo& monsterrecord() const;
  inline ::PBMonsterRecordInfo* mutable_monsterrecord();
  
  // optional .PBTelePosInfo TelePos = 13;
  inline bool has_telepos() const;
  inline void clear_telepos();
  static const int kTelePosFieldNumber = 13;
  inline const ::PBTelePosInfo& telepos() const;
  inline ::PBTelePosInfo* mutable_telepos();
  
  // optional .PBPlayerPVPInfo PvPInfo = 14;
  inline bool has_pvpinfo() const;
  inline void clear_pvpinfo();
  static const int kPvPInfoFieldNumber = 14;
  inline const ::PBPlayerPVPInfo& pvpinfo() const;
  inline ::PBPlayerPVPInfo* mutable_pvpinfo();
  
  // optional .PBPlayerTitleInfo TitleInfo = 15;
  inline bool has_titleinfo() const;
  inline void clear_titleinfo();
  static const int kTitleInfoFieldNumber = 15;
  inline const ::PBPlayerTitleInfo& titleinfo() const;
  inline ::PBPlayerTitleInfo* mutable_titleinfo();
  
  // optional .PBPlayerTalentInfo TalentInfo = 16;
  inline bool has_talentinfo() const;
  inline void clear_talentinfo();
  static const int kTalentInfoFieldNumber = 16;
  inline const ::PBPlayerTalentInfo& talentinfo() const;
  inline ::PBPlayerTalentInfo* mutable_talentinfo();
  
  // optional .PBPlayerMWInfo MWInfo = 17;
  inline bool has_mwinfo() const;
  inline void clear_mwinfo();
  static const int kMWInfoFieldNumber = 17;
  inline const ::PBPlayerMWInfo& mwinfo() const;
  inline ::PBPlayerMWInfo* mutable_mwinfo();
  
  // optional .PBLifeSkillBox LifeSkillBox = 18;
  inline bool has_lifeskillbox() const;
  inline void clear_lifeskillbox();
  static const int kLifeSkillBoxFieldNumber = 18;
  inline const ::PBLifeSkillBox& lifeskillbox() const;
  inline ::PBLifeSkillBox* mutable_lifeskillbox();
  
  // optional .PBPlayerStatisticInfo StatisticInfo = 19;
  inline bool has_statisticinfo() const;
  inline void clear_statisticinfo();
  static const int kStatisticInfoFieldNumber = 19;
  inline const ::PBPlayerStatisticInfo& statisticinfo() const;
  inline ::PBPlayerStatisticInfo* mutable_statisticinfo();
  
  // optional .PBPlayerClientInfo ClientInfo = 20;
  inline bool has_clientinfo() const;
  inline void clear_clientinfo();
  static const int kClientInfoFieldNumber = 20;
  inline const ::PBPlayerClientInfo& clientinfo() const;
  inline ::PBPlayerClientInfo* mutable_clientinfo();
  
  // optional .PBWizard Wizard = 21;
  inline bool has_wizard() const;
  inline void clear_wizard();
  static const int kWizardFieldNumber = 21;
  inline const ::PBWizard& wizard() const;
  inline ::PBWizard* mutable_wizard();
  
  // optional .PBPlayerActivityInfo Activity = 22;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 22;
  inline const ::PBPlayerActivityInfo& activity() const;
  inline ::PBPlayerActivityInfo* mutable_activity();
  
  // optional .PBAwardRecord Award = 23;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 23;
  inline const ::PBAwardRecord& award() const;
  inline ::PBAwardRecord* mutable_award();
  
  // optional .PBMatrixInfo Matrix = 24;
  inline bool has_matrix() const;
  inline void clear_matrix();
  static const int kMatrixFieldNumber = 24;
  inline const ::PBMatrixInfo& matrix() const;
  inline ::PBMatrixInfo* mutable_matrix();
  
  // optional .PBExpTimeInfo ExpTimeInfo = 25;
  inline bool has_exptimeinfo() const;
  inline void clear_exptimeinfo();
  static const int kExpTimeInfoFieldNumber = 25;
  inline const ::PBExpTimeInfo& exptimeinfo() const;
  inline ::PBExpTimeInfo* mutable_exptimeinfo();
  
  // optional .PBTreasureBowl TreasureBowl = 26;
  inline bool has_treasurebowl() const;
  inline void clear_treasurebowl();
  static const int kTreasureBowlFieldNumber = 26;
  inline const ::PBTreasureBowl& treasurebowl() const;
  inline ::PBTreasureBowl* mutable_treasurebowl();
  
  // optional .PBSpiritInfo SpiritInfo = 27;
  inline bool has_spiritinfo() const;
  inline void clear_spiritinfo();
  static const int kSpiritInfoFieldNumber = 27;
  inline const ::PBSpiritInfo& spiritinfo() const;
  inline ::PBSpiritInfo* mutable_spiritinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 curhp_;
  ::google::protobuf::uint32 curmp_;
  ::google::protobuf::uint32 curap_;
  ::PBPlayerBasicInfo* basicinfo_;
  ::PBItemBox* baggage_;
  ::PBItemBox* taskbaggage_;
  ::PBItemBox* equipment_;
  ::PBItemBox* storage_;
  ::PBSkillList* skill_;
  ::PBBuffList* buff_;
  ::PBPlayerCDGroupInfo* cdgroup_;
  ::PBMonsterRecordInfo* monsterrecord_;
  ::PBTelePosInfo* telepos_;
  ::PBPlayerPVPInfo* pvpinfo_;
  ::PBPlayerTitleInfo* titleinfo_;
  ::PBPlayerTalentInfo* talentinfo_;
  ::PBPlayerMWInfo* mwinfo_;
  ::PBLifeSkillBox* lifeskillbox_;
  ::PBPlayerStatisticInfo* statisticinfo_;
  ::PBPlayerClientInfo* clientinfo_;
  ::PBWizard* wizard_;
  ::PBPlayerActivityInfo* activity_;
  ::PBAwardRecord* award_;
  ::PBMatrixInfo* matrix_;
  ::PBExpTimeInfo* exptimeinfo_;
  ::PBTreasureBowl* treasurebowl_;
  ::PBSpiritInfo* spiritinfo_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProperty* default_instance_;
};
// -------------------------------------------------------------------

class PBTask : public ::google::protobuf::Message {
 public:
  PBTask();
  virtual ~PBTask();
  
  PBTask(const PBTask& from);
  
  inline PBTask& operator=(const PBTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTask& default_instance();
  void Swap(PBTask* other);
  
  // implements Message ----------------------------------------------
  
  PBTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTask& from);
  void MergeFrom(const PBTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskProgress = 2;
  inline bool has_taskprogress() const;
  inline void clear_taskprogress();
  static const int kTaskProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 taskprogress() const;
  inline void set_taskprogress(::google::protobuf::uint32 value);
  
  // optional int32 GameTimeLeft = 3;
  inline bool has_gametimeleft() const;
  inline void clear_gametimeleft();
  static const int kGameTimeLeftFieldNumber = 3;
  inline ::google::protobuf::int32 gametimeleft() const;
  inline void set_gametimeleft(::google::protobuf::int32 value);
  
  // repeated uint32 TaskData = 4;
  inline int taskdata_size() const;
  inline void clear_taskdata();
  static const int kTaskDataFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& taskdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_taskdata();
  inline ::google::protobuf::uint32 taskdata(int index) const;
  inline void set_taskdata(int index, ::google::protobuf::uint32 value);
  inline void add_taskdata(::google::protobuf::uint32 value);
  
  // repeated uint32 TalkedNpcs = 5;
  inline int talkednpcs_size() const;
  inline void clear_talkednpcs();
  static const int kTalkedNpcsFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& talkednpcs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_talkednpcs();
  inline ::google::protobuf::uint32 talkednpcs(int index) const;
  inline void set_talkednpcs(int index, ::google::protobuf::uint32 value);
  inline void add_talkednpcs(::google::protobuf::uint32 value);
  
  // optional uint32 ExFlags = 6;
  inline bool has_exflags() const;
  inline void clear_exflags();
  static const int kExFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 exflags() const;
  inline void set_exflags(::google::protobuf::uint32 value);
  
  // optional uint32 BeginTime = 7;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskprogress_;
  ::google::protobuf::int32 gametimeleft_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talkednpcs_;
  ::google::protobuf::uint32 exflags_;
  ::google::protobuf::uint32 begintime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTask* default_instance_;
};
// -------------------------------------------------------------------

class PBLoopTaskData : public ::google::protobuf::Message {
 public:
  PBLoopTaskData();
  virtual ~PBLoopTaskData();
  
  PBLoopTaskData(const PBLoopTaskData& from);
  
  inline PBLoopTaskData& operator=(const PBLoopTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLoopTaskData& default_instance();
  void Swap(PBLoopTaskData* other);
  
  // implements Message ----------------------------------------------
  
  PBLoopTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLoopTaskData& from);
  void MergeFrom(const PBLoopTaskData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TodayCompletedCircles = 1;
  inline bool has_todaycompletedcircles() const;
  inline void clear_todaycompletedcircles();
  static const int kTodayCompletedCirclesFieldNumber = 1;
  inline ::google::protobuf::uint32 todaycompletedcircles() const;
  inline void set_todaycompletedcircles(::google::protobuf::uint32 value);
  
  // optional uint64 LastCompletedTime = 2;
  inline bool has_lastcompletedtime() const;
  inline void clear_lastcompletedtime();
  static const int kLastCompletedTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastcompletedtime() const;
  inline void set_lastcompletedtime(::google::protobuf::uint64 value);
  
  // repeated uint32 LoopTasks = 3;
  inline int looptasks_size() const;
  inline void clear_looptasks();
  static const int kLoopTasksFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& looptasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_looptasks();
  inline ::google::protobuf::uint32 looptasks(int index) const;
  inline void set_looptasks(int index, ::google::protobuf::uint32 value);
  inline void add_looptasks(::google::protobuf::uint32 value);
  
  // optional uint32 CompletedTimes = 4;
  inline bool has_completedtimes() const;
  inline void clear_completedtimes();
  static const int kCompletedTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 completedtimes() const;
  inline void set_completedtimes(::google::protobuf::uint32 value);
  
  // optional uint64 LastAbortTime = 5;
  inline bool has_lastaborttime() const;
  inline void clear_lastaborttime();
  static const int kLastAbortTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 lastaborttime() const;
  inline void set_lastaborttime(::google::protobuf::uint64 value);
  
  // optional int32 CurSubIndex = 6;
  inline bool has_cursubindex() const;
  inline void clear_cursubindex();
  static const int kCurSubIndexFieldNumber = 6;
  inline ::google::protobuf::int32 cursubindex() const;
  inline void set_cursubindex(::google::protobuf::int32 value);
  
  // optional uint32 WeekLoops = 7;
  inline bool has_weekloops() const;
  inline void clear_weekloops();
  static const int kWeekLoopsFieldNumber = 7;
  inline ::google::protobuf::uint32 weekloops() const;
  inline void set_weekloops(::google::protobuf::uint32 value);
  
  // optional uint32 DayCompletedLoopFlag = 8;
  inline bool has_daycompletedloopflag() const;
  inline void clear_daycompletedloopflag();
  static const int kDayCompletedLoopFlagFieldNumber = 8;
  inline ::google::protobuf::uint32 daycompletedloopflag() const;
  inline void set_daycompletedloopflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 todaycompletedcircles_;
  ::google::protobuf::uint64 lastcompletedtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > looptasks_;
  ::google::protobuf::uint32 completedtimes_;
  ::google::protobuf::uint64 lastaborttime_;
  ::google::protobuf::int32 cursubindex_;
  ::google::protobuf::uint32 weekloops_;
  ::google::protobuf::uint32 daycompletedloopflag_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLoopTaskData* default_instance_;
};
// -------------------------------------------------------------------

class PBStorageTaskData : public ::google::protobuf::Message {
 public:
  PBStorageTaskData();
  virtual ~PBStorageTaskData();
  
  PBStorageTaskData(const PBStorageTaskData& from);
  
  inline PBStorageTaskData& operator=(const PBStorageTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStorageTaskData& default_instance();
  void Swap(PBStorageTaskData* other);
  
  // implements Message ----------------------------------------------
  
  PBStorageTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStorageTaskData& from);
  void MergeFrom(const PBStorageTaskData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& tasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_tasks();
  inline ::google::protobuf::uint32 tasks(int index) const;
  inline void set_tasks(int index, ::google::protobuf::uint32 value);
  inline void add_tasks(::google::protobuf::uint32 value);
  
  // optional uint32 TaskNum = 2;
  inline bool has_tasknum() const;
  inline void clear_tasknum();
  static const int kTaskNumFieldNumber = 2;
  inline ::google::protobuf::uint32 tasknum() const;
  inline void set_tasknum(::google::protobuf::uint32 value);
  
  // optional uint64 LastClickNpc = 3;
  inline bool has_lastclicknpc() const;
  inline void clear_lastclicknpc();
  static const int kLastClickNpcFieldNumber = 3;
  inline ::google::protobuf::uint64 lastclicknpc() const;
  inline void set_lastclicknpc(::google::protobuf::uint64 value);
  
  // optional uint32 CurTaskID = 4;
  inline bool has_curtaskid() const;
  inline void clear_curtaskid();
  static const int kCurTaskIDFieldNumber = 4;
  inline ::google::protobuf::uint32 curtaskid() const;
  inline void set_curtaskid(::google::protobuf::uint32 value);
  
  // repeated uint32 GotTasks = 5;
  inline int gottasks_size() const;
  inline void clear_gottasks();
  static const int kGotTasksFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& gottasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_gottasks();
  inline ::google::protobuf::uint32 gottasks(int index) const;
  inline void set_gottasks(int index, ::google::protobuf::uint32 value);
  inline void add_gottasks(::google::protobuf::uint32 value);
  
  // optional uint32 GotNum = 6;
  inline bool has_gotnum() const;
  inline void clear_gotnum();
  static const int kGotNumFieldNumber = 6;
  inline ::google::protobuf::uint32 gotnum() const;
  inline void set_gotnum(::google::protobuf::uint32 value);
  
  // optional uint32 TodayCompleted = 7;
  inline bool has_todaycompleted() const;
  inline void clear_todaycompleted();
  static const int kTodayCompletedFieldNumber = 7;
  inline ::google::protobuf::uint32 todaycompleted() const;
  inline void set_todaycompleted(::google::protobuf::uint32 value);
  
  // optional uint32 TodayRMBRefresh = 8;
  inline bool has_todayrmbrefresh() const;
  inline void clear_todayrmbrefresh();
  static const int kTodayRMBRefreshFieldNumber = 8;
  inline ::google::protobuf::uint32 todayrmbrefresh() const;
  inline void set_todayrmbrefresh(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tasks_;
  ::google::protobuf::uint32 tasknum_;
  ::google::protobuf::uint64 lastclicknpc_;
  ::google::protobuf::uint32 curtaskid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gottasks_;
  ::google::protobuf::uint32 gotnum_;
  ::google::protobuf::uint32 todaycompleted_;
  ::google::protobuf::uint32 todayrmbrefresh_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStorageTaskData* default_instance_;
};
// -------------------------------------------------------------------

class TragedyStruct : public ::google::protobuf::Message {
 public:
  TragedyStruct();
  virtual ~TragedyStruct();
  
  TragedyStruct(const TragedyStruct& from);
  
  inline TragedyStruct& operator=(const TragedyStruct& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TragedyStruct& default_instance();
  void Swap(TragedyStruct* other);
  
  // implements Message ----------------------------------------------
  
  TragedyStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TragedyStruct& from);
  void MergeFrom(const TragedyStruct& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TragedyIndex = 1;
  inline bool has_tragedyindex() const;
  inline void clear_tragedyindex();
  static const int kTragedyIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 tragedyindex() const;
  inline void set_tragedyindex(::google::protobuf::uint32 value);
  
  // optional fixed32 NextTragedyTask = 2;
  inline bool has_nexttragedytask() const;
  inline void clear_nexttragedytask();
  static const int kNextTragedyTaskFieldNumber = 2;
  inline ::google::protobuf::uint32 nexttragedytask() const;
  inline void set_nexttragedytask(::google::protobuf::uint32 value);
  
  // optional uint32 TragedyState = 3;
  inline bool has_tragedystate() const;
  inline void clear_tragedystate();
  static const int kTragedyStateFieldNumber = 3;
  inline ::google::protobuf::uint32 tragedystate() const;
  inline void set_tragedystate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tragedyindex_;
  ::google::protobuf::uint32 nexttragedytask_;
  ::google::protobuf::uint32 tragedystate_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TragedyStruct* default_instance_;
};
// -------------------------------------------------------------------

class PBTaskGroupData : public ::google::protobuf::Message {
 public:
  PBTaskGroupData();
  virtual ~PBTaskGroupData();
  
  PBTaskGroupData(const PBTaskGroupData& from);
  
  inline PBTaskGroupData& operator=(const PBTaskGroupData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskGroupData& default_instance();
  void Swap(PBTaskGroupData* other);
  
  // implements Message ----------------------------------------------
  
  PBTaskGroupData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTaskGroupData& from);
  void MergeFrom(const PBTaskGroupData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
  // optional uint32 TodayCompleted = 2;
  inline bool has_todaycompleted() const;
  inline void clear_todaycompleted();
  static const int kTodayCompletedFieldNumber = 2;
  inline ::google::protobuf::uint32 todaycompleted() const;
  inline void set_todaycompleted(::google::protobuf::uint32 value);
  
  // optional uint32 TodayAccepted = 3;
  inline bool has_todayaccepted() const;
  inline void clear_todayaccepted();
  static const int kTodayAcceptedFieldNumber = 3;
  inline ::google::protobuf::uint32 todayaccepted() const;
  inline void set_todayaccepted(::google::protobuf::uint32 value);
  
  // optional uint32 WeekCompleted = 4;
  inline bool has_weekcompleted() const;
  inline void clear_weekcompleted();
  static const int kWeekCompletedFieldNumber = 4;
  inline ::google::protobuf::uint32 weekcompleted() const;
  inline void set_weekcompleted(::google::protobuf::uint32 value);
  
  // optional uint32 WeekAccepted = 5;
  inline bool has_weekaccepted() const;
  inline void clear_weekaccepted();
  static const int kWeekAcceptedFieldNumber = 5;
  inline ::google::protobuf::uint32 weekaccepted() const;
  inline void set_weekaccepted(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 todaycompleted_;
  ::google::protobuf::uint32 todayaccepted_;
  ::google::protobuf::uint32 weekcompleted_;
  ::google::protobuf::uint32 weekaccepted_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTaskGroupData* default_instance_;
};
// -------------------------------------------------------------------

class SingleChairManTask : public ::google::protobuf::Message {
 public:
  SingleChairManTask();
  virtual ~SingleChairManTask();
  
  SingleChairManTask(const SingleChairManTask& from);
  
  inline SingleChairManTask& operator=(const SingleChairManTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleChairManTask& default_instance();
  void Swap(SingleChairManTask* other);
  
  // implements Message ----------------------------------------------
  
  SingleChairManTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleChairManTask& from);
  void MergeFrom(const SingleChairManTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 2;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 2;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskstate_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleChairManTask* default_instance_;
};
// -------------------------------------------------------------------

class SingleCompletedInf : public ::google::protobuf::Message {
 public:
  SingleCompletedInf();
  virtual ~SingleCompletedInf();
  
  SingleCompletedInf(const SingleCompletedInf& from);
  
  inline SingleCompletedInf& operator=(const SingleCompletedInf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleCompletedInf& default_instance();
  void Swap(SingleCompletedInf* other);
  
  // implements Message ----------------------------------------------
  
  SingleCompletedInf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleCompletedInf& from);
  void MergeFrom(const SingleCompletedInf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ChairmanID = 1;
  inline bool has_chairmanid() const;
  inline void clear_chairmanid();
  static const int kChairmanIDFieldNumber = 1;
  inline ::google::protobuf::uint32 chairmanid() const;
  inline void set_chairmanid(::google::protobuf::uint32 value);
  
  // optional uint32 CompletedNum = 2;
  inline bool has_completednum() const;
  inline void clear_completednum();
  static const int kCompletedNumFieldNumber = 2;
  inline ::google::protobuf::uint32 completednum() const;
  inline void set_completednum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 chairmanid_;
  ::google::protobuf::uint32 completednum_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleCompletedInf* default_instance_;
};
// -------------------------------------------------------------------

class PBChairManTaskData : public ::google::protobuf::Message {
 public:
  PBChairManTaskData();
  virtual ~PBChairManTaskData();
  
  PBChairManTaskData(const PBChairManTaskData& from);
  
  inline PBChairManTaskData& operator=(const PBChairManTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBChairManTaskData& default_instance();
  void Swap(PBChairManTaskData* other);
  
  // implements Message ----------------------------------------------
  
  PBChairManTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBChairManTaskData& from);
  void MergeFrom(const PBChairManTaskData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleChairManTask Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >* mutable_tasks();
  inline const ::SingleChairManTask& tasks(int index) const;
  inline ::SingleChairManTask* mutable_tasks(int index);
  inline ::SingleChairManTask* add_tasks();
  
  // optional uint32 ChairManID = 2;
  inline bool has_chairmanid() const;
  inline void clear_chairmanid();
  static const int kChairManIDFieldNumber = 2;
  inline ::google::protobuf::uint32 chairmanid() const;
  inline void set_chairmanid(::google::protobuf::uint32 value);
  
  // optional uint32 CompletedNum = 3;
  inline bool has_completednum() const;
  inline void clear_completednum();
  static const int kCompletedNumFieldNumber = 3;
  inline ::google::protobuf::uint32 completednum() const;
  inline void set_completednum(::google::protobuf::uint32 value);
  
  // optional uint32 AcceptedNum = 4;
  inline bool has_acceptednum() const;
  inline void clear_acceptednum();
  static const int kAcceptedNumFieldNumber = 4;
  inline ::google::protobuf::uint32 acceptednum() const;
  inline void set_acceptednum(::google::protobuf::uint32 value);
  
  // repeated .SingleCompletedInf Completed = 5;
  inline int completed_size() const;
  inline void clear_completed();
  static const int kCompletedFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleCompletedInf >& completed() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleCompletedInf >* mutable_completed();
  inline const ::SingleCompletedInf& completed(int index) const;
  inline ::SingleCompletedInf* mutable_completed(int index);
  inline ::SingleCompletedInf* add_completed();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleChairManTask > tasks_;
  ::google::protobuf::uint32 chairmanid_;
  ::google::protobuf::uint32 completednum_;
  ::google::protobuf::uint32 acceptednum_;
  ::google::protobuf::RepeatedPtrField< ::SingleCompletedInf > completed_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBChairManTaskData* default_instance_;
};
// -------------------------------------------------------------------

class PBRefreshTaskData : public ::google::protobuf::Message {
 public:
  PBRefreshTaskData();
  virtual ~PBRefreshTaskData();
  
  PBRefreshTaskData(const PBRefreshTaskData& from);
  
  inline PBRefreshTaskData& operator=(const PBRefreshTaskData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRefreshTaskData& default_instance();
  void Swap(PBRefreshTaskData* other);
  
  // implements Message ----------------------------------------------
  
  PBRefreshTaskData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRefreshTaskData& from);
  void MergeFrom(const PBRefreshTaskData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskColor = 2;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 2;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
  // optional uint32 ResultFlag = 3;
  inline bool has_resultflag() const;
  inline void clear_resultflag();
  static const int kResultFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 resultflag() const;
  inline void set_resultflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskcolor_;
  ::google::protobuf::uint32 resultflag_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRefreshTaskData* default_instance_;
};
// -------------------------------------------------------------------

class GroupPublishData : public ::google::protobuf::Message {
 public:
  GroupPublishData();
  virtual ~GroupPublishData();
  
  GroupPublishData(const GroupPublishData& from);
  
  inline GroupPublishData& operator=(const GroupPublishData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupPublishData& default_instance();
  void Swap(GroupPublishData* other);
  
  // implements Message ----------------------------------------------
  
  GroupPublishData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupPublishData& from);
  void MergeFrom(const GroupPublishData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 2;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 2;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskstate_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GroupPublishData* default_instance_;
};
// -------------------------------------------------------------------

class PBTaskList : public ::google::protobuf::Message {
 public:
  PBTaskList();
  virtual ~PBTaskList();
  
  PBTaskList(const PBTaskList& from);
  
  inline PBTaskList& operator=(const PBTaskList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskList& default_instance();
  void Swap(PBTaskList* other);
  
  // implements Message ----------------------------------------------
  
  PBTaskList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTaskList& from);
  void MergeFrom(const PBTaskList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskNumber = 1;
  inline bool has_tasknumber() const;
  inline void clear_tasknumber();
  static const int kTaskNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 tasknumber() const;
  inline void set_tasknumber(::google::protobuf::uint32 value);
  
  // repeated .PBTask TaskList = 2;
  inline int tasklist_size() const;
  inline void clear_tasklist();
  static const int kTaskListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTask >& tasklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTask >* mutable_tasklist();
  inline const ::PBTask& tasklist(int index) const;
  inline ::PBTask* mutable_tasklist(int index);
  inline ::PBTask* add_tasklist();
  
  // optional .PBLoopTaskData LoopTaskData = 3;
  inline bool has_looptaskdata() const;
  inline void clear_looptaskdata();
  static const int kLoopTaskDataFieldNumber = 3;
  inline const ::PBLoopTaskData& looptaskdata() const;
  inline ::PBLoopTaskData* mutable_looptaskdata();
  
  // repeated uint32 EventID = 4;
  inline int eventid_size() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& eventid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_eventid();
  inline ::google::protobuf::uint32 eventid(int index) const;
  inline void set_eventid(int index, ::google::protobuf::uint32 value);
  inline void add_eventid(::google::protobuf::uint32 value);
  
  // repeated uint32 EventParam = 5;
  inline int eventparam_size() const;
  inline void clear_eventparam();
  static const int kEventParamFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& eventparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_eventparam();
  inline ::google::protobuf::uint32 eventparam(int index) const;
  inline void set_eventparam(int index, ::google::protobuf::uint32 value);
  inline void add_eventparam(::google::protobuf::uint32 value);
  
  // repeated uint32 EventTick = 6;
  inline int eventtick_size() const;
  inline void clear_eventtick();
  static const int kEventTickFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& eventtick() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_eventtick();
  inline ::google::protobuf::uint32 eventtick(int index) const;
  inline void set_eventtick(int index, ::google::protobuf::uint32 value);
  inline void add_eventtick(::google::protobuf::uint32 value);
  
  // optional .PBStorageTaskData StorageTaskData = 7;
  inline bool has_storagetaskdata() const;
  inline void clear_storagetaskdata();
  static const int kStorageTaskDataFieldNumber = 7;
  inline const ::PBStorageTaskData& storagetaskdata() const;
  inline ::PBStorageTaskData* mutable_storagetaskdata();
  
  // repeated .TragedyStruct TragedyTaskData = 8;
  inline int tragedytaskdata_size() const;
  inline void clear_tragedytaskdata();
  static const int kTragedyTaskDataFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::TragedyStruct >& tragedytaskdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::TragedyStruct >* mutable_tragedytaskdata();
  inline const ::TragedyStruct& tragedytaskdata(int index) const;
  inline ::TragedyStruct* mutable_tragedytaskdata(int index);
  inline ::TragedyStruct* add_tragedytaskdata();
  
  // repeated uint32 CompletedTask = 9;
  inline int completedtask_size() const;
  inline void clear_completedtask();
  static const int kCompletedTaskFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& completedtask() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_completedtask();
  inline ::google::protobuf::uint32 completedtask(int index) const;
  inline void set_completedtask(int index, ::google::protobuf::uint32 value);
  inline void add_completedtask(::google::protobuf::uint32 value);
  
  // repeated uint32 FailedTask = 10;
  inline int failedtask_size() const;
  inline void clear_failedtask();
  static const int kFailedTaskFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& failedtask() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_failedtask();
  inline ::google::protobuf::uint32 failedtask(int index) const;
  inline void set_failedtask(int index, ::google::protobuf::uint32 value);
  inline void add_failedtask(::google::protobuf::uint32 value);
  
  // repeated .PBTaskGroupData TaskGroups = 11;
  inline int taskgroups_size() const;
  inline void clear_taskgroups();
  static const int kTaskGroupsFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTaskGroupData >& taskgroups() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTaskGroupData >* mutable_taskgroups();
  inline const ::PBTaskGroupData& taskgroups(int index) const;
  inline ::PBTaskGroupData* mutable_taskgroups(int index);
  inline ::PBTaskGroupData* add_taskgroups();
  
  // optional uint32 CompletedTragedy = 12;
  inline bool has_completedtragedy() const;
  inline void clear_completedtragedy();
  static const int kCompletedTragedyFieldNumber = 12;
  inline ::google::protobuf::uint32 completedtragedy() const;
  inline void set_completedtragedy(::google::protobuf::uint32 value);
  
  // optional fixed32 LastLogOff = 13;
  inline bool has_lastlogoff() const;
  inline void clear_lastlogoff();
  static const int kLastLogOffFieldNumber = 13;
  inline ::google::protobuf::uint32 lastlogoff() const;
  inline void set_lastlogoff(::google::protobuf::uint32 value);
  
  // optional uint32 RedirectFailTask = 14;
  inline bool has_redirectfailtask() const;
  inline void clear_redirectfailtask();
  static const int kRedirectFailTaskFieldNumber = 14;
  inline ::google::protobuf::uint32 redirectfailtask() const;
  inline void set_redirectfailtask(::google::protobuf::uint32 value);
  
  // optional .PBChairManTaskData ChairManTask = 15;
  inline bool has_chairmantask() const;
  inline void clear_chairmantask();
  static const int kChairManTaskFieldNumber = 15;
  inline const ::PBChairManTaskData& chairmantask() const;
  inline ::PBChairManTaskData* mutable_chairmantask();
  
  // optional uint32 TodayTeamLoopNum = 16;
  inline bool has_todayteamloopnum() const;
  inline void clear_todayteamloopnum();
  static const int kTodayTeamLoopNumFieldNumber = 16;
  inline ::google::protobuf::uint32 todayteamloopnum() const;
  inline void set_todayteamloopnum(::google::protobuf::uint32 value);
  
  // repeated .PBRefreshTaskData RefreshData = 17;
  inline int refreshdata_size() const;
  inline void clear_refreshdata();
  static const int kRefreshDataFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRefreshTaskData >& refreshdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRefreshTaskData >* mutable_refreshdata();
  inline const ::PBRefreshTaskData& refreshdata(int index) const;
  inline ::PBRefreshTaskData* mutable_refreshdata(int index);
  inline ::PBRefreshTaskData* add_refreshdata();
  
  // repeated uint32 RepeateTask = 18;
  inline int repeatetask_size() const;
  inline void clear_repeatetask();
  static const int kRepeateTaskFieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& repeatetask() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_repeatetask();
  inline ::google::protobuf::uint32 repeatetask(int index) const;
  inline void set_repeatetask(int index, ::google::protobuf::uint32 value);
  inline void add_repeatetask(::google::protobuf::uint32 value);
  
  // repeated uint32 EndTime = 19;
  inline int endtime_size() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& endtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_endtime();
  inline ::google::protobuf::uint32 endtime(int index) const;
  inline void set_endtime(int index, ::google::protobuf::uint32 value);
  inline void add_endtime(::google::protobuf::uint32 value);
  
  // repeated .GroupPublishData CorpsPublish = 20;
  inline int corpspublish_size() const;
  inline void clear_corpspublish();
  static const int kCorpsPublishFieldNumber = 20;
  inline const ::google::protobuf::RepeatedPtrField< ::GroupPublishData >& corpspublish() const;
  inline ::google::protobuf::RepeatedPtrField< ::GroupPublishData >* mutable_corpspublish();
  inline const ::GroupPublishData& corpspublish(int index) const;
  inline ::GroupPublishData* mutable_corpspublish(int index);
  inline ::GroupPublishData* add_corpspublish();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tasknumber_;
  ::google::protobuf::RepeatedPtrField< ::PBTask > tasklist_;
  ::PBLoopTaskData* looptaskdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > eventid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > eventparam_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > eventtick_;
  ::PBStorageTaskData* storagetaskdata_;
  ::google::protobuf::RepeatedPtrField< ::TragedyStruct > tragedytaskdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > completedtask_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > failedtask_;
  ::google::protobuf::RepeatedPtrField< ::PBTaskGroupData > taskgroups_;
  ::google::protobuf::uint32 completedtragedy_;
  ::google::protobuf::uint32 lastlogoff_;
  ::google::protobuf::uint32 redirectfailtask_;
  ::PBChairManTaskData* chairmantask_;
  ::google::protobuf::uint32 todayteamloopnum_;
  ::google::protobuf::RepeatedPtrField< ::PBRefreshTaskData > refreshdata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repeatetask_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > endtime_;
  ::google::protobuf::RepeatedPtrField< ::GroupPublishData > corpspublish_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTaskList* default_instance_;
};
// -------------------------------------------------------------------

class PBMapData : public ::google::protobuf::Message {
 public:
  PBMapData();
  virtual ~PBMapData();
  
  PBMapData(const PBMapData& from);
  
  inline PBMapData& operator=(const PBMapData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMapData& default_instance();
  void Swap(PBMapData* other);
  
  // implements Message ----------------------------------------------
  
  PBMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMapData& from);
  void MergeFrom(const PBMapData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Direction = 1;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 1;
  inline ::google::protobuf::uint32 direction() const;
  inline void set_direction(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 3;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 AliveStatus = 4;
  inline bool has_alivestatus() const;
  inline void clear_alivestatus();
  static const int kAliveStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 alivestatus() const;
  inline void set_alivestatus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 direction_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 alivestatus_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMapData* default_instance_;
};
// -------------------------------------------------------------------

class PBFriendGlobalData : public ::google::protobuf::Message {
 public:
  PBFriendGlobalData();
  virtual ~PBFriendGlobalData();
  
  PBFriendGlobalData(const PBFriendGlobalData& from);
  
  inline PBFriendGlobalData& operator=(const PBFriendGlobalData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFriendGlobalData& default_instance();
  void Swap(PBFriendGlobalData* other);
  
  // implements Message ----------------------------------------------
  
  PBFriendGlobalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFriendGlobalData& from);
  void MergeFrom(const PBFriendGlobalData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string GroupNames = 1;
  inline int groupnames_size() const;
  inline void clear_groupnames();
  static const int kGroupNamesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& groupnames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_groupnames();
  inline const ::std::string& groupnames(int index) const;
  inline ::std::string* mutable_groupnames(int index);
  inline void set_groupnames(int index, const ::std::string& value);
  inline void set_groupnames(int index, const char* value);
  inline void set_groupnames(int index, const char* value, size_t size);
  inline ::std::string* add_groupnames();
  inline void add_groupnames(const ::std::string& value);
  inline void add_groupnames(const char* value);
  inline void add_groupnames(const char* value, size_t size);
  
  // optional uint32 IsRefuseAll = 2;
  inline bool has_isrefuseall() const;
  inline void clear_isrefuseall();
  static const int kIsRefuseAllFieldNumber = 2;
  inline ::google::protobuf::uint32 isrefuseall() const;
  inline void set_isrefuseall(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> groupnames_;
  ::google::protobuf::uint32 isrefuseall_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFriendGlobalData* default_instance_;
};
// -------------------------------------------------------------------

class PBFriendData : public ::google::protobuf::Message {
 public:
  PBFriendData();
  virtual ~PBFriendData();
  
  PBFriendData(const PBFriendData& from);
  
  inline PBFriendData& operator=(const PBFriendData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFriendData& default_instance();
  void Swap(PBFriendData* other);
  
  // implements Message ----------------------------------------------
  
  PBFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFriendData& from);
  void MergeFrom(const PBFriendData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 PlayerId = 1;
  inline int playerid_size() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& playerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_playerid();
  inline ::google::protobuf::uint32 playerid(int index) const;
  inline void set_playerid(int index, ::google::protobuf::uint32 value);
  inline void add_playerid(::google::protobuf::uint32 value);
  
  // repeated uint32 GroupID = 2;
  inline int groupid_size() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& groupid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_groupid();
  inline ::google::protobuf::uint32 groupid(int index) const;
  inline void set_groupid(int index, ::google::protobuf::uint32 value);
  inline void add_groupid(::google::protobuf::uint32 value);
  
  // repeated uint32 Rel2Me = 3;
  inline int rel2me_size() const;
  inline void clear_rel2me();
  static const int kRel2MeFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& rel2me() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_rel2me();
  inline ::google::protobuf::uint32 rel2me(int index) const;
  inline void set_rel2me(int index, ::google::protobuf::uint32 value);
  inline void add_rel2me(::google::protobuf::uint32 value);
  
  // optional uint32 BlessTimes = 4;
  inline bool has_blesstimes() const;
  inline void clear_blesstimes();
  static const int kBlessTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 blesstimes() const;
  inline void set_blesstimes(::google::protobuf::uint32 value);
  
  // repeated uint32 IntimacyDegree = 5;
  inline int intimacydegree_size() const;
  inline void clear_intimacydegree();
  static const int kIntimacyDegreeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& intimacydegree() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_intimacydegree();
  inline ::google::protobuf::uint32 intimacydegree(int index) const;
  inline void set_intimacydegree(int index, ::google::protobuf::uint32 value);
  inline void add_intimacydegree(::google::protobuf::uint32 value);
  
  // repeated uint32 LastTimeAllOnline = 6;
  inline int lasttimeallonline_size() const;
  inline void clear_lasttimeallonline();
  static const int kLastTimeAllOnlineFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lasttimeallonline() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lasttimeallonline();
  inline ::google::protobuf::uint32 lasttimeallonline(int index) const;
  inline void set_lasttimeallonline(int index, ::google::protobuf::uint32 value);
  inline void add_lasttimeallonline(::google::protobuf::uint32 value);
  
  // repeated uint32 DailyIntimacy = 7;
  inline int dailyintimacy_size() const;
  inline void clear_dailyintimacy();
  static const int kDailyIntimacyFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& dailyintimacy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_dailyintimacy();
  inline ::google::protobuf::uint32 dailyintimacy(int index) const;
  inline void set_dailyintimacy(int index, ::google::protobuf::uint32 value);
  inline void add_dailyintimacy(::google::protobuf::uint32 value);
  
  // repeated uint32 LastUpdateTime = 8;
  inline int lastupdatetime_size() const;
  inline void clear_lastupdatetime();
  static const int kLastUpdateTimeFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lastupdatetime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lastupdatetime();
  inline ::google::protobuf::uint32 lastupdatetime(int index) const;
  inline void set_lastupdatetime(int index, ::google::protobuf::uint32 value);
  inline void add_lastupdatetime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > groupid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rel2me_;
  ::google::protobuf::uint32 blesstimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > intimacydegree_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lasttimeallonline_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dailyintimacy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lastupdatetime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFriendData* default_instance_;
};
// -------------------------------------------------------------------

class PBEnemyData : public ::google::protobuf::Message {
 public:
  PBEnemyData();
  virtual ~PBEnemyData();
  
  PBEnemyData(const PBEnemyData& from);
  
  inline PBEnemyData& operator=(const PBEnemyData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEnemyData& default_instance();
  void Swap(PBEnemyData* other);
  
  // implements Message ----------------------------------------------
  
  PBEnemyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEnemyData& from);
  void MergeFrom(const PBEnemyData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 PlayerId = 1;
  inline int playerid_size() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& playerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_playerid();
  inline ::google::protobuf::uint32 playerid(int index) const;
  inline void set_playerid(int index, ::google::protobuf::uint32 value);
  inline void add_playerid(::google::protobuf::uint32 value);
  
  // repeated uint32 Killed = 2;
  inline int killed_size() const;
  inline void clear_killed();
  static const int kKilledFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& killed() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_killed();
  inline ::google::protobuf::uint32 killed(int index) const;
  inline void set_killed(int index, ::google::protobuf::uint32 value);
  inline void add_killed(::google::protobuf::uint32 value);
  
  // repeated uint32 BeKilled = 3;
  inline int bekilled_size() const;
  inline void clear_bekilled();
  static const int kBeKilledFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bekilled() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bekilled();
  inline ::google::protobuf::uint32 bekilled(int index) const;
  inline void set_bekilled(int index, ::google::protobuf::uint32 value);
  inline void add_bekilled(::google::protobuf::uint32 value);
  
  // repeated uint32 IsLocked = 4;
  inline int islocked_size() const;
  inline void clear_islocked();
  static const int kIsLockedFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& islocked() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_islocked();
  inline ::google::protobuf::uint32 islocked(int index) const;
  inline void set_islocked(int index, ::google::protobuf::uint32 value);
  inline void add_islocked(::google::protobuf::uint32 value);
  
  // repeated uint32 KillTime = 5;
  inline int killtime_size() const;
  inline void clear_killtime();
  static const int kKillTimeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& killtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_killtime();
  inline ::google::protobuf::uint32 killtime(int index) const;
  inline void set_killtime(int index, ::google::protobuf::uint32 value);
  inline void add_killtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bekilled_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > islocked_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > killtime_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEnemyData* default_instance_;
};
// -------------------------------------------------------------------

class PBFriend : public ::google::protobuf::Message {
 public:
  PBFriend();
  virtual ~PBFriend();
  
  PBFriend(const PBFriend& from);
  
  inline PBFriend& operator=(const PBFriend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFriend& default_instance();
  void Swap(PBFriend* other);
  
  // implements Message ----------------------------------------------
  
  PBFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFriend& from);
  void MergeFrom(const PBFriend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFriendGlobalData Global = 1;
  inline bool has_global() const;
  inline void clear_global();
  static const int kGlobalFieldNumber = 1;
  inline const ::PBFriendGlobalData& global() const;
  inline ::PBFriendGlobalData* mutable_global();
  
  // optional .PBFriendData Friend = 2;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 2;
  inline const ::PBFriendData& friend_() const;
  inline ::PBFriendData* mutable_friend_();
  
  // optional .PBEnemyData Enemy = 3;
  inline bool has_enemy() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 3;
  inline const ::PBEnemyData& enemy() const;
  inline ::PBEnemyData* mutable_enemy();
  
  // repeated uint32 BlackList = 4;
  inline int blacklist_size() const;
  inline void clear_blacklist();
  static const int kBlackListFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& blacklist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_blacklist();
  inline ::google::protobuf::uint32 blacklist(int index) const;
  inline void set_blacklist(int index, ::google::protobuf::uint32 value);
  inline void add_blacklist(::google::protobuf::uint32 value);
  
  // repeated uint32 LatestContact = 5;
  inline int latestcontact_size() const;
  inline void clear_latestcontact();
  static const int kLatestContactFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& latestcontact() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_latestcontact();
  inline ::google::protobuf::uint32 latestcontact(int index) const;
  inline void set_latestcontact(int index, ::google::protobuf::uint32 value);
  inline void add_latestcontact(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBFriendGlobalData* global_;
  ::PBFriendData* friend__;
  ::PBEnemyData* enemy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > blacklist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latestcontact_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFriend* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetionData : public ::google::protobuf::Message {
 public:
  PBRepetionData();
  virtual ~PBRepetionData();
  
  PBRepetionData(const PBRepetionData& from);
  
  inline PBRepetionData& operator=(const PBRepetionData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetionData& default_instance();
  void Swap(PBRepetionData* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetionData& from);
  void MergeFrom(const PBRepetionData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 Data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::uint32 data() const;
  inline void set_data(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 data_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetionData* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetionMap : public ::google::protobuf::Message {
 public:
  PBRepetionMap();
  virtual ~PBRepetionMap();
  
  PBRepetionMap(const PBRepetionMap& from);
  
  inline PBRepetionMap& operator=(const PBRepetionMap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetionMap& default_instance();
  void Swap(PBRepetionMap* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetionMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetionMap& from);
  void MergeFrom(const PBRepetionMap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // repeated .PBRepetionData Data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionData >& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepetionData >* mutable_data();
  inline const ::PBRepetionData& data(int index) const;
  inline ::PBRepetionData* mutable_data(int index);
  inline ::PBRepetionData* add_data();
  
  // optional uint32 WeekCount = 4;
  inline bool has_weekcount() const;
  inline void clear_weekcount();
  static const int kWeekCountFieldNumber = 4;
  inline ::google::protobuf::uint32 weekcount() const;
  inline void set_weekcount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedPtrField< ::PBRepetionData > data_;
  ::google::protobuf::uint32 weekcount_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetionMap* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetionRepe : public ::google::protobuf::Message {
 public:
  PBRepetionRepe();
  virtual ~PBRepetionRepe();
  
  PBRepetionRepe(const PBRepetionRepe& from);
  
  inline PBRepetionRepe& operator=(const PBRepetionRepe& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetionRepe& default_instance();
  void Swap(PBRepetionRepe* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetionRepe* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetionRepe& from);
  void MergeFrom(const PBRepetionRepe& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBRepetionData RepetionData = 1;
  inline int repetiondata_size() const;
  inline void clear_repetiondata();
  static const int kRepetionDataFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionData >& repetiondata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepetionData >* mutable_repetiondata();
  inline const ::PBRepetionData& repetiondata(int index) const;
  inline ::PBRepetionData* mutable_repetiondata(int index);
  inline ::PBRepetionData* add_repetiondata();
  
  // optional uint32 RepeIndex = 2;
  inline bool has_repeindex() const;
  inline void clear_repeindex();
  static const int kRepeIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 repeindex() const;
  inline void set_repeindex(::google::protobuf::uint32 value);
  
  // optional uint32 Count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 WeekCount = 4;
  inline bool has_weekcount() const;
  inline void clear_weekcount();
  static const int kWeekCountFieldNumber = 4;
  inline ::google::protobuf::uint32 weekcount() const;
  inline void set_weekcount(::google::protobuf::uint32 value);
  
  // optional uint32 SignUp = 5;
  inline bool has_signup() const;
  inline void clear_signup();
  static const int kSignUpFieldNumber = 5;
  inline ::google::protobuf::uint32 signup() const;
  inline void set_signup(::google::protobuf::uint32 value);
  
  // optional uint32 IntoTime = 6;
  inline bool has_intotime() const;
  inline void clear_intotime();
  static const int kIntoTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 intotime() const;
  inline void set_intotime(::google::protobuf::uint32 value);
  
  // optional uint32 DieCount = 7;
  inline bool has_diecount() const;
  inline void clear_diecount();
  static const int kDieCountFieldNumber = 7;
  inline ::google::protobuf::uint32 diecount() const;
  inline void set_diecount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBRepetionData > repetiondata_;
  ::google::protobuf::uint32 repeindex_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 weekcount_;
  ::google::protobuf::uint32 signup_;
  ::google::protobuf::uint32 intotime_;
  ::google::protobuf::uint32 diecount_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetionRepe* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetion : public ::google::protobuf::Message {
 public:
  PBRepetion();
  virtual ~PBRepetion();
  
  PBRepetion(const PBRepetion& from);
  
  inline PBRepetion& operator=(const PBRepetion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetion& default_instance();
  void Swap(PBRepetion* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetion& from);
  void MergeFrom(const PBRepetion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BackLineID = 1;
  inline bool has_backlineid() const;
  inline void clear_backlineid();
  static const int kBackLineIDFieldNumber = 1;
  inline ::google::protobuf::uint32 backlineid() const;
  inline void set_backlineid(::google::protobuf::uint32 value);
  
  // optional uint32 BackMapID = 2;
  inline bool has_backmapid() const;
  inline void clear_backmapid();
  static const int kBackMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 backmapid() const;
  inline void set_backmapid(::google::protobuf::uint32 value);
  
  // optional uint32 BackPosX = 3;
  inline bool has_backposx() const;
  inline void clear_backposx();
  static const int kBackPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 backposx() const;
  inline void set_backposx(::google::protobuf::uint32 value);
  
  // optional uint32 BackPosY = 4;
  inline bool has_backposy() const;
  inline void clear_backposy();
  static const int kBackPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 backposy() const;
  inline void set_backposy(::google::protobuf::uint32 value);
  
  // repeated .PBRepetionMap MapInfo = 5;
  inline int mapinfo_size() const;
  inline void clear_mapinfo();
  static const int kMapInfoFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionMap >& mapinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepetionMap >* mutable_mapinfo();
  inline const ::PBRepetionMap& mapinfo(int index) const;
  inline ::PBRepetionMap* mutable_mapinfo(int index);
  inline ::PBRepetionMap* add_mapinfo();
  
  // optional uint64 Key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 CampID = 7;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 7;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // repeated .PBRepetionRepe RepeInfo = 8;
  inline int repeinfo_size() const;
  inline void clear_repeinfo();
  static const int kRepeInfoFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionRepe >& repeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepetionRepe >* mutable_repeinfo();
  inline const ::PBRepetionRepe& repeinfo(int index) const;
  inline ::PBRepetionRepe* mutable_repeinfo(int index);
  inline ::PBRepetionRepe* add_repeinfo();
  
  // optional uint32 InRepetion = 9;
  inline bool has_inrepetion() const;
  inline void clear_inrepetion();
  static const int kInRepetionFieldNumber = 9;
  inline ::google::protobuf::uint32 inrepetion() const;
  inline void set_inrepetion(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionIndex = 10;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 10;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint32 CheckResult = 11;
  inline bool has_checkresult() const;
  inline void clear_checkresult();
  static const int kCheckResultFieldNumber = 11;
  inline ::google::protobuf::uint32 checkresult() const;
  inline void set_checkresult(::google::protobuf::uint32 value);
  
  // optional uint32 AnswerCount = 12;
  inline bool has_answercount() const;
  inline void clear_answercount();
  static const int kAnswerCountFieldNumber = 12;
  inline ::google::protobuf::uint32 answercount() const;
  inline void set_answercount(::google::protobuf::uint32 value);
  
  // optional uint32 GlobalSceneStatus = 13;
  inline bool has_globalscenestatus() const;
  inline void clear_globalscenestatus();
  static const int kGlobalSceneStatusFieldNumber = 13;
  inline ::google::protobuf::uint32 globalscenestatus() const;
  inline void set_globalscenestatus(::google::protobuf::uint32 value);
  
  // optional uint32 GlobalWarOffLineTime = 14;
  inline bool has_globalwarofflinetime() const;
  inline void clear_globalwarofflinetime();
  static const int kGlobalWarOffLineTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 globalwarofflinetime() const;
  inline void set_globalwarofflinetime(::google::protobuf::uint32 value);
  
  // optional uint64 RepetionKey = 15;
  inline bool has_repetionkey() const;
  inline void clear_repetionkey();
  static const int kRepetionKeyFieldNumber = 15;
  inline ::google::protobuf::uint64 repetionkey() const;
  inline void set_repetionkey(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 backlineid_;
  ::google::protobuf::uint32 backmapid_;
  ::google::protobuf::uint32 backposx_;
  ::google::protobuf::uint32 backposy_;
  ::google::protobuf::RepeatedPtrField< ::PBRepetionMap > mapinfo_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::RepeatedPtrField< ::PBRepetionRepe > repeinfo_;
  ::google::protobuf::uint32 inrepetion_;
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint32 checkresult_;
  ::google::protobuf::uint32 answercount_;
  ::google::protobuf::uint32 globalscenestatus_;
  ::google::protobuf::uint32 globalwarofflinetime_;
  ::google::protobuf::uint64 repetionkey_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetion* default_instance_;
};
// -------------------------------------------------------------------

class PBMember : public ::google::protobuf::Message {
 public:
  PBMember();
  virtual ~PBMember();
  
  PBMember(const PBMember& from);
  
  inline PBMember& operator=(const PBMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMember& default_instance();
  void Swap(PBMember* other);
  
  // implements Message ----------------------------------------------
  
  PBMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMember& from);
  void MergeFrom(const PBMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 6;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 6;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 7;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 7;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 9;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 9;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 10;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 10;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 11;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 11;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 HP = 12;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 12;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 MP = 13;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 13;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);
  
  // optional uint32 AP = 14;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kAPFieldNumber = 14;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
  // optional uint32 XPos = 15;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXPosFieldNumber = 15;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // optional uint32 YPos = 16;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYPosFieldNumber = 16;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // optional uint32 CommState = 17;
  inline bool has_commstate() const;
  inline void clear_commstate();
  static const int kCommStateFieldNumber = 17;
  inline ::google::protobuf::uint32 commstate() const;
  inline void set_commstate(::google::protobuf::uint32 value);
  
  // optional .PBBuffList BuffList = 18;
  inline bool has_bufflist() const;
  inline void clear_bufflist();
  static const int kBuffListFieldNumber = 18;
  inline const ::PBBuffList& bufflist() const;
  inline ::PBBuffList* mutable_bufflist();
  
  // optional uint32 RepetionMapIndex = 19;
  inline bool has_repetionmapindex() const;
  inline void clear_repetionmapindex();
  static const int kRepetionMapIndexFieldNumber = 19;
  inline ::google::protobuf::uint32 repetionmapindex() const;
  inline void set_repetionmapindex(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 20;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 20;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 ap_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 commstate_;
  ::PBBuffList* bufflist_;
  ::google::protobuf::uint32 repetionmapindex_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMember* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamMsg : public ::google::protobuf::Message {
 public:
  PBTeamMsg();
  virtual ~PBTeamMsg();
  
  PBTeamMsg(const PBTeamMsg& from);
  
  inline PBTeamMsg& operator=(const PBTeamMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamMsg& default_instance();
  void Swap(PBTeamMsg* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamMsg& from);
  void MergeFrom(const PBTeamMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Metier = 4;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 6;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 7;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional string Content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  
  // optional uint32 Count = 9;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 9;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 RootStyle = 10;
  inline bool has_rootstyle() const;
  inline void clear_rootstyle();
  static const int kRootStyleFieldNumber = 10;
  inline ::google::protobuf::uint32 rootstyle() const;
  inline void set_rootstyle(::google::protobuf::uint32 value);
  
  // optional uint32 SubStyle = 11;
  inline bool has_substyle() const;
  inline void clear_substyle();
  static const int kSubStyleFieldNumber = 11;
  inline ::google::protobuf::uint32 substyle() const;
  inline void set_substyle(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 minlevel_;
  ::std::string* content_;
  static const ::std::string _default_content_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 rootstyle_;
  ::google::protobuf::uint32 substyle_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTeamMsg* default_instance_;
};
// -------------------------------------------------------------------

class PBStallInfo : public ::google::protobuf::Message {
 public:
  PBStallInfo();
  virtual ~PBStallInfo();
  
  PBStallInfo(const PBStallInfo& from);
  
  inline PBStallInfo& operator=(const PBStallInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStallInfo& default_instance();
  void Swap(PBStallInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBStallInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStallInfo& from);
  void MergeFrom(const PBStallInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string StallName = 1;
  inline bool has_stallname() const;
  inline void clear_stallname();
  static const int kStallNameFieldNumber = 1;
  inline const ::std::string& stallname() const;
  inline void set_stallname(const ::std::string& value);
  inline void set_stallname(const char* value);
  inline void set_stallname(const char* value, size_t size);
  inline ::std::string* mutable_stallname();
  
  // optional string AdContent = 2;
  inline bool has_adcontent() const;
  inline void clear_adcontent();
  static const int kAdContentFieldNumber = 2;
  inline const ::std::string& adcontent() const;
  inline void set_adcontent(const ::std::string& value);
  inline void set_adcontent(const char* value);
  inline void set_adcontent(const char* value, size_t size);
  inline ::std::string* mutable_adcontent();
  
  // optional uint32 HasFlag = 3;
  inline bool has_hasflag() const;
  inline void clear_hasflag();
  static const int kHasFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 hasflag() const;
  inline void set_hasflag(::google::protobuf::uint32 value);
  
  // optional int32 StallType = 4;
  inline bool has_stalltype() const;
  inline void clear_stalltype();
  static const int kStallTypeFieldNumber = 4;
  inline ::google::protobuf::int32 stalltype() const;
  inline void set_stalltype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* stallname_;
  static const ::std::string _default_stallname_;
  ::std::string* adcontent_;
  static const ::std::string _default_adcontent_;
  ::google::protobuf::uint32 hasflag_;
  ::google::protobuf::int32 stalltype_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStallInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBLifeSkill : public ::google::protobuf::Message {
 public:
  PBLifeSkill();
  virtual ~PBLifeSkill();
  
  PBLifeSkill(const PBLifeSkill& from);
  
  inline PBLifeSkill& operator=(const PBLifeSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLifeSkill& default_instance();
  void Swap(PBLifeSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBLifeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLifeSkill& from);
  void MergeFrom(const PBLifeSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LifeSkillType = 1;
  inline bool has_lifeskilltype() const;
  inline void clear_lifeskilltype();
  static const int kLifeSkillTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 lifeskilltype() const;
  inline void set_lifeskilltype(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillLevel = 2;
  inline bool has_lifeskilllevel() const;
  inline void clear_lifeskilllevel();
  static const int kLifeSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 lifeskilllevel() const;
  inline void set_lifeskilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 SpecializedDegree = 3;
  inline bool has_specializeddegree() const;
  inline void clear_specializeddegree();
  static const int kSpecializedDegreeFieldNumber = 3;
  inline ::google::protobuf::uint32 specializeddegree() const;
  inline void set_specializeddegree(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillStatus = 4;
  inline bool has_lifeskillstatus() const;
  inline void clear_lifeskillstatus();
  static const int kLifeSkillStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 lifeskillstatus() const;
  inline void set_lifeskillstatus(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillKind = 5;
  inline bool has_lifeskillkind() const;
  inline void clear_lifeskillkind();
  static const int kLifeSkillKindFieldNumber = 5;
  inline ::google::protobuf::uint32 lifeskillkind() const;
  inline void set_lifeskillkind(::google::protobuf::uint32 value);
  
  // repeated uint32 ComposeID = 6;
  inline int composeid_size() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& composeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_composeid();
  inline ::google::protobuf::uint32 composeid(int index) const;
  inline void set_composeid(int index, ::google::protobuf::uint32 value);
  inline void add_composeid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 lifeskilltype_;
  ::google::protobuf::uint32 lifeskilllevel_;
  ::google::protobuf::uint32 specializeddegree_;
  ::google::protobuf::uint32 lifeskillstatus_;
  ::google::protobuf::uint32 lifeskillkind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > composeid_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLifeSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBLifeSkillBox : public ::google::protobuf::Message {
 public:
  PBLifeSkillBox();
  virtual ~PBLifeSkillBox();
  
  PBLifeSkillBox(const PBLifeSkillBox& from);
  
  inline PBLifeSkillBox& operator=(const PBLifeSkillBox& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLifeSkillBox& default_instance();
  void Swap(PBLifeSkillBox* other);
  
  // implements Message ----------------------------------------------
  
  PBLifeSkillBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLifeSkillBox& from);
  void MergeFrom(const PBLifeSkillBox& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBLifeSkill LifeSkill = 1;
  inline int lifeskill_size() const;
  inline void clear_lifeskill();
  static const int kLifeSkillFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLifeSkill >& lifeskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLifeSkill >* mutable_lifeskill();
  inline const ::PBLifeSkill& lifeskill(int index) const;
  inline ::PBLifeSkill* mutable_lifeskill(int index);
  inline ::PBLifeSkill* add_lifeskill();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBLifeSkill > lifeskill_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLifeSkillBox* default_instance_;
};
// -------------------------------------------------------------------

class PBExpTimeInfo : public ::google::protobuf::Message {
 public:
  PBExpTimeInfo();
  virtual ~PBExpTimeInfo();
  
  PBExpTimeInfo(const PBExpTimeInfo& from);
  
  inline PBExpTimeInfo& operator=(const PBExpTimeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBExpTimeInfo& default_instance();
  void Swap(PBExpTimeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBExpTimeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBExpTimeInfo& from);
  void MergeFrom(const PBExpTimeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 OffLineTimeLength = 1;
  inline bool has_offlinetimelength() const;
  inline void clear_offlinetimelength();
  static const int kOffLineTimeLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 offlinetimelength() const;
  inline void set_offlinetimelength(::google::protobuf::uint32 value);
  
  // optional uint32 EffectiveOffTimeLength = 2;
  inline bool has_effectiveofftimelength() const;
  inline void clear_effectiveofftimelength();
  static const int kEffectiveOffTimeLengthFieldNumber = 2;
  inline ::google::protobuf::uint32 effectiveofftimelength() const;
  inline void set_effectiveofftimelength(::google::protobuf::uint32 value);
  
  // optional uint32 LastEffectiveTimeLength = 3;
  inline bool has_lasteffectivetimelength() const;
  inline void clear_lasteffectivetimelength();
  static const int kLastEffectiveTimeLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 lasteffectivetimelength() const;
  inline void set_lasteffectivetimelength(::google::protobuf::uint32 value);
  
  // optional uint32 LastCalculateTime = 4;
  inline bool has_lastcalculatetime() const;
  inline void clear_lastcalculatetime();
  static const int kLastCalculateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 lastcalculatetime() const;
  inline void set_lastcalculatetime(::google::protobuf::uint32 value);
  
  // optional uint32 BlackPillsTime = 5;
  inline bool has_blackpillstime() const;
  inline void clear_blackpillstime();
  static const int kBlackPillsTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 blackpillstime() const;
  inline void set_blackpillstime(::google::protobuf::uint32 value);
  
  // optional uint32 BlackPillID = 6;
  inline bool has_blackpillid() const;
  inline void clear_blackpillid();
  static const int kBlackPillIDFieldNumber = 6;
  inline ::google::protobuf::uint32 blackpillid() const;
  inline void set_blackpillid(::google::protobuf::uint32 value);
  
  // optional uint32 ExpFromOffLine = 7;
  inline bool has_expfromoffline() const;
  inline void clear_expfromoffline();
  static const int kExpFromOffLineFieldNumber = 7;
  inline ::google::protobuf::uint32 expfromoffline() const;
  inline void set_expfromoffline(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 offlinetimelength_;
  ::google::protobuf::uint32 effectiveofftimelength_;
  ::google::protobuf::uint32 lasteffectivetimelength_;
  ::google::protobuf::uint32 lastcalculatetime_;
  ::google::protobuf::uint32 blackpillstime_;
  ::google::protobuf::uint32 blackpillid_;
  ::google::protobuf::uint32 expfromoffline_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBExpTimeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSinglePublishInfo : public ::google::protobuf::Message {
 public:
  PBSinglePublishInfo();
  virtual ~PBSinglePublishInfo();
  
  PBSinglePublishInfo(const PBSinglePublishInfo& from);
  
  inline PBSinglePublishInfo& operator=(const PBSinglePublishInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSinglePublishInfo& default_instance();
  void Swap(PBSinglePublishInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSinglePublishInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSinglePublishInfo& from);
  void MergeFrom(const PBSinglePublishInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PubNum = 1;
  inline bool has_pubnum() const;
  inline void clear_pubnum();
  static const int kPubNumFieldNumber = 1;
  inline ::google::protobuf::uint32 pubnum() const;
  inline void set_pubnum(::google::protobuf::uint32 value);
  
  // optional uint32 RecvAwards = 2;
  inline bool has_recvawards() const;
  inline void clear_recvawards();
  static const int kRecvAwardsFieldNumber = 2;
  inline ::google::protobuf::uint32 recvawards() const;
  inline void set_recvawards(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 pubnum_;
  ::google::protobuf::uint32 recvawards_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSinglePublishInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBTaskPublishInfo : public ::google::protobuf::Message {
 public:
  PBTaskPublishInfo();
  virtual ~PBTaskPublishInfo();
  
  PBTaskPublishInfo(const PBTaskPublishInfo& from);
  
  inline PBTaskPublishInfo& operator=(const PBTaskPublishInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskPublishInfo& default_instance();
  void Swap(PBTaskPublishInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTaskPublishInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTaskPublishInfo& from);
  void MergeFrom(const PBTaskPublishInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSinglePublishInfo SingleData = 1;
  inline int singledata_size() const;
  inline void clear_singledata();
  static const int kSingleDataFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePublishInfo >& singledata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSinglePublishInfo >* mutable_singledata();
  inline const ::PBSinglePublishInfo& singledata(int index) const;
  inline ::PBSinglePublishInfo* mutable_singledata(int index);
  inline ::PBSinglePublishInfo* add_singledata();
  
  // optional uint32 TodayPublishNum = 2;
  inline bool has_todaypublishnum() const;
  inline void clear_todaypublishnum();
  static const int kTodayPublishNumFieldNumber = 2;
  inline ::google::protobuf::uint32 todaypublishnum() const;
  inline void set_todaypublishnum(::google::protobuf::uint32 value);
  
  // optional uint32 OncePublishNum = 3;
  inline bool has_oncepublishnum() const;
  inline void clear_oncepublishnum();
  static const int kOncePublishNumFieldNumber = 3;
  inline ::google::protobuf::uint32 oncepublishnum() const;
  inline void set_oncepublishnum(::google::protobuf::uint32 value);
  
  // optional uint32 TotalFinishNum = 4;
  inline bool has_totalfinishnum() const;
  inline void clear_totalfinishnum();
  static const int kTotalFinishNumFieldNumber = 4;
  inline ::google::protobuf::uint32 totalfinishnum() const;
  inline void set_totalfinishnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSinglePublishInfo > singledata_;
  ::google::protobuf::uint32 todaypublishnum_;
  ::google::protobuf::uint32 oncepublishnum_;
  ::google::protobuf::uint32 totalfinishnum_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTaskPublishInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInfo : public ::google::protobuf::Message {
 public:
  CMessagePlayerInfo();
  virtual ~CMessagePlayerInfo();
  
  CMessagePlayerInfo(const CMessagePlayerInfo& from);
  
  inline CMessagePlayerInfo& operator=(const CMessagePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInfo& default_instance();
  void Swap(CMessagePlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInfo& from);
  void MergeFrom(const CMessagePlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional string role_name = 3;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 3;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional uint32 gender_id = 4;
  inline bool has_gender_id() const;
  inline void clear_gender_id();
  static const int kGenderIdFieldNumber = 4;
  inline ::google::protobuf::uint32 gender_id() const;
  inline void set_gender_id(::google::protobuf::uint32 value);
  
  // optional uint32 metier_id = 5;
  inline bool has_metier_id() const;
  inline void clear_metier_id();
  static const int kMetierIdFieldNumber = 5;
  inline ::google::protobuf::uint32 metier_id() const;
  inline void set_metier_id(::google::protobuf::uint32 value);
  
  // optional uint32 nationality_id = 6;
  inline bool has_nationality_id() const;
  inline void clear_nationality_id();
  static const int kNationalityIdFieldNumber = 6;
  inline ::google::protobuf::uint32 nationality_id() const;
  inline void set_nationality_id(::google::protobuf::uint32 value);
  
  // optional uint32 face_type = 7;
  inline bool has_face_type() const;
  inline void clear_face_type();
  static const int kFaceTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 face_type() const;
  inline void set_face_type(::google::protobuf::uint32 value);
  
  // optional uint32 line_id = 8;
  inline bool has_line_id() const;
  inline void clear_line_id();
  static const int kLineIdFieldNumber = 8;
  inline ::google::protobuf::uint32 line_id() const;
  inline void set_line_id(::google::protobuf::uint32 value);
  
  // optional uint32 map_id = 9;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 9;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // optional uint32 role_level = 10;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 role_level() const;
  inline void set_role_level(::google::protobuf::uint32 value);
  
  // optional uint64 role_expr = 11;
  inline bool has_role_expr() const;
  inline void clear_role_expr();
  static const int kRoleExprFieldNumber = 11;
  inline ::google::protobuf::uint64 role_expr() const;
  inline void set_role_expr(::google::protobuf::uint64 value);
  
  // optional uint32 role_money = 12;
  inline bool has_role_money() const;
  inline void clear_role_money();
  static const int kRoleMoneyFieldNumber = 12;
  inline ::google::protobuf::uint32 role_money() const;
  inline void set_role_money(::google::protobuf::uint32 value);
  
  // optional int32 pos_x = 13;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 13;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);
  
  // optional int32 pos_y = 14;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 14;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);
  
  // optional uint32 is_alive = 15;
  inline bool has_is_alive() const;
  inline void clear_is_alive();
  static const int kIsAliveFieldNumber = 15;
  inline ::google::protobuf::uint32 is_alive() const;
  inline void set_is_alive(::google::protobuf::uint32 value);
  
  // optional uint32 login_time = 16;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 16;
  inline ::google::protobuf::uint32 login_time() const;
  inline void set_login_time(::google::protobuf::uint32 value);
  
  // optional uint32 online_duration = 17;
  inline bool has_online_duration() const;
  inline void clear_online_duration();
  static const int kOnlineDurationFieldNumber = 17;
  inline ::google::protobuf::uint32 online_duration() const;
  inline void set_online_duration(::google::protobuf::uint32 value);
  
  // optional uint32 save_status = 18;
  inline bool has_save_status() const;
  inline void clear_save_status();
  static const int kSaveStatusFieldNumber = 18;
  inline ::google::protobuf::uint32 save_status() const;
  inline void set_save_status(::google::protobuf::uint32 value);
  
  // optional uint32 save_bitflag = 19;
  inline bool has_save_bitflag() const;
  inline void clear_save_bitflag();
  static const int kSaveBitflagFieldNumber = 19;
  inline ::google::protobuf::uint32 save_bitflag() const;
  inline void set_save_bitflag(::google::protobuf::uint32 value);
  
  // optional uint32 bounded_money = 20;
  inline bool has_bounded_money() const;
  inline void clear_bounded_money();
  static const int kBoundedMoneyFieldNumber = 20;
  inline ::google::protobuf::uint32 bounded_money() const;
  inline void set_bounded_money(::google::protobuf::uint32 value);
  
  // optional uint32 check_sum = 21;
  inline bool has_check_sum() const;
  inline void clear_check_sum();
  static const int kCheckSumFieldNumber = 21;
  inline ::google::protobuf::uint32 check_sum() const;
  inline void set_check_sum(::google::protobuf::uint32 value);
  
  // optional uint32 silver_yb = 22;
  inline bool has_silver_yb() const;
  inline void clear_silver_yb();
  static const int kSilverYbFieldNumber = 22;
  inline ::google::protobuf::uint32 silver_yb() const;
  inline void set_silver_yb(::google::protobuf::uint32 value);
  
  // optional uint32 storage_money = 23;
  inline bool has_storage_money() const;
  inline void clear_storage_money();
  static const int kStorageMoneyFieldNumber = 23;
  inline ::google::protobuf::uint32 storage_money() const;
  inline void set_storage_money(::google::protobuf::uint32 value);
  
  // optional uint32 storage_bounded_money = 24;
  inline bool has_storage_bounded_money() const;
  inline void clear_storage_bounded_money();
  static const int kStorageBoundedMoneyFieldNumber = 24;
  inline ::google::protobuf::uint32 storage_bounded_money() const;
  inline void set_storage_bounded_money(::google::protobuf::uint32 value);
  
  // optional uint32 role_status_param = 25;
  inline bool has_role_status_param() const;
  inline void clear_role_status_param();
  static const int kRoleStatusParamFieldNumber = 25;
  inline ::google::protobuf::uint32 role_status_param() const;
  inline void set_role_status_param(::google::protobuf::uint32 value);
  
  // optional int32 country_id = 26;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 26;
  inline ::google::protobuf::int32 country_id() const;
  inline void set_country_id(::google::protobuf::int32 value);
  
  // optional uint32 role_familyid = 27;
  inline bool has_role_familyid() const;
  inline void clear_role_familyid();
  static const int kRoleFamilyidFieldNumber = 27;
  inline ::google::protobuf::uint32 role_familyid() const;
  inline void set_role_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 role_corpsid = 28;
  inline bool has_role_corpsid() const;
  inline void clear_role_corpsid();
  static const int kRoleCorpsidFieldNumber = 28;
  inline ::google::protobuf::uint32 role_corpsid() const;
  inline void set_role_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 charged_silver_yb = 29;
  inline bool has_charged_silver_yb() const;
  inline void clear_charged_silver_yb();
  static const int kChargedSilverYbFieldNumber = 29;
  inline ::google::protobuf::uint32 charged_silver_yb() const;
  inline void set_charged_silver_yb(::google::protobuf::uint32 value);
  
  // optional uint32 consumed_silver_yb = 30;
  inline bool has_consumed_silver_yb() const;
  inline void clear_consumed_silver_yb();
  static const int kConsumedSilverYbFieldNumber = 30;
  inline ::google::protobuf::uint32 consumed_silver_yb() const;
  inline void set_consumed_silver_yb(::google::protobuf::uint32 value);
  
  // optional uint32 role_protecttime = 31;
  inline bool has_role_protecttime() const;
  inline void clear_role_protecttime();
  static const int kRoleProtecttimeFieldNumber = 31;
  inline ::google::protobuf::uint32 role_protecttime() const;
  inline void set_role_protecttime(::google::protobuf::uint32 value);
  
  // optional string role_password = 32;
  inline bool has_role_password() const;
  inline void clear_role_password();
  static const int kRolePasswordFieldNumber = 32;
  inline const ::std::string& role_password() const;
  inline void set_role_password(const ::std::string& value);
  inline void set_role_password(const char* value);
  inline void set_role_password(const char* value, size_t size);
  inline ::std::string* mutable_role_password();
  
  // optional uint32 role_vip_flag = 33;
  inline bool has_role_vip_flag() const;
  inline void clear_role_vip_flag();
  static const int kRoleVipFlagFieldNumber = 33;
  inline ::google::protobuf::uint32 role_vip_flag() const;
  inline void set_role_vip_flag(::google::protobuf::uint32 value);
  
  // optional uint32 role_vip_time = 34;
  inline bool has_role_vip_time() const;
  inline void clear_role_vip_time();
  static const int kRoleVipTimeFieldNumber = 34;
  inline ::google::protobuf::uint32 role_vip_time() const;
  inline void set_role_vip_time(::google::protobuf::uint32 value);
  
  // optional uint32 role_marriageid = 35;
  inline bool has_role_marriageid() const;
  inline void clear_role_marriageid();
  static const int kRoleMarriageidFieldNumber = 35;
  inline ::google::protobuf::uint32 role_marriageid() const;
  inline void set_role_marriageid(::google::protobuf::uint32 value);
  
  // optional uint32 role_changecamp_time = 36;
  inline bool has_role_changecamp_time() const;
  inline void clear_role_changecamp_time();
  static const int kRoleChangecampTimeFieldNumber = 36;
  inline ::google::protobuf::uint32 role_changecamp_time() const;
  inline void set_role_changecamp_time(::google::protobuf::uint32 value);
  
  // optional uint32 role_status = 37;
  inline bool has_role_status() const;
  inline void clear_role_status();
  static const int kRoleStatusFieldNumber = 37;
  inline ::google::protobuf::uint32 role_status() const;
  inline void set_role_status(::google::protobuf::uint32 value);
  
  // optional uint32 role_swornid = 38;
  inline bool has_role_swornid() const;
  inline void clear_role_swornid();
  static const int kRoleSwornidFieldNumber = 38;
  inline ::google::protobuf::uint32 role_swornid() const;
  inline void set_role_swornid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 account_id_;
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::google::protobuf::uint32 gender_id_;
  ::google::protobuf::uint32 metier_id_;
  ::google::protobuf::uint32 nationality_id_;
  ::google::protobuf::uint32 face_type_;
  ::google::protobuf::uint32 line_id_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 role_level_;
  ::google::protobuf::uint64 role_expr_;
  ::google::protobuf::uint32 role_money_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::uint32 is_alive_;
  ::google::protobuf::uint32 login_time_;
  ::google::protobuf::uint32 online_duration_;
  ::google::protobuf::uint32 save_status_;
  ::google::protobuf::uint32 save_bitflag_;
  ::google::protobuf::uint32 bounded_money_;
  ::google::protobuf::uint32 check_sum_;
  ::google::protobuf::uint32 silver_yb_;
  ::google::protobuf::uint32 storage_money_;
  ::google::protobuf::uint32 storage_bounded_money_;
  ::google::protobuf::uint32 role_status_param_;
  ::google::protobuf::int32 country_id_;
  ::google::protobuf::uint32 role_familyid_;
  ::google::protobuf::uint32 role_corpsid_;
  ::google::protobuf::uint32 charged_silver_yb_;
  ::google::protobuf::uint32 consumed_silver_yb_;
  ::google::protobuf::uint32 role_protecttime_;
  ::std::string* role_password_;
  static const ::std::string _default_role_password_;
  ::google::protobuf::uint32 role_vip_flag_;
  ::google::protobuf::uint32 role_vip_time_;
  ::google::protobuf::uint32 role_marriageid_;
  ::google::protobuf::uint32 role_changecamp_time_;
  ::google::protobuf::uint32 role_status_;
  ::google::protobuf::uint32 role_swornid_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBAwardRecord : public ::google::protobuf::Message {
 public:
  PBAwardRecord();
  virtual ~PBAwardRecord();
  
  PBAwardRecord(const PBAwardRecord& from);
  
  inline PBAwardRecord& operator=(const PBAwardRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAwardRecord& default_instance();
  void Swap(PBAwardRecord* other);
  
  // implements Message ----------------------------------------------
  
  PBAwardRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAwardRecord& from);
  void MergeFrom(const PBAwardRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 AwardID = 1;
  inline int awardid_size() const;
  inline void clear_awardid();
  static const int kAwardIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& awardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_awardid();
  inline ::google::protobuf::uint32 awardid(int index) const;
  inline void set_awardid(int index, ::google::protobuf::uint32 value);
  inline void add_awardid(::google::protobuf::uint32 value);
  
  // repeated uint32 Times = 2;
  inline int times_size() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_times();
  inline ::google::protobuf::uint32 times(int index) const;
  inline void set_times(int index, ::google::protobuf::uint32 value);
  inline void add_times(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > times_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAwardRecord* default_instance_;
};
// -------------------------------------------------------------------

class PBMatrixInfo : public ::google::protobuf::Message {
 public:
  PBMatrixInfo();
  virtual ~PBMatrixInfo();
  
  PBMatrixInfo(const PBMatrixInfo& from);
  
  inline PBMatrixInfo& operator=(const PBMatrixInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMatrixInfo& default_instance();
  void Swap(PBMatrixInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBMatrixInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMatrixInfo& from);
  void MergeFrom(const PBMatrixInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 MasterID = 1;
  inline int masterid_size() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masterid();
  inline ::google::protobuf::uint32 masterid(int index) const;
  inline void set_masterid(int index, ::google::protobuf::uint32 value);
  inline void add_masterid(::google::protobuf::uint32 value);
  
  // repeated uint32 SlaveID = 2;
  inline int slaveid_size() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slaveid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slaveid();
  inline ::google::protobuf::uint32 slaveid(int index) const;
  inline void set_slaveid(int index, ::google::protobuf::uint32 value);
  inline void add_slaveid(::google::protobuf::uint32 value);
  
  // repeated uint32 SlaveValue = 3;
  inline int slavevalue_size() const;
  inline void clear_slavevalue();
  static const int kSlaveValueFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slavevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slavevalue();
  inline ::google::protobuf::uint32 slavevalue(int index) const;
  inline void set_slavevalue(int index, ::google::protobuf::uint32 value);
  inline void add_slavevalue(::google::protobuf::uint32 value);
  
  // optional uint32 SlavePoint = 4;
  inline bool has_slavepoint() const;
  inline void clear_slavepoint();
  static const int kSlavePointFieldNumber = 4;
  inline ::google::protobuf::uint32 slavepoint() const;
  inline void set_slavepoint(::google::protobuf::uint32 value);
  
  // optional uint32 MasterPoint = 5;
  inline bool has_masterpoint() const;
  inline void clear_masterpoint();
  static const int kMasterPointFieldNumber = 5;
  inline ::google::protobuf::uint32 masterpoint() const;
  inline void set_masterpoint(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveTotal = 6;
  inline bool has_slavetotal() const;
  inline void clear_slavetotal();
  static const int kSlaveTotalFieldNumber = 6;
  inline ::google::protobuf::uint32 slavetotal() const;
  inline void set_slavetotal(::google::protobuf::uint32 value);
  
  // optional uint32 MasterTotal = 7;
  inline bool has_mastertotal() const;
  inline void clear_mastertotal();
  static const int kMasterTotalFieldNumber = 7;
  inline ::google::protobuf::uint32 mastertotal() const;
  inline void set_mastertotal(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterPercent = 8;
  inline int masterpercent_size() const;
  inline void clear_masterpercent();
  static const int kMasterPercentFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masterpercent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masterpercent();
  inline ::google::protobuf::uint32 masterpercent(int index) const;
  inline void set_masterpercent(int index, ::google::protobuf::uint32 value);
  inline void add_masterpercent(::google::protobuf::uint32 value);
  
  // optional uint32 MasterTimes = 9;
  inline bool has_mastertimes() const;
  inline void clear_mastertimes();
  static const int kMasterTimesFieldNumber = 9;
  inline ::google::protobuf::uint32 mastertimes() const;
  inline void set_mastertimes(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveNum = 10;
  inline bool has_slavenum() const;
  inline void clear_slavenum();
  static const int kSlaveNumFieldNumber = 10;
  inline ::google::protobuf::uint32 slavenum() const;
  inline void set_slavenum(::google::protobuf::uint32 value);
  
  // optional uint32 MasterGive = 11;
  inline bool has_mastergive() const;
  inline void clear_mastergive();
  static const int kMasterGiveFieldNumber = 11;
  inline ::google::protobuf::uint32 mastergive() const;
  inline void set_mastergive(::google::protobuf::uint32 value);
  
  // optional uint32 BeginnerNum = 12;
  inline bool has_beginnernum() const;
  inline void clear_beginnernum();
  static const int kBeginnerNumFieldNumber = 12;
  inline ::google::protobuf::uint32 beginnernum() const;
  inline void set_beginnernum(::google::protobuf::uint32 value);
  
  // optional uint32 FormalNum = 13;
  inline bool has_formalnum() const;
  inline void clear_formalnum();
  static const int kFormalNumFieldNumber = 13;
  inline ::google::protobuf::uint32 formalnum() const;
  inline void set_formalnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masterid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slaveid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slavevalue_;
  ::google::protobuf::uint32 slavepoint_;
  ::google::protobuf::uint32 masterpoint_;
  ::google::protobuf::uint32 slavetotal_;
  ::google::protobuf::uint32 mastertotal_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masterpercent_;
  ::google::protobuf::uint32 mastertimes_;
  ::google::protobuf::uint32 slavenum_;
  ::google::protobuf::uint32 mastergive_;
  ::google::protobuf::uint32 beginnernum_;
  ::google::protobuf::uint32 formalnum_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMatrixInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBCharm : public ::google::protobuf::Message {
 public:
  PBCharm();
  virtual ~PBCharm();
  
  PBCharm(const PBCharm& from);
  
  inline PBCharm& operator=(const PBCharm& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCharm& default_instance();
  void Swap(PBCharm* other);
  
  // implements Message ----------------------------------------------
  
  PBCharm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCharm& from);
  void MergeFrom(const PBCharm& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharmValue = 1;
  inline bool has_charmvalue() const;
  inline void clear_charmvalue();
  static const int kCharmValueFieldNumber = 1;
  inline ::google::protobuf::uint32 charmvalue() const;
  inline void set_charmvalue(::google::protobuf::uint32 value);
  
  // optional uint32 WeekIncCharm = 2;
  inline bool has_weekinccharm() const;
  inline void clear_weekinccharm();
  static const int kWeekIncCharmFieldNumber = 2;
  inline ::google::protobuf::uint32 weekinccharm() const;
  inline void set_weekinccharm(::google::protobuf::uint32 value);
  
  // optional uint32 LastWeekIncCharm = 3;
  inline bool has_lastweekinccharm() const;
  inline void clear_lastweekinccharm();
  static const int kLastWeekIncCharmFieldNumber = 3;
  inline ::google::protobuf::uint32 lastweekinccharm() const;
  inline void set_lastweekinccharm(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charmvalue_;
  ::google::protobuf::uint32 weekinccharm_;
  ::google::protobuf::uint32 lastweekinccharm_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCharm* default_instance_;
};
// -------------------------------------------------------------------

class PBGuideData : public ::google::protobuf::Message {
 public:
  PBGuideData();
  virtual ~PBGuideData();
  
  PBGuideData(const PBGuideData& from);
  
  inline PBGuideData& operator=(const PBGuideData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGuideData& default_instance();
  void Swap(PBGuideData* other);
  
  // implements Message ----------------------------------------------
  
  PBGuideData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGuideData& from);
  void MergeFrom(const PBGuideData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LevelBak = 1;
  inline bool has_levelbak() const;
  inline void clear_levelbak();
  static const int kLevelBakFieldNumber = 1;
  inline ::google::protobuf::uint32 levelbak() const;
  inline void set_levelbak(::google::protobuf::uint32 value);
  
  // optional uint32 ExpBak = 2;
  inline bool has_expbak() const;
  inline void clear_expbak();
  static const int kExpBakFieldNumber = 2;
  inline ::google::protobuf::uint32 expbak() const;
  inline void set_expbak(::google::protobuf::uint32 value);
  
  // optional uint32 HonorBak = 3;
  inline bool has_honorbak() const;
  inline void clear_honorbak();
  static const int kHonorBakFieldNumber = 3;
  inline ::google::protobuf::uint32 honorbak() const;
  inline void set_honorbak(::google::protobuf::uint32 value);
  
  // optional uint32 AchiveBak = 4;
  inline bool has_achivebak() const;
  inline void clear_achivebak();
  static const int kAchiveBakFieldNumber = 4;
  inline ::google::protobuf::uint32 achivebak() const;
  inline void set_achivebak(::google::protobuf::uint32 value);
  
  // optional uint32 KillBak = 5;
  inline bool has_killbak() const;
  inline void clear_killbak();
  static const int kKillBakFieldNumber = 5;
  inline ::google::protobuf::uint32 killbak() const;
  inline void set_killbak(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 levelbak_;
  ::google::protobuf::uint32 expbak_;
  ::google::protobuf::uint32 honorbak_;
  ::google::protobuf::uint32 achivebak_;
  ::google::protobuf::uint32 killbak_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBGuideData* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleTimes : public ::google::protobuf::Message {
 public:
  PBSingleTimes();
  virtual ~PBSingleTimes();
  
  PBSingleTimes(const PBSingleTimes& from);
  
  inline PBSingleTimes& operator=(const PBSingleTimes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleTimes& default_instance();
  void Swap(PBSingleTimes* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleTimes& from);
  void MergeFrom(const PBSingleTimes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleTimes* default_instance_;
};
// -------------------------------------------------------------------

class PBTimes : public ::google::protobuf::Message {
 public:
  PBTimes();
  virtual ~PBTimes();
  
  PBTimes(const PBTimes& from);
  
  inline PBTimes& operator=(const PBTimes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTimes& default_instance();
  void Swap(PBTimes* other);
  
  // implements Message ----------------------------------------------
  
  PBTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTimes& from);
  void MergeFrom(const PBTimes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSingleTimes timesinfo = 1;
  inline int timesinfo_size() const;
  inline void clear_timesinfo();
  static const int kTimesinfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleTimes >& timesinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleTimes >* mutable_timesinfo();
  inline const ::PBSingleTimes& timesinfo(int index) const;
  inline ::PBSingleTimes* mutable_timesinfo(int index);
  inline ::PBSingleTimes* add_timesinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSingleTimes > timesinfo_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTimes* default_instance_;
};
// -------------------------------------------------------------------

class PBTreasureBowlItem : public ::google::protobuf::Message {
 public:
  PBTreasureBowlItem();
  virtual ~PBTreasureBowlItem();
  
  PBTreasureBowlItem(const PBTreasureBowlItem& from);
  
  inline PBTreasureBowlItem& operator=(const PBTreasureBowlItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTreasureBowlItem& default_instance();
  void Swap(PBTreasureBowlItem* other);
  
  // implements Message ----------------------------------------------
  
  PBTreasureBowlItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTreasureBowlItem& from);
  void MergeFrom(const PBTreasureBowlItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 UsedTimes = 2;
  inline bool has_usedtimes() const;
  inline void clear_usedtimes();
  static const int kUsedTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 usedtimes() const;
  inline void set_usedtimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 usedtimes_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTreasureBowlItem* default_instance_;
};
// -------------------------------------------------------------------

class PBTreasureBowl : public ::google::protobuf::Message {
 public:
  PBTreasureBowl();
  virtual ~PBTreasureBowl();
  
  PBTreasureBowl(const PBTreasureBowl& from);
  
  inline PBTreasureBowl& operator=(const PBTreasureBowl& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTreasureBowl& default_instance();
  void Swap(PBTreasureBowl* other);
  
  // implements Message ----------------------------------------------
  
  PBTreasureBowl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTreasureBowl& from);
  void MergeFrom(const PBTreasureBowl& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TotalNum = 1;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalNumFieldNumber = 1;
  inline ::google::protobuf::uint32 totalnum() const;
  inline void set_totalnum(::google::protobuf::uint32 value);
  
  // optional uint32 ExchangeTime = 2;
  inline bool has_exchangetime() const;
  inline void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 exchangetime() const;
  inline void set_exchangetime(::google::protobuf::uint32 value);
  
  // repeated .PBTreasureBowlItem TreasureBowlItem = 3;
  inline int treasurebowlitem_size() const;
  inline void clear_treasurebowlitem();
  static const int kTreasureBowlItemFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTreasureBowlItem >& treasurebowlitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTreasureBowlItem >* mutable_treasurebowlitem();
  inline const ::PBTreasureBowlItem& treasurebowlitem(int index) const;
  inline ::PBTreasureBowlItem* mutable_treasurebowlitem(int index);
  inline ::PBTreasureBowlItem* add_treasurebowlitem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 totalnum_;
  ::google::protobuf::uint32 exchangetime_;
  ::google::protobuf::RepeatedPtrField< ::PBTreasureBowlItem > treasurebowlitem_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTreasureBowl* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetDataToClient : public ::google::protobuf::Message {
 public:
  PBRepetDataToClient();
  virtual ~PBRepetDataToClient();
  
  PBRepetDataToClient(const PBRepetDataToClient& from);
  
  inline PBRepetDataToClient& operator=(const PBRepetDataToClient& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetDataToClient& default_instance();
  void Swap(PBRepetDataToClient* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetDataToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetDataToClient& from);
  void MergeFrom(const PBRepetDataToClient& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetIndex = 1;
  inline bool has_repetindex() const;
  inline void clear_repetindex();
  static const int kRepetIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetindex() const;
  inline void set_repetindex(::google::protobuf::uint32 value);
  
  // optional uint32 RepetData = 2;
  inline bool has_repetdata() const;
  inline void clear_repetdata();
  static const int kRepetDataFieldNumber = 2;
  inline ::google::protobuf::uint32 repetdata() const;
  inline void set_repetdata(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetindex_;
  ::google::protobuf::uint32 repetdata_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetDataToClient* default_instance_;
};
// -------------------------------------------------------------------

class PBRepetDataList : public ::google::protobuf::Message {
 public:
  PBRepetDataList();
  virtual ~PBRepetDataList();
  
  PBRepetDataList(const PBRepetDataList& from);
  
  inline PBRepetDataList& operator=(const PBRepetDataList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepetDataList& default_instance();
  void Swap(PBRepetDataList* other);
  
  // implements Message ----------------------------------------------
  
  PBRepetDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepetDataList& from);
  void MergeFrom(const PBRepetDataList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBRepetDataToClient RepetDataToClient = 1;
  inline int repetdatatoclient_size() const;
  inline void clear_repetdatatoclient();
  static const int kRepetDataToClientFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepetDataToClient >& repetdatatoclient() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepetDataToClient >* mutable_repetdatatoclient();
  inline const ::PBRepetDataToClient& repetdatatoclient(int index) const;
  inline ::PBRepetDataToClient* mutable_repetdatatoclient(int index);
  inline ::PBRepetDataToClient* add_repetdatatoclient();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBRepetDataToClient > repetdatatoclient_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepetDataList* default_instance_;
};
// -------------------------------------------------------------------

class PBSwornMember : public ::google::protobuf::Message {
 public:
  PBSwornMember();
  virtual ~PBSwornMember();
  
  PBSwornMember(const PBSwornMember& from);
  
  inline PBSwornMember& operator=(const PBSwornMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSwornMember& default_instance();
  void Swap(PBSwornMember* other);
  
  // implements Message ----------------------------------------------
  
  PBSwornMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSwornMember& from);
  void MergeFrom(const PBSwornMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamPos = 2;
  inline bool has_teampos() const;
  inline void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  inline ::google::protobuf::uint32 teampos() const;
  inline void set_teampos(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 teampos_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSwornMember* default_instance_;
};
// -------------------------------------------------------------------

class PBSwornTeam : public ::google::protobuf::Message {
 public:
  PBSwornTeam();
  virtual ~PBSwornTeam();
  
  PBSwornTeam(const PBSwornTeam& from);
  
  inline PBSwornTeam& operator=(const PBSwornTeam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSwornTeam& default_instance();
  void Swap(PBSwornTeam* other);
  
  // implements Message ----------------------------------------------
  
  PBSwornTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSwornTeam& from);
  void MergeFrom(const PBSwornTeam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSwornMember SwornMember = 1;
  inline int swornmember_size() const;
  inline void clear_swornmember();
  static const int kSwornMemberFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSwornMember >& swornmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSwornMember >* mutable_swornmember();
  inline const ::PBSwornMember& swornmember(int index) const;
  inline ::PBSwornMember* mutable_swornmember(int index);
  inline ::PBSwornMember* add_swornmember();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSwornMember > swornmember_;
  friend void  protobuf_AddDesc_property_5fpb_2ehxx();
  friend void protobuf_AssignDesc_property_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_property_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSwornTeam* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBPropertyValue1

// optional uint32 InitValue = 1;
inline bool PBPropertyValue1::has_initvalue() const {
  return _has_bit(0);
}
inline void PBPropertyValue1::clear_initvalue() {
  initvalue_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPropertyValue1::initvalue() const {
  return initvalue_;
}
inline void PBPropertyValue1::set_initvalue(::google::protobuf::uint32 value) {
  _set_bit(0);
  initvalue_ = value;
}

// optional uint32 DeltaValue = 2;
inline bool PBPropertyValue1::has_deltavalue() const {
  return _has_bit(1);
}
inline void PBPropertyValue1::clear_deltavalue() {
  deltavalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPropertyValue1::deltavalue() const {
  return deltavalue_;
}
inline void PBPropertyValue1::set_deltavalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  deltavalue_ = value;
}

// -------------------------------------------------------------------

// PBSkillBox

// optional uint32 Skills = 1;
inline bool PBSkillBox::has_skills() const {
  return _has_bit(0);
}
inline void PBSkillBox::clear_skills() {
  skills_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillBox::skills() const {
  return skills_;
}
inline void PBSkillBox::set_skills(::google::protobuf::uint32 value) {
  _set_bit(0);
  skills_ = value;
}

// optional uint32 SkillActNum = 2;
inline bool PBSkillBox::has_skillactnum() const {
  return _has_bit(1);
}
inline void PBSkillBox::clear_skillactnum() {
  skillactnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSkillBox::skillactnum() const {
  return skillactnum_;
}
inline void PBSkillBox::set_skillactnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  skillactnum_ = value;
}

// optional uint32 SkillBookID = 3;
inline bool PBSkillBox::has_skillbookid() const {
  return _has_bit(2);
}
inline void PBSkillBox::clear_skillbookid() {
  skillbookid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkillBox::skillbookid() const {
  return skillbookid_;
}
inline void PBSkillBox::set_skillbookid(::google::protobuf::uint32 value) {
  _set_bit(2);
  skillbookid_ = value;
}

// optional uint32 AddedSkillPoints = 4;
inline bool PBSkillBox::has_addedskillpoints() const {
  return _has_bit(3);
}
inline void PBSkillBox::clear_addedskillpoints() {
  addedskillpoints_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSkillBox::addedskillpoints() const {
  return addedskillpoints_;
}
inline void PBSkillBox::set_addedskillpoints(::google::protobuf::uint32 value) {
  _set_bit(3);
  addedskillpoints_ = value;
}

// optional uint32 SkillInitLevel = 5;
inline bool PBSkillBox::has_skillinitlevel() const {
  return _has_bit(4);
}
inline void PBSkillBox::clear_skillinitlevel() {
  skillinitlevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSkillBox::skillinitlevel() const {
  return skillinitlevel_;
}
inline void PBSkillBox::set_skillinitlevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  skillinitlevel_ = value;
}

// optional uint32 ActiveState = 6;
inline bool PBSkillBox::has_activestate() const {
  return _has_bit(5);
}
inline void PBSkillBox::clear_activestate() {
  activestate_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSkillBox::activestate() const {
  return activestate_;
}
inline void PBSkillBox::set_activestate(::google::protobuf::uint32 value) {
  _set_bit(5);
  activestate_ = value;
}

// -------------------------------------------------------------------

// PBItemObject

// optional uint32 ItemID = 1;
inline bool PBItemObject::has_itemid() const {
  return _has_bit(0);
}
inline void PBItemObject::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemObject::itemid() const {
  return itemid_;
}
inline void PBItemObject::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 Number = 2;
inline bool PBItemObject::has_number() const {
  return _has_bit(1);
}
inline void PBItemObject::clear_number() {
  number_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemObject::number() const {
  return number_;
}
inline void PBItemObject::set_number(::google::protobuf::uint32 value) {
  _set_bit(1);
  number_ = value;
}

// optional uint32 Index = 3;
inline bool PBItemObject::has_index() const {
  return _has_bit(2);
}
inline void PBItemObject::clear_index() {
  index_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemObject::index() const {
  return index_;
}
inline void PBItemObject::set_index(::google::protobuf::uint32 value) {
  _set_bit(2);
  index_ = value;
}

// optional uint32 InvalidTime = 4;
inline bool PBItemObject::has_invalidtime() const {
  return _has_bit(3);
}
inline void PBItemObject::clear_invalidtime() {
  invalidtime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemObject::invalidtime() const {
  return invalidtime_;
}
inline void PBItemObject::set_invalidtime(::google::protobuf::uint32 value) {
  _set_bit(3);
  invalidtime_ = value;
}

// optional uint32 Cooldown = 5;
inline bool PBItemObject::has_cooldown() const {
  return _has_bit(4);
}
inline void PBItemObject::clear_cooldown() {
  cooldown_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemObject::cooldown() const {
  return cooldown_;
}
inline void PBItemObject::set_cooldown(::google::protobuf::uint32 value) {
  _set_bit(4);
  cooldown_ = value;
}

// optional uint32 BindStatus = 6;
inline bool PBItemObject::has_bindstatus() const {
  return _has_bit(5);
}
inline void PBItemObject::clear_bindstatus() {
  bindstatus_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemObject::bindstatus() const {
  return bindstatus_;
}
inline void PBItemObject::set_bindstatus(::google::protobuf::uint32 value) {
  _set_bit(5);
  bindstatus_ = value;
}

// optional uint64 ObjGuID = 7;
inline bool PBItemObject::has_objguid() const {
  return _has_bit(6);
}
inline void PBItemObject::clear_objguid() {
  objguid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::uint64 PBItemObject::objguid() const {
  return objguid_;
}
inline void PBItemObject::set_objguid(::google::protobuf::uint64 value) {
  _set_bit(6);
  objguid_ = value;
}

// optional uint32 UsedTimes = 8;
inline bool PBItemObject::has_usedtimes() const {
  return _has_bit(7);
}
inline void PBItemObject::clear_usedtimes() {
  usedtimes_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemObject::usedtimes() const {
  return usedtimes_;
}
inline void PBItemObject::set_usedtimes(::google::protobuf::uint32 value) {
  _set_bit(7);
  usedtimes_ = value;
}

// optional .PBItemContent ItemContent = 9;
inline bool PBItemObject::has_itemcontent() const {
  return _has_bit(8);
}
inline void PBItemObject::clear_itemcontent() {
  if (itemcontent_ != NULL) itemcontent_->::PBItemContent::Clear();
  _clear_bit(8);
}
inline const ::PBItemContent& PBItemObject::itemcontent() const {
  return itemcontent_ != NULL ? *itemcontent_ : *default_instance_->itemcontent_;
}
inline ::PBItemContent* PBItemObject::mutable_itemcontent() {
  _set_bit(8);
  if (itemcontent_ == NULL) itemcontent_ = new ::PBItemContent;
  return itemcontent_;
}

// optional uint64 PurchaseID = 10;
inline bool PBItemObject::has_purchaseid() const {
  return _has_bit(9);
}
inline void PBItemObject::clear_purchaseid() {
  purchaseid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(9);
}
inline ::google::protobuf::uint64 PBItemObject::purchaseid() const {
  return purchaseid_;
}
inline void PBItemObject::set_purchaseid(::google::protobuf::uint64 value) {
  _set_bit(9);
  purchaseid_ = value;
}

// optional string GroomName = 11;
inline bool PBItemObject::has_groomname() const {
  return _has_bit(10);
}
inline void PBItemObject::clear_groomname() {
  if (groomname_ != &_default_groomname_) {
    groomname_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& PBItemObject::groomname() const {
  return *groomname_;
}
inline void PBItemObject::set_groomname(const ::std::string& value) {
  _set_bit(10);
  if (groomname_ == &_default_groomname_) {
    groomname_ = new ::std::string;
  }
  groomname_->assign(value);
}
inline void PBItemObject::set_groomname(const char* value) {
  _set_bit(10);
  if (groomname_ == &_default_groomname_) {
    groomname_ = new ::std::string;
  }
  groomname_->assign(value);
}
inline void PBItemObject::set_groomname(const char* value, size_t size) {
  _set_bit(10);
  if (groomname_ == &_default_groomname_) {
    groomname_ = new ::std::string;
  }
  groomname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemObject::mutable_groomname() {
  _set_bit(10);
  if (groomname_ == &_default_groomname_) {
    groomname_ = new ::std::string;
  }
  return groomname_;
}

// optional string BrideName = 12;
inline bool PBItemObject::has_bridename() const {
  return _has_bit(11);
}
inline void PBItemObject::clear_bridename() {
  if (bridename_ != &_default_bridename_) {
    bridename_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& PBItemObject::bridename() const {
  return *bridename_;
}
inline void PBItemObject::set_bridename(const ::std::string& value) {
  _set_bit(11);
  if (bridename_ == &_default_bridename_) {
    bridename_ = new ::std::string;
  }
  bridename_->assign(value);
}
inline void PBItemObject::set_bridename(const char* value) {
  _set_bit(11);
  if (bridename_ == &_default_bridename_) {
    bridename_ = new ::std::string;
  }
  bridename_->assign(value);
}
inline void PBItemObject::set_bridename(const char* value, size_t size) {
  _set_bit(11);
  if (bridename_ == &_default_bridename_) {
    bridename_ = new ::std::string;
  }
  bridename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemObject::mutable_bridename() {
  _set_bit(11);
  if (bridename_ == &_default_bridename_) {
    bridename_ = new ::std::string;
  }
  return bridename_;
}

// optional uint32 WeddingTime = 13;
inline bool PBItemObject::has_weddingtime() const {
  return _has_bit(12);
}
inline void PBItemObject::clear_weddingtime() {
  weddingtime_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemObject::weddingtime() const {
  return weddingtime_;
}
inline void PBItemObject::set_weddingtime(::google::protobuf::uint32 value) {
  _set_bit(12);
  weddingtime_ = value;
}

// optional uint32 WeddingTimeLength = 14;
inline bool PBItemObject::has_weddingtimelength() const {
  return _has_bit(13);
}
inline void PBItemObject::clear_weddingtimelength() {
  weddingtimelength_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemObject::weddingtimelength() const {
  return weddingtimelength_;
}
inline void PBItemObject::set_weddingtimelength(::google::protobuf::uint32 value) {
  _set_bit(13);
  weddingtimelength_ = value;
}

// -------------------------------------------------------------------

// PBItemContent

// optional uint32 RemainHP = 1;
inline bool PBItemContent::has_remainhp() const {
  return _has_bit(0);
}
inline void PBItemContent::clear_remainhp() {
  remainhp_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemContent::remainhp() const {
  return remainhp_;
}
inline void PBItemContent::set_remainhp(::google::protobuf::uint32 value) {
  _set_bit(0);
  remainhp_ = value;
}

// optional uint32 RemainMP = 2;
inline bool PBItemContent::has_remainmp() const {
  return _has_bit(1);
}
inline void PBItemContent::clear_remainmp() {
  remainmp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemContent::remainmp() const {
  return remainmp_;
}
inline void PBItemContent::set_remainmp(::google::protobuf::uint32 value) {
  _set_bit(1);
  remainmp_ = value;
}

// optional uint32 RemainAP = 3;
inline bool PBItemContent::has_remainap() const {
  return _has_bit(2);
}
inline void PBItemContent::clear_remainap() {
  remainap_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemContent::remainap() const {
  return remainap_;
}
inline void PBItemContent::set_remainap(::google::protobuf::uint32 value) {
  _set_bit(2);
  remainap_ = value;
}

// optional uint32 Current = 4;
inline bool PBItemContent::has_current() const {
  return _has_bit(3);
}
inline void PBItemContent::clear_current() {
  current_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemContent::current() const {
  return current_;
}
inline void PBItemContent::set_current(::google::protobuf::uint32 value) {
  _set_bit(3);
  current_ = value;
}

// repeated .PBTelePostion TelePos = 5;
inline int PBItemContent::telepos_size() const {
  return telepos_.size();
}
inline void PBItemContent::clear_telepos() {
  telepos_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTelePostion >&
PBItemContent::telepos() const {
  return telepos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTelePostion >*
PBItemContent::mutable_telepos() {
  return &telepos_;
}
inline const ::PBTelePostion& PBItemContent::telepos(int index) const {
  return telepos_.Get(index);
}
inline ::PBTelePostion* PBItemContent::mutable_telepos(int index) {
  return telepos_.Mutable(index);
}
inline ::PBTelePostion* PBItemContent::add_telepos() {
  return telepos_.Add();
}

// optional .PBItemObjMW ItemMW = 6;
inline bool PBItemContent::has_itemmw() const {
  return _has_bit(5);
}
inline void PBItemContent::clear_itemmw() {
  if (itemmw_ != NULL) itemmw_->::PBItemObjMW::Clear();
  _clear_bit(5);
}
inline const ::PBItemObjMW& PBItemContent::itemmw() const {
  return itemmw_ != NULL ? *itemmw_ : *default_instance_->itemmw_;
}
inline ::PBItemObjMW* PBItemContent::mutable_itemmw() {
  _set_bit(5);
  if (itemmw_ == NULL) itemmw_ = new ::PBItemObjMW;
  return itemmw_;
}

// optional .PBItemObjEquip ItemEquip = 7;
inline bool PBItemContent::has_itemequip() const {
  return _has_bit(6);
}
inline void PBItemContent::clear_itemequip() {
  if (itemequip_ != NULL) itemequip_->::PBItemObjEquip::Clear();
  _clear_bit(6);
}
inline const ::PBItemObjEquip& PBItemContent::itemequip() const {
  return itemequip_ != NULL ? *itemequip_ : *default_instance_->itemequip_;
}
inline ::PBItemObjEquip* PBItemContent::mutable_itemequip() {
  _set_bit(6);
  if (itemequip_ == NULL) itemequip_ = new ::PBItemObjEquip;
  return itemequip_;
}

// optional uint32 LeftOffLineTime = 8;
inline bool PBItemContent::has_leftofflinetime() const {
  return _has_bit(7);
}
inline void PBItemContent::clear_leftofflinetime() {
  leftofflinetime_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemContent::leftofflinetime() const {
  return leftofflinetime_;
}
inline void PBItemContent::set_leftofflinetime(::google::protobuf::uint32 value) {
  _set_bit(7);
  leftofflinetime_ = value;
}

// optional uint32 Exp = 9;
inline bool PBItemContent::has_exp() const {
  return _has_bit(8);
}
inline void PBItemContent::clear_exp() {
  exp_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemContent::exp() const {
  return exp_;
}
inline void PBItemContent::set_exp(::google::protobuf::uint32 value) {
  _set_bit(8);
  exp_ = value;
}

// -------------------------------------------------------------------

// PBItemObjEquip

// repeated uint32 SlotProperty = 1;
inline int PBItemObjEquip::slotproperty_size() const {
  return slotproperty_.size();
}
inline void PBItemObjEquip::clear_slotproperty() {
  slotproperty_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemObjEquip::slotproperty() const {
  return slotproperty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemObjEquip::mutable_slotproperty() {
  return &slotproperty_;
}
inline ::google::protobuf::uint32 PBItemObjEquip::slotproperty(int index) const {
  return slotproperty_.Get(index);
}
inline void PBItemObjEquip::set_slotproperty(int index, ::google::protobuf::uint32 value) {
  slotproperty_.Set(index, value);
}
inline void PBItemObjEquip::add_slotproperty(::google::protobuf::uint32 value) {
  slotproperty_.Add(value);
}

// repeated uint32 Property = 2;
inline int PBItemObjEquip::property_size() const {
  return property_.size();
}
inline void PBItemObjEquip::clear_property() {
  property_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemObjEquip::property() const {
  return property_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemObjEquip::mutable_property() {
  return &property_;
}
inline ::google::protobuf::uint32 PBItemObjEquip::property(int index) const {
  return property_.Get(index);
}
inline void PBItemObjEquip::set_property(int index, ::google::protobuf::uint32 value) {
  property_.Set(index, value);
}
inline void PBItemObjEquip::add_property(::google::protobuf::uint32 value) {
  property_.Add(value);
}

// repeated uint32 SlotValue = 3;
inline int PBItemObjEquip::slotvalue_size() const {
  return slotvalue_.size();
}
inline void PBItemObjEquip::clear_slotvalue() {
  slotvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemObjEquip::slotvalue() const {
  return slotvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemObjEquip::mutable_slotvalue() {
  return &slotvalue_;
}
inline ::google::protobuf::uint32 PBItemObjEquip::slotvalue(int index) const {
  return slotvalue_.Get(index);
}
inline void PBItemObjEquip::set_slotvalue(int index, ::google::protobuf::uint32 value) {
  slotvalue_.Set(index, value);
}
inline void PBItemObjEquip::add_slotvalue(::google::protobuf::uint32 value) {
  slotvalue_.Add(value);
}

// optional uint32 Level = 4;
inline bool PBItemObjEquip::has_level() const {
  return _has_bit(3);
}
inline void PBItemObjEquip::clear_level() {
  level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemObjEquip::level() const {
  return level_;
}
inline void PBItemObjEquip::set_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  level_ = value;
}

// optional uint32 SlotNumber = 5;
inline bool PBItemObjEquip::has_slotnumber() const {
  return _has_bit(4);
}
inline void PBItemObjEquip::clear_slotnumber() {
  slotnumber_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemObjEquip::slotnumber() const {
  return slotnumber_;
}
inline void PBItemObjEquip::set_slotnumber(::google::protobuf::uint32 value) {
  _set_bit(4);
  slotnumber_ = value;
}

// optional uint32 NameLength = 6;
inline bool PBItemObjEquip::has_namelength() const {
  return _has_bit(5);
}
inline void PBItemObjEquip::clear_namelength() {
  namelength_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemObjEquip::namelength() const {
  return namelength_;
}
inline void PBItemObjEquip::set_namelength(::google::protobuf::uint32 value) {
  _set_bit(5);
  namelength_ = value;
}

// optional string Name = 7;
inline bool PBItemObjEquip::has_name() const {
  return _has_bit(6);
}
inline void PBItemObjEquip::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& PBItemObjEquip::name() const {
  return *name_;
}
inline void PBItemObjEquip::set_name(const ::std::string& value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBItemObjEquip::set_name(const char* value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBItemObjEquip::set_name(const char* value, size_t size) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemObjEquip::mutable_name() {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 SlotSpell = 8;
inline bool PBItemObjEquip::has_slotspell() const {
  return _has_bit(7);
}
inline void PBItemObjEquip::clear_slotspell() {
  slotspell_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemObjEquip::slotspell() const {
  return slotspell_;
}
inline void PBItemObjEquip::set_slotspell(::google::protobuf::uint32 value) {
  _set_bit(7);
  slotspell_ = value;
}

// optional uint32 Durability = 9;
inline bool PBItemObjEquip::has_durability() const {
  return _has_bit(8);
}
inline void PBItemObjEquip::clear_durability() {
  durability_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemObjEquip::durability() const {
  return durability_;
}
inline void PBItemObjEquip::set_durability(::google::protobuf::uint32 value) {
  _set_bit(8);
  durability_ = value;
}

// optional .PBPropertyValue1 MaxSlotNumber = 10;
inline bool PBItemObjEquip::has_maxslotnumber() const {
  return _has_bit(9);
}
inline void PBItemObjEquip::clear_maxslotnumber() {
  if (maxslotnumber_ != NULL) maxslotnumber_->::PBPropertyValue1::Clear();
  _clear_bit(9);
}
inline const ::PBPropertyValue1& PBItemObjEquip::maxslotnumber() const {
  return maxslotnumber_ != NULL ? *maxslotnumber_ : *default_instance_->maxslotnumber_;
}
inline ::PBPropertyValue1* PBItemObjEquip::mutable_maxslotnumber() {
  _set_bit(9);
  if (maxslotnumber_ == NULL) maxslotnumber_ = new ::PBPropertyValue1;
  return maxslotnumber_;
}

// repeated uint32 Judge = 11;
inline int PBItemObjEquip::judge_size() const {
  return judge_.size();
}
inline void PBItemObjEquip::clear_judge() {
  judge_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemObjEquip::judge() const {
  return judge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemObjEquip::mutable_judge() {
  return &judge_;
}
inline ::google::protobuf::uint32 PBItemObjEquip::judge(int index) const {
  return judge_.Get(index);
}
inline void PBItemObjEquip::set_judge(int index, ::google::protobuf::uint32 value) {
  judge_.Set(index, value);
}
inline void PBItemObjEquip::add_judge(::google::protobuf::uint32 value) {
  judge_.Add(value);
}

// optional uint32 ResDef = 12;
inline bool PBItemObjEquip::has_resdef() const {
  return _has_bit(11);
}
inline void PBItemObjEquip::clear_resdef() {
  resdef_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemObjEquip::resdef() const {
  return resdef_;
}
inline void PBItemObjEquip::set_resdef(::google::protobuf::uint32 value) {
  _set_bit(11);
  resdef_ = value;
}

// optional uint32 ResAtt = 13;
inline bool PBItemObjEquip::has_resatt() const {
  return _has_bit(12);
}
inline void PBItemObjEquip::clear_resatt() {
  resatt_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemObjEquip::resatt() const {
  return resatt_;
}
inline void PBItemObjEquip::set_resatt(::google::protobuf::uint32 value) {
  _set_bit(12);
  resatt_ = value;
}

// optional uint32 DefLevel = 14;
inline bool PBItemObjEquip::has_deflevel() const {
  return _has_bit(13);
}
inline void PBItemObjEquip::clear_deflevel() {
  deflevel_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemObjEquip::deflevel() const {
  return deflevel_;
}
inline void PBItemObjEquip::set_deflevel(::google::protobuf::uint32 value) {
  _set_bit(13);
  deflevel_ = value;
}

// optional uint32 AttLevel = 15;
inline bool PBItemObjEquip::has_attlevel() const {
  return _has_bit(14);
}
inline void PBItemObjEquip::clear_attlevel() {
  attlevel_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemObjEquip::attlevel() const {
  return attlevel_;
}
inline void PBItemObjEquip::set_attlevel(::google::protobuf::uint32 value) {
  _set_bit(14);
  attlevel_ = value;
}

// optional uint32 MagicStoneID = 16;
inline bool PBItemObjEquip::has_magicstoneid() const {
  return _has_bit(15);
}
inline void PBItemObjEquip::clear_magicstoneid() {
  magicstoneid_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemObjEquip::magicstoneid() const {
  return magicstoneid_;
}
inline void PBItemObjEquip::set_magicstoneid(::google::protobuf::uint32 value) {
  _set_bit(15);
  magicstoneid_ = value;
}

// optional uint32 MagicStoneNum = 17;
inline bool PBItemObjEquip::has_magicstonenum() const {
  return _has_bit(16);
}
inline void PBItemObjEquip::clear_magicstonenum() {
  magicstonenum_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBItemObjEquip::magicstonenum() const {
  return magicstonenum_;
}
inline void PBItemObjEquip::set_magicstonenum(::google::protobuf::uint32 value) {
  _set_bit(16);
  magicstonenum_ = value;
}

// optional uint32 BindFreeTime = 18;
inline bool PBItemObjEquip::has_bindfreetime() const {
  return _has_bit(17);
}
inline void PBItemObjEquip::clear_bindfreetime() {
  bindfreetime_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemObjEquip::bindfreetime() const {
  return bindfreetime_;
}
inline void PBItemObjEquip::set_bindfreetime(::google::protobuf::uint32 value) {
  _set_bit(17);
  bindfreetime_ = value;
}

// optional uint32 SpouseID = 19;
inline bool PBItemObjEquip::has_spouseid() const {
  return _has_bit(18);
}
inline void PBItemObjEquip::clear_spouseid() {
  spouseid_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemObjEquip::spouseid() const {
  return spouseid_;
}
inline void PBItemObjEquip::set_spouseid(::google::protobuf::uint32 value) {
  _set_bit(18);
  spouseid_ = value;
}

// optional string SpouseName = 20;
inline bool PBItemObjEquip::has_spousename() const {
  return _has_bit(19);
}
inline void PBItemObjEquip::clear_spousename() {
  if (spousename_ != &_default_spousename_) {
    spousename_->clear();
  }
  _clear_bit(19);
}
inline const ::std::string& PBItemObjEquip::spousename() const {
  return *spousename_;
}
inline void PBItemObjEquip::set_spousename(const ::std::string& value) {
  _set_bit(19);
  if (spousename_ == &_default_spousename_) {
    spousename_ = new ::std::string;
  }
  spousename_->assign(value);
}
inline void PBItemObjEquip::set_spousename(const char* value) {
  _set_bit(19);
  if (spousename_ == &_default_spousename_) {
    spousename_ = new ::std::string;
  }
  spousename_->assign(value);
}
inline void PBItemObjEquip::set_spousename(const char* value, size_t size) {
  _set_bit(19);
  if (spousename_ == &_default_spousename_) {
    spousename_ = new ::std::string;
  }
  spousename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemObjEquip::mutable_spousename() {
  _set_bit(19);
  if (spousename_ == &_default_spousename_) {
    spousename_ = new ::std::string;
  }
  return spousename_;
}

// optional uint32 ExtraType = 21;
inline bool PBItemObjEquip::has_extratype() const {
  return _has_bit(20);
}
inline void PBItemObjEquip::clear_extratype() {
  extratype_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBItemObjEquip::extratype() const {
  return extratype_;
}
inline void PBItemObjEquip::set_extratype(::google::protobuf::uint32 value) {
  _set_bit(20);
  extratype_ = value;
}

// optional uint32 BindTime = 22;
inline bool PBItemObjEquip::has_bindtime() const {
  return _has_bit(21);
}
inline void PBItemObjEquip::clear_bindtime() {
  bindtime_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemObjEquip::bindtime() const {
  return bindtime_;
}
inline void PBItemObjEquip::set_bindtime(::google::protobuf::uint32 value) {
  _set_bit(21);
  bindtime_ = value;
}

// -------------------------------------------------------------------

// PBItemObjMW

// optional uint32 MWLevel = 1;
inline bool PBItemObjMW::has_mwlevel() const {
  return _has_bit(0);
}
inline void PBItemObjMW::clear_mwlevel() {
  mwlevel_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemObjMW::mwlevel() const {
  return mwlevel_;
}
inline void PBItemObjMW::set_mwlevel(::google::protobuf::uint32 value) {
  _set_bit(0);
  mwlevel_ = value;
}

// optional uint64 Exp = 2;
inline bool PBItemObjMW::has_exp() const {
  return _has_bit(1);
}
inline void PBItemObjMW::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBItemObjMW::exp() const {
  return exp_;
}
inline void PBItemObjMW::set_exp(::google::protobuf::uint64 value) {
  _set_bit(1);
  exp_ = value;
}

// optional uint32 Mp = 3;
inline bool PBItemObjMW::has_mp() const {
  return _has_bit(2);
}
inline void PBItemObjMW::clear_mp() {
  mp_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemObjMW::mp() const {
  return mp_;
}
inline void PBItemObjMW::set_mp(::google::protobuf::uint32 value) {
  _set_bit(2);
  mp_ = value;
}

// optional uint32 Hp = 4;
inline bool PBItemObjMW::has_hp() const {
  return _has_bit(3);
}
inline void PBItemObjMW::clear_hp() {
  hp_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemObjMW::hp() const {
  return hp_;
}
inline void PBItemObjMW::set_hp(::google::protobuf::uint32 value) {
  _set_bit(3);
  hp_ = value;
}

// optional uint32 CurKeenpoints = 5;
inline bool PBItemObjMW::has_curkeenpoints() const {
  return _has_bit(4);
}
inline void PBItemObjMW::clear_curkeenpoints() {
  curkeenpoints_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemObjMW::curkeenpoints() const {
  return curkeenpoints_;
}
inline void PBItemObjMW::set_curkeenpoints(::google::protobuf::uint32 value) {
  _set_bit(4);
  curkeenpoints_ = value;
}

// optional uint32 CurCalmpoints = 6;
inline bool PBItemObjMW::has_curcalmpoints() const {
  return _has_bit(5);
}
inline void PBItemObjMW::clear_curcalmpoints() {
  curcalmpoints_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemObjMW::curcalmpoints() const {
  return curcalmpoints_;
}
inline void PBItemObjMW::set_curcalmpoints(::google::protobuf::uint32 value) {
  _set_bit(5);
  curcalmpoints_ = value;
}

// optional uint32 CurMagicpoints = 7;
inline bool PBItemObjMW::has_curmagicpoints() const {
  return _has_bit(6);
}
inline void PBItemObjMW::clear_curmagicpoints() {
  curmagicpoints_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemObjMW::curmagicpoints() const {
  return curmagicpoints_;
}
inline void PBItemObjMW::set_curmagicpoints(::google::protobuf::uint32 value) {
  _set_bit(6);
  curmagicpoints_ = value;
}

// optional uint32 CurBierpoints = 8;
inline bool PBItemObjMW::has_curbierpoints() const {
  return _has_bit(7);
}
inline void PBItemObjMW::clear_curbierpoints() {
  curbierpoints_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemObjMW::curbierpoints() const {
  return curbierpoints_;
}
inline void PBItemObjMW::set_curbierpoints(::google::protobuf::uint32 value) {
  _set_bit(7);
  curbierpoints_ = value;
}

// optional uint32 CurImmortalpoints = 9;
inline bool PBItemObjMW::has_curimmortalpoints() const {
  return _has_bit(8);
}
inline void PBItemObjMW::clear_curimmortalpoints() {
  curimmortalpoints_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemObjMW::curimmortalpoints() const {
  return curimmortalpoints_;
}
inline void PBItemObjMW::set_curimmortalpoints(::google::protobuf::uint32 value) {
  _set_bit(8);
  curimmortalpoints_ = value;
}

// optional uint32 LeftPoints = 10;
inline bool PBItemObjMW::has_leftpoints() const {
  return _has_bit(9);
}
inline void PBItemObjMW::clear_leftpoints() {
  leftpoints_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemObjMW::leftpoints() const {
  return leftpoints_;
}
inline void PBItemObjMW::set_leftpoints(::google::protobuf::uint32 value) {
  _set_bit(9);
  leftpoints_ = value;
}

// optional uint32 ProBase = 11;
inline bool PBItemObjMW::has_probase() const {
  return _has_bit(10);
}
inline void PBItemObjMW::clear_probase() {
  probase_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemObjMW::probase() const {
  return probase_;
}
inline void PBItemObjMW::set_probase(::google::protobuf::uint32 value) {
  _set_bit(10);
  probase_ = value;
}

// optional uint32 ProUp = 12;
inline bool PBItemObjMW::has_proup() const {
  return _has_bit(11);
}
inline void PBItemObjMW::clear_proup() {
  proup_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemObjMW::proup() const {
  return proup_;
}
inline void PBItemObjMW::set_proup(::google::protobuf::uint32 value) {
  _set_bit(11);
  proup_ = value;
}

// optional uint32 ProEff = 13;
inline bool PBItemObjMW::has_proeff() const {
  return _has_bit(12);
}
inline void PBItemObjMW::clear_proeff() {
  proeff_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemObjMW::proeff() const {
  return proeff_;
}
inline void PBItemObjMW::set_proeff(::google::protobuf::uint32 value) {
  _set_bit(12);
  proeff_ = value;
}

// optional uint32 ProSpir = 14;
inline bool PBItemObjMW::has_prospir() const {
  return _has_bit(13);
}
inline void PBItemObjMW::clear_prospir() {
  prospir_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemObjMW::prospir() const {
  return prospir_;
}
inline void PBItemObjMW::set_prospir(::google::protobuf::uint32 value) {
  _set_bit(13);
  prospir_ = value;
}

// optional uint32 ProcessVal = 15;
inline bool PBItemObjMW::has_processval() const {
  return _has_bit(14);
}
inline void PBItemObjMW::clear_processval() {
  processval_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemObjMW::processval() const {
  return processval_;
}
inline void PBItemObjMW::set_processval(::google::protobuf::uint32 value) {
  _set_bit(14);
  processval_ = value;
}

// optional uint32 LeftSkillPoints = 16;
inline bool PBItemObjMW::has_leftskillpoints() const {
  return _has_bit(15);
}
inline void PBItemObjMW::clear_leftskillpoints() {
  leftskillpoints_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemObjMW::leftskillpoints() const {
  return leftskillpoints_;
}
inline void PBItemObjMW::set_leftskillpoints(::google::protobuf::uint32 value) {
  _set_bit(15);
  leftskillpoints_ = value;
}

// optional uint32 MaxMp = 17;
inline bool PBItemObjMW::has_maxmp() const {
  return _has_bit(16);
}
inline void PBItemObjMW::clear_maxmp() {
  maxmp_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBItemObjMW::maxmp() const {
  return maxmp_;
}
inline void PBItemObjMW::set_maxmp(::google::protobuf::uint32 value) {
  _set_bit(16);
  maxmp_ = value;
}

// optional uint32 MaxHp = 18;
inline bool PBItemObjMW::has_maxhp() const {
  return _has_bit(17);
}
inline void PBItemObjMW::clear_maxhp() {
  maxhp_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemObjMW::maxhp() const {
  return maxhp_;
}
inline void PBItemObjMW::set_maxhp(::google::protobuf::uint32 value) {
  _set_bit(17);
  maxhp_ = value;
}

// optional uint32 IncMp = 19;
inline bool PBItemObjMW::has_incmp() const {
  return _has_bit(18);
}
inline void PBItemObjMW::clear_incmp() {
  incmp_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemObjMW::incmp() const {
  return incmp_;
}
inline void PBItemObjMW::set_incmp(::google::protobuf::uint32 value) {
  _set_bit(18);
  incmp_ = value;
}

// optional uint32 IncHp = 20;
inline bool PBItemObjMW::has_inchp() const {
  return _has_bit(19);
}
inline void PBItemObjMW::clear_inchp() {
  inchp_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBItemObjMW::inchp() const {
  return inchp_;
}
inline void PBItemObjMW::set_inchp(::google::protobuf::uint32 value) {
  _set_bit(19);
  inchp_ = value;
}

// repeated .PBSkillBox SkillBox = 21;
inline int PBItemObjMW::skillbox_size() const {
  return skillbox_.size();
}
inline void PBItemObjMW::clear_skillbox() {
  skillbox_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillBox >&
PBItemObjMW::skillbox() const {
  return skillbox_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillBox >*
PBItemObjMW::mutable_skillbox() {
  return &skillbox_;
}
inline const ::PBSkillBox& PBItemObjMW::skillbox(int index) const {
  return skillbox_.Get(index);
}
inline ::PBSkillBox* PBItemObjMW::mutable_skillbox(int index) {
  return skillbox_.Mutable(index);
}
inline ::PBSkillBox* PBItemObjMW::add_skillbox() {
  return skillbox_.Add();
}

// optional uint32 AddKeenpoints = 22;
inline bool PBItemObjMW::has_addkeenpoints() const {
  return _has_bit(21);
}
inline void PBItemObjMW::clear_addkeenpoints() {
  addkeenpoints_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemObjMW::addkeenpoints() const {
  return addkeenpoints_;
}
inline void PBItemObjMW::set_addkeenpoints(::google::protobuf::uint32 value) {
  _set_bit(21);
  addkeenpoints_ = value;
}

// optional uint32 AddCalmpoints = 23;
inline bool PBItemObjMW::has_addcalmpoints() const {
  return _has_bit(22);
}
inline void PBItemObjMW::clear_addcalmpoints() {
  addcalmpoints_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBItemObjMW::addcalmpoints() const {
  return addcalmpoints_;
}
inline void PBItemObjMW::set_addcalmpoints(::google::protobuf::uint32 value) {
  _set_bit(22);
  addcalmpoints_ = value;
}

// optional uint32 AddMagicpoints = 24;
inline bool PBItemObjMW::has_addmagicpoints() const {
  return _has_bit(23);
}
inline void PBItemObjMW::clear_addmagicpoints() {
  addmagicpoints_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBItemObjMW::addmagicpoints() const {
  return addmagicpoints_;
}
inline void PBItemObjMW::set_addmagicpoints(::google::protobuf::uint32 value) {
  _set_bit(23);
  addmagicpoints_ = value;
}

// optional uint32 AddBierpoints = 25;
inline bool PBItemObjMW::has_addbierpoints() const {
  return _has_bit(24);
}
inline void PBItemObjMW::clear_addbierpoints() {
  addbierpoints_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBItemObjMW::addbierpoints() const {
  return addbierpoints_;
}
inline void PBItemObjMW::set_addbierpoints(::google::protobuf::uint32 value) {
  _set_bit(24);
  addbierpoints_ = value;
}

// optional uint32 AddImmortalpoints = 26;
inline bool PBItemObjMW::has_addimmortalpoints() const {
  return _has_bit(25);
}
inline void PBItemObjMW::clear_addimmortalpoints() {
  addimmortalpoints_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBItemObjMW::addimmortalpoints() const {
  return addimmortalpoints_;
}
inline void PBItemObjMW::set_addimmortalpoints(::google::protobuf::uint32 value) {
  _set_bit(25);
  addimmortalpoints_ = value;
}

// optional .PBSkillList SkillList = 27;
inline bool PBItemObjMW::has_skilllist() const {
  return _has_bit(26);
}
inline void PBItemObjMW::clear_skilllist() {
  if (skilllist_ != NULL) skilllist_->::PBSkillList::Clear();
  _clear_bit(26);
}
inline const ::PBSkillList& PBItemObjMW::skilllist() const {
  return skilllist_ != NULL ? *skilllist_ : *default_instance_->skilllist_;
}
inline ::PBSkillList* PBItemObjMW::mutable_skilllist() {
  _set_bit(26);
  if (skilllist_ == NULL) skilllist_ = new ::PBSkillList;
  return skilllist_;
}

// optional uint32 JudgeFlag = 28;
inline bool PBItemObjMW::has_judgeflag() const {
  return _has_bit(27);
}
inline void PBItemObjMW::clear_judgeflag() {
  judgeflag_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBItemObjMW::judgeflag() const {
  return judgeflag_;
}
inline void PBItemObjMW::set_judgeflag(::google::protobuf::uint32 value) {
  _set_bit(27);
  judgeflag_ = value;
}

// optional uint32 ExtraKeenpoints = 29;
inline bool PBItemObjMW::has_extrakeenpoints() const {
  return _has_bit(28);
}
inline void PBItemObjMW::clear_extrakeenpoints() {
  extrakeenpoints_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBItemObjMW::extrakeenpoints() const {
  return extrakeenpoints_;
}
inline void PBItemObjMW::set_extrakeenpoints(::google::protobuf::uint32 value) {
  _set_bit(28);
  extrakeenpoints_ = value;
}

// optional uint32 ExtraCalmpoints = 30;
inline bool PBItemObjMW::has_extracalmpoints() const {
  return _has_bit(29);
}
inline void PBItemObjMW::clear_extracalmpoints() {
  extracalmpoints_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBItemObjMW::extracalmpoints() const {
  return extracalmpoints_;
}
inline void PBItemObjMW::set_extracalmpoints(::google::protobuf::uint32 value) {
  _set_bit(29);
  extracalmpoints_ = value;
}

// optional uint32 ExtraMagicpoints = 31;
inline bool PBItemObjMW::has_extramagicpoints() const {
  return _has_bit(30);
}
inline void PBItemObjMW::clear_extramagicpoints() {
  extramagicpoints_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBItemObjMW::extramagicpoints() const {
  return extramagicpoints_;
}
inline void PBItemObjMW::set_extramagicpoints(::google::protobuf::uint32 value) {
  _set_bit(30);
  extramagicpoints_ = value;
}

// optional uint32 ExtraBierpoints = 32;
inline bool PBItemObjMW::has_extrabierpoints() const {
  return _has_bit(31);
}
inline void PBItemObjMW::clear_extrabierpoints() {
  extrabierpoints_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBItemObjMW::extrabierpoints() const {
  return extrabierpoints_;
}
inline void PBItemObjMW::set_extrabierpoints(::google::protobuf::uint32 value) {
  _set_bit(31);
  extrabierpoints_ = value;
}

// optional uint32 ExtraImmortalpoints = 33;
inline bool PBItemObjMW::has_extraimmortalpoints() const {
  return _has_bit(32);
}
inline void PBItemObjMW::clear_extraimmortalpoints() {
  extraimmortalpoints_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBItemObjMW::extraimmortalpoints() const {
  return extraimmortalpoints_;
}
inline void PBItemObjMW::set_extraimmortalpoints(::google::protobuf::uint32 value) {
  _set_bit(32);
  extraimmortalpoints_ = value;
}

// repeated uint32 PlayerAddPointLastLevel = 34;
inline int PBItemObjMW::playeraddpointlastlevel_size() const {
  return playeraddpointlastlevel_.size();
}
inline void PBItemObjMW::clear_playeraddpointlastlevel() {
  playeraddpointlastlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemObjMW::playeraddpointlastlevel() const {
  return playeraddpointlastlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemObjMW::mutable_playeraddpointlastlevel() {
  return &playeraddpointlastlevel_;
}
inline ::google::protobuf::uint32 PBItemObjMW::playeraddpointlastlevel(int index) const {
  return playeraddpointlastlevel_.Get(index);
}
inline void PBItemObjMW::set_playeraddpointlastlevel(int index, ::google::protobuf::uint32 value) {
  playeraddpointlastlevel_.Set(index, value);
}
inline void PBItemObjMW::add_playeraddpointlastlevel(::google::protobuf::uint32 value) {
  playeraddpointlastlevel_.Add(value);
}

// optional uint32 LeftPointsLastLevel = 35;
inline bool PBItemObjMW::has_leftpointslastlevel() const {
  return _has_bit(34);
}
inline void PBItemObjMW::clear_leftpointslastlevel() {
  leftpointslastlevel_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBItemObjMW::leftpointslastlevel() const {
  return leftpointslastlevel_;
}
inline void PBItemObjMW::set_leftpointslastlevel(::google::protobuf::uint32 value) {
  _set_bit(34);
  leftpointslastlevel_ = value;
}

// optional uint32 NewAddPoints = 36;
inline bool PBItemObjMW::has_newaddpoints() const {
  return _has_bit(35);
}
inline void PBItemObjMW::clear_newaddpoints() {
  newaddpoints_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBItemObjMW::newaddpoints() const {
  return newaddpoints_;
}
inline void PBItemObjMW::set_newaddpoints(::google::protobuf::uint32 value) {
  _set_bit(35);
  newaddpoints_ = value;
}

// optional uint32 NewAddSkillPoints = 37;
inline bool PBItemObjMW::has_newaddskillpoints() const {
  return _has_bit(36);
}
inline void PBItemObjMW::clear_newaddskillpoints() {
  newaddskillpoints_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBItemObjMW::newaddskillpoints() const {
  return newaddskillpoints_;
}
inline void PBItemObjMW::set_newaddskillpoints(::google::protobuf::uint32 value) {
  _set_bit(36);
  newaddskillpoints_ = value;
}

// optional uint32 StepClearState = 38;
inline bool PBItemObjMW::has_stepclearstate() const {
  return _has_bit(37);
}
inline void PBItemObjMW::clear_stepclearstate() {
  stepclearstate_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBItemObjMW::stepclearstate() const {
  return stepclearstate_;
}
inline void PBItemObjMW::set_stepclearstate(::google::protobuf::uint32 value) {
  _set_bit(37);
  stepclearstate_ = value;
}

// optional uint32 LastAddedSkillBoxIndex = 39;
inline bool PBItemObjMW::has_lastaddedskillboxindex() const {
  return _has_bit(38);
}
inline void PBItemObjMW::clear_lastaddedskillboxindex() {
  lastaddedskillboxindex_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBItemObjMW::lastaddedskillboxindex() const {
  return lastaddedskillboxindex_;
}
inline void PBItemObjMW::set_lastaddedskillboxindex(::google::protobuf::uint32 value) {
  _set_bit(38);
  lastaddedskillboxindex_ = value;
}

// optional uint32 LastLevelProcessVal = 40;
inline bool PBItemObjMW::has_lastlevelprocessval() const {
  return _has_bit(39);
}
inline void PBItemObjMW::clear_lastlevelprocessval() {
  lastlevelprocessval_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBItemObjMW::lastlevelprocessval() const {
  return lastlevelprocessval_;
}
inline void PBItemObjMW::set_lastlevelprocessval(::google::protobuf::uint32 value) {
  _set_bit(39);
  lastlevelprocessval_ = value;
}

// optional uint32 NextActBoxIndex = 41;
inline bool PBItemObjMW::has_nextactboxindex() const {
  return _has_bit(40);
}
inline void PBItemObjMW::clear_nextactboxindex() {
  nextactboxindex_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBItemObjMW::nextactboxindex() const {
  return nextactboxindex_;
}
inline void PBItemObjMW::set_nextactboxindex(::google::protobuf::uint32 value) {
  _set_bit(40);
  nextactboxindex_ = value;
}

// optional uint32 LastLevelNextActBox = 42;
inline bool PBItemObjMW::has_lastlevelnextactbox() const {
  return _has_bit(41);
}
inline void PBItemObjMW::clear_lastlevelnextactbox() {
  lastlevelnextactbox_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBItemObjMW::lastlevelnextactbox() const {
  return lastlevelnextactbox_;
}
inline void PBItemObjMW::set_lastlevelnextactbox(::google::protobuf::uint32 value) {
  _set_bit(41);
  lastlevelnextactbox_ = value;
}

// optional uint32 QLTempID = 43;
inline bool PBItemObjMW::has_qltempid() const {
  return _has_bit(42);
}
inline void PBItemObjMW::clear_qltempid() {
  qltempid_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBItemObjMW::qltempid() const {
  return qltempid_;
}
inline void PBItemObjMW::set_qltempid(::google::protobuf::uint32 value) {
  _set_bit(42);
  qltempid_ = value;
}

// -------------------------------------------------------------------

// PBItemBox

// optional uint32 ReleaseIndex = 1;
inline bool PBItemBox::has_releaseindex() const {
  return _has_bit(0);
}
inline void PBItemBox::clear_releaseindex() {
  releaseindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemBox::releaseindex() const {
  return releaseindex_;
}
inline void PBItemBox::set_releaseindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  releaseindex_ = value;
}

// repeated .PBItemObject ItemObjects = 2;
inline int PBItemBox::itemobjects_size() const {
  return itemobjects_.size();
}
inline void PBItemBox::clear_itemobjects() {
  itemobjects_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
PBItemBox::itemobjects() const {
  return itemobjects_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >*
PBItemBox::mutable_itemobjects() {
  return &itemobjects_;
}
inline const ::PBItemObject& PBItemBox::itemobjects(int index) const {
  return itemobjects_.Get(index);
}
inline ::PBItemObject* PBItemBox::mutable_itemobjects(int index) {
  return itemobjects_.Mutable(index);
}
inline ::PBItemObject* PBItemBox::add_itemobjects() {
  return itemobjects_.Add();
}

// repeated .PBItemObject KitBag = 3;
inline int PBItemBox::kitbag_size() const {
  return kitbag_.size();
}
inline void PBItemBox::clear_kitbag() {
  kitbag_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
PBItemBox::kitbag() const {
  return kitbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >*
PBItemBox::mutable_kitbag() {
  return &kitbag_;
}
inline const ::PBItemObject& PBItemBox::kitbag(int index) const {
  return kitbag_.Get(index);
}
inline ::PBItemObject* PBItemBox::mutable_kitbag(int index) {
  return kitbag_.Mutable(index);
}
inline ::PBItemObject* PBItemBox::add_kitbag() {
  return kitbag_.Add();
}

// repeated uint32 KitLocked = 4;
inline int PBItemBox::kitlocked_size() const {
  return kitlocked_.size();
}
inline void PBItemBox::clear_kitlocked() {
  kitlocked_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemBox::kitlocked() const {
  return kitlocked_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemBox::mutable_kitlocked() {
  return &kitlocked_;
}
inline ::google::protobuf::uint32 PBItemBox::kitlocked(int index) const {
  return kitlocked_.Get(index);
}
inline void PBItemBox::set_kitlocked(int index, ::google::protobuf::uint32 value) {
  kitlocked_.Set(index, value);
}
inline void PBItemBox::add_kitlocked(::google::protobuf::uint32 value) {
  kitlocked_.Add(value);
}

// -------------------------------------------------------------------

// PBTransform

// optional uint32 HasTransform = 1;
inline bool PBTransform::has_hastransform() const {
  return _has_bit(0);
}
inline void PBTransform::clear_hastransform() {
  hastransform_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTransform::hastransform() const {
  return hastransform_;
}
inline void PBTransform::set_hastransform(::google::protobuf::uint32 value) {
  _set_bit(0);
  hastransform_ = value;
}

// optional uint32 Sex = 2;
inline bool PBTransform::has_sex() const {
  return _has_bit(1);
}
inline void PBTransform::clear_sex() {
  sex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTransform::sex() const {
  return sex_;
}
inline void PBTransform::set_sex(::google::protobuf::uint32 value) {
  _set_bit(1);
  sex_ = value;
}

// optional uint32 StateID = 3;
inline bool PBTransform::has_stateid() const {
  return _has_bit(2);
}
inline void PBTransform::clear_stateid() {
  stateid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTransform::stateid() const {
  return stateid_;
}
inline void PBTransform::set_stateid(::google::protobuf::uint32 value) {
  _set_bit(2);
  stateid_ = value;
}

// optional uint32 WeaponID = 4;
inline bool PBTransform::has_weaponid() const {
  return _has_bit(3);
}
inline void PBTransform::clear_weaponid() {
  weaponid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTransform::weaponid() const {
  return weaponid_;
}
inline void PBTransform::set_weaponid(::google::protobuf::uint32 value) {
  _set_bit(3);
  weaponid_ = value;
}

// optional uint32 ClothID = 5;
inline bool PBTransform::has_clothid() const {
  return _has_bit(4);
}
inline void PBTransform::clear_clothid() {
  clothid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTransform::clothid() const {
  return clothid_;
}
inline void PBTransform::set_clothid(::google::protobuf::uint32 value) {
  _set_bit(4);
  clothid_ = value;
}

// optional uint32 FashionID = 6;
inline bool PBTransform::has_fashionid() const {
  return _has_bit(5);
}
inline void PBTransform::clear_fashionid() {
  fashionid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTransform::fashionid() const {
  return fashionid_;
}
inline void PBTransform::set_fashionid(::google::protobuf::uint32 value) {
  _set_bit(5);
  fashionid_ = value;
}

// optional uint32 NpcID = 7;
inline bool PBTransform::has_npcid() const {
  return _has_bit(6);
}
inline void PBTransform::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTransform::npcid() const {
  return npcid_;
}
inline void PBTransform::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(6);
  npcid_ = value;
}

// -------------------------------------------------------------------

// PBBuffObject

// optional uint32 BuffID = 1;
inline bool PBBuffObject::has_buffid() const {
  return _has_bit(0);
}
inline void PBBuffObject::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBuffObject::buffid() const {
  return buffid_;
}
inline void PBBuffObject::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(0);
  buffid_ = value;
}

// optional uint64 PersistTime = 2;
inline bool PBBuffObject::has_persisttime() const {
  return _has_bit(1);
}
inline void PBBuffObject::clear_persisttime() {
  persisttime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBBuffObject::persisttime() const {
  return persisttime_;
}
inline void PBBuffObject::set_persisttime(::google::protobuf::uint64 value) {
  _set_bit(1);
  persisttime_ = value;
}

// optional uint32 SrcEntityID = 3;
inline bool PBBuffObject::has_srcentityid() const {
  return _has_bit(2);
}
inline void PBBuffObject::clear_srcentityid() {
  srcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBuffObject::srcentityid() const {
  return srcentityid_;
}
inline void PBBuffObject::set_srcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcentityid_ = value;
}

// optional uint32 TimerType = 4;
inline bool PBBuffObject::has_timertype() const {
  return _has_bit(3);
}
inline void PBBuffObject::clear_timertype() {
  timertype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBuffObject::timertype() const {
  return timertype_;
}
inline void PBBuffObject::set_timertype(::google::protobuf::uint32 value) {
  _set_bit(3);
  timertype_ = value;
}

// optional uint32 LastInterval = 5;
inline bool PBBuffObject::has_lastinterval() const {
  return _has_bit(4);
}
inline void PBBuffObject::clear_lastinterval() {
  lastinterval_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBuffObject::lastinterval() const {
  return lastinterval_;
}
inline void PBBuffObject::set_lastinterval(::google::protobuf::uint32 value) {
  _set_bit(4);
  lastinterval_ = value;
}

// repeated uint32 Parames = 6;
inline int PBBuffObject::parames_size() const {
  return parames_.size();
}
inline void PBBuffObject::clear_parames() {
  parames_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBuffObject::parames() const {
  return parames_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBuffObject::mutable_parames() {
  return &parames_;
}
inline ::google::protobuf::uint32 PBBuffObject::parames(int index) const {
  return parames_.Get(index);
}
inline void PBBuffObject::set_parames(int index, ::google::protobuf::uint32 value) {
  parames_.Set(index, value);
}
inline void PBBuffObject::add_parames(::google::protobuf::uint32 value) {
  parames_.Add(value);
}

// repeated uint32 Parames2 = 7;
inline int PBBuffObject::parames2_size() const {
  return parames2_.size();
}
inline void PBBuffObject::clear_parames2() {
  parames2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBuffObject::parames2() const {
  return parames2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBuffObject::mutable_parames2() {
  return &parames2_;
}
inline ::google::protobuf::uint32 PBBuffObject::parames2(int index) const {
  return parames2_.Get(index);
}
inline void PBBuffObject::set_parames2(int index, ::google::protobuf::uint32 value) {
  parames2_.Set(index, value);
}
inline void PBBuffObject::add_parames2(::google::protobuf::uint32 value) {
  parames2_.Add(value);
}

// optional uint32 BackDamage = 8;
inline bool PBBuffObject::has_backdamage() const {
  return _has_bit(7);
}
inline void PBBuffObject::clear_backdamage() {
  backdamage_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBBuffObject::backdamage() const {
  return backdamage_;
}
inline void PBBuffObject::set_backdamage(::google::protobuf::uint32 value) {
  _set_bit(7);
  backdamage_ = value;
}

// optional uint32 ListID = 9;
inline bool PBBuffObject::has_listid() const {
  return _has_bit(8);
}
inline void PBBuffObject::clear_listid() {
  listid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBBuffObject::listid() const {
  return listid_;
}
inline void PBBuffObject::set_listid(::google::protobuf::uint32 value) {
  _set_bit(8);
  listid_ = value;
}

// optional uint32 SuperCount = 10;
inline bool PBBuffObject::has_supercount() const {
  return _has_bit(9);
}
inline void PBBuffObject::clear_supercount() {
  supercount_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBBuffObject::supercount() const {
  return supercount_;
}
inline void PBBuffObject::set_supercount(::google::protobuf::uint32 value) {
  _set_bit(9);
  supercount_ = value;
}

// -------------------------------------------------------------------

// PBBuffList

// optional uint32 BuffNumber = 1;
inline bool PBBuffList::has_buffnumber() const {
  return _has_bit(0);
}
inline void PBBuffList::clear_buffnumber() {
  buffnumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBuffList::buffnumber() const {
  return buffnumber_;
}
inline void PBBuffList::set_buffnumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  buffnumber_ = value;
}

// repeated .PBBuffObject BuffObjects = 2;
inline int PBBuffList::buffobjects_size() const {
  return buffobjects_.size();
}
inline void PBBuffList::clear_buffobjects() {
  buffobjects_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBuffObject >&
PBBuffList::buffobjects() const {
  return buffobjects_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBuffObject >*
PBBuffList::mutable_buffobjects() {
  return &buffobjects_;
}
inline const ::PBBuffObject& PBBuffList::buffobjects(int index) const {
  return buffobjects_.Get(index);
}
inline ::PBBuffObject* PBBuffList::mutable_buffobjects(int index) {
  return buffobjects_.Mutable(index);
}
inline ::PBBuffObject* PBBuffList::add_buffobjects() {
  return buffobjects_.Add();
}

// optional .PBTransform Transform = 3;
inline bool PBBuffList::has_transform() const {
  return _has_bit(2);
}
inline void PBBuffList::clear_transform() {
  if (transform_ != NULL) transform_->::PBTransform::Clear();
  _clear_bit(2);
}
inline const ::PBTransform& PBBuffList::transform() const {
  return transform_ != NULL ? *transform_ : *default_instance_->transform_;
}
inline ::PBTransform* PBBuffList::mutable_transform() {
  _set_bit(2);
  if (transform_ == NULL) transform_ = new ::PBTransform;
  return transform_;
}

// -------------------------------------------------------------------

// PBStateParam

// optional uint32 StateType = 1;
inline bool PBStateParam::has_statetype() const {
  return _has_bit(0);
}
inline void PBStateParam::clear_statetype() {
  statetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBStateParam::statetype() const {
  return statetype_;
}
inline void PBStateParam::set_statetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  statetype_ = value;
}

// optional uint32 From = 2;
inline bool PBStateParam::has_from() const {
  return _has_bit(1);
}
inline void PBStateParam::clear_from() {
  from_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBStateParam::from() const {
  return from_;
}
inline void PBStateParam::set_from(::google::protobuf::uint32 value) {
  _set_bit(1);
  from_ = value;
}

// optional uint32 Index = 3;
inline bool PBStateParam::has_index() const {
  return _has_bit(2);
}
inline void PBStateParam::clear_index() {
  index_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBStateParam::index() const {
  return index_;
}
inline void PBStateParam::set_index(::google::protobuf::uint32 value) {
  _set_bit(2);
  index_ = value;
}

// optional uint32 Parames1 = 4;
inline bool PBStateParam::has_parames1() const {
  return _has_bit(3);
}
inline void PBStateParam::clear_parames1() {
  parames1_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBStateParam::parames1() const {
  return parames1_;
}
inline void PBStateParam::set_parames1(::google::protobuf::uint32 value) {
  _set_bit(3);
  parames1_ = value;
}

// optional uint32 Parames2 = 5;
inline bool PBStateParam::has_parames2() const {
  return _has_bit(4);
}
inline void PBStateParam::clear_parames2() {
  parames2_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBStateParam::parames2() const {
  return parames2_;
}
inline void PBStateParam::set_parames2(::google::protobuf::uint32 value) {
  _set_bit(4);
  parames2_ = value;
}

// optional uint32 InState = 6;
inline bool PBStateParam::has_instate() const {
  return _has_bit(5);
}
inline void PBStateParam::clear_instate() {
  instate_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBStateParam::instate() const {
  return instate_;
}
inline void PBStateParam::set_instate(::google::protobuf::uint32 value) {
  _set_bit(5);
  instate_ = value;
}

// optional fixed32 BuffAdd = 7;
inline bool PBStateParam::has_buffadd() const {
  return _has_bit(6);
}
inline void PBStateParam::clear_buffadd() {
  buffadd_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBStateParam::buffadd() const {
  return buffadd_;
}
inline void PBStateParam::set_buffadd(::google::protobuf::uint32 value) {
  _set_bit(6);
  buffadd_ = value;
}

// -------------------------------------------------------------------

// PBStateList

// repeated .PBStateParam StateParamObj = 1;
inline int PBStateList::stateparamobj_size() const {
  return stateparamobj_.size();
}
inline void PBStateList::clear_stateparamobj() {
  stateparamobj_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBStateParam >&
PBStateList::stateparamobj() const {
  return stateparamobj_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBStateParam >*
PBStateList::mutable_stateparamobj() {
  return &stateparamobj_;
}
inline const ::PBStateParam& PBStateList::stateparamobj(int index) const {
  return stateparamobj_.Get(index);
}
inline ::PBStateParam* PBStateList::mutable_stateparamobj(int index) {
  return stateparamobj_.Mutable(index);
}
inline ::PBStateParam* PBStateList::add_stateparamobj() {
  return stateparamobj_.Add();
}

// -------------------------------------------------------------------

// PBSkillObject

// optional uint32 SkillID = 1;
inline bool PBSkillObject::has_skillid() const {
  return _has_bit(0);
}
inline void PBSkillObject::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillObject::skillid() const {
  return skillid_;
}
inline void PBSkillObject::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 SkillLevel = 2;
inline bool PBSkillObject::has_skilllevel() const {
  return _has_bit(1);
}
inline void PBSkillObject::clear_skilllevel() {
  skilllevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSkillObject::skilllevel() const {
  return skilllevel_;
}
inline void PBSkillObject::set_skilllevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  skilllevel_ = value;
}

// optional uint32 Cooldown = 3;
inline bool PBSkillObject::has_cooldown() const {
  return _has_bit(2);
}
inline void PBSkillObject::clear_cooldown() {
  cooldown_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkillObject::cooldown() const {
  return cooldown_;
}
inline void PBSkillObject::set_cooldown(::google::protobuf::uint32 value) {
  _set_bit(2);
  cooldown_ = value;
}

// optional uint32 IncLevel = 4;
inline bool PBSkillObject::has_inclevel() const {
  return _has_bit(3);
}
inline void PBSkillObject::clear_inclevel() {
  inclevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSkillObject::inclevel() const {
  return inclevel_;
}
inline void PBSkillObject::set_inclevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  inclevel_ = value;
}

// -------------------------------------------------------------------

// PBSkillList

// optional uint32 SkillNumber = 1;
inline bool PBSkillList::has_skillnumber() const {
  return _has_bit(0);
}
inline void PBSkillList::clear_skillnumber() {
  skillnumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillList::skillnumber() const {
  return skillnumber_;
}
inline void PBSkillList::set_skillnumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillnumber_ = value;
}

// repeated .PBSkillObject SkillObjects = 2;
inline int PBSkillList::skillobjects_size() const {
  return skillobjects_.size();
}
inline void PBSkillList::clear_skillobjects() {
  skillobjects_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillObject >&
PBSkillList::skillobjects() const {
  return skillobjects_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillObject >*
PBSkillList::mutable_skillobjects() {
  return &skillobjects_;
}
inline const ::PBSkillObject& PBSkillList::skillobjects(int index) const {
  return skillobjects_.Get(index);
}
inline ::PBSkillObject* PBSkillList::mutable_skillobjects(int index) {
  return skillobjects_.Mutable(index);
}
inline ::PBSkillObject* PBSkillList::add_skillobjects() {
  return skillobjects_.Add();
}

// -------------------------------------------------------------------

// PBShortcut

// optional uint32 Shortcut = 1;
inline bool PBShortcut::has_shortcut() const {
  return _has_bit(0);
}
inline void PBShortcut::clear_shortcut() {
  shortcut_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBShortcut::shortcut() const {
  return shortcut_;
}
inline void PBShortcut::set_shortcut(::google::protobuf::uint32 value) {
  _set_bit(0);
  shortcut_ = value;
}

// optional uint32 mType = 2;
inline bool PBShortcut::has_mtype() const {
  return _has_bit(1);
}
inline void PBShortcut::clear_mtype() {
  mtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBShortcut::mtype() const {
  return mtype_;
}
inline void PBShortcut::set_mtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  mtype_ = value;
}

// optional uint32 mIndex = 3;
inline bool PBShortcut::has_mindex() const {
  return _has_bit(2);
}
inline void PBShortcut::clear_mindex() {
  mindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBShortcut::mindex() const {
  return mindex_;
}
inline void PBShortcut::set_mindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  mindex_ = value;
}

// optional uint32 mLabelType = 4;
inline bool PBShortcut::has_mlabeltype() const {
  return _has_bit(3);
}
inline void PBShortcut::clear_mlabeltype() {
  mlabeltype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBShortcut::mlabeltype() const {
  return mlabeltype_;
}
inline void PBShortcut::set_mlabeltype(::google::protobuf::uint32 value) {
  _set_bit(3);
  mlabeltype_ = value;
}

// optional uint32 mLabelIndex = 5;
inline bool PBShortcut::has_mlabelindex() const {
  return _has_bit(4);
}
inline void PBShortcut::clear_mlabelindex() {
  mlabelindex_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBShortcut::mlabelindex() const {
  return mlabelindex_;
}
inline void PBShortcut::set_mlabelindex(::google::protobuf::uint32 value) {
  _set_bit(4);
  mlabelindex_ = value;
}

// optional uint32 Param1 = 6;
inline bool PBShortcut::has_param1() const {
  return _has_bit(5);
}
inline void PBShortcut::clear_param1() {
  param1_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBShortcut::param1() const {
  return param1_;
}
inline void PBShortcut::set_param1(::google::protobuf::uint32 value) {
  _set_bit(5);
  param1_ = value;
}

// -------------------------------------------------------------------

// PBShortcutList

// optional uint32 ShortcutNumber = 1;
inline bool PBShortcutList::has_shortcutnumber() const {
  return _has_bit(0);
}
inline void PBShortcutList::clear_shortcutnumber() {
  shortcutnumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBShortcutList::shortcutnumber() const {
  return shortcutnumber_;
}
inline void PBShortcutList::set_shortcutnumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  shortcutnumber_ = value;
}

// repeated .PBShortcut Shortcuts = 2;
inline int PBShortcutList::shortcuts_size() const {
  return shortcuts_.size();
}
inline void PBShortcutList::clear_shortcuts() {
  shortcuts_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBShortcut >&
PBShortcutList::shortcuts() const {
  return shortcuts_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBShortcut >*
PBShortcutList::mutable_shortcuts() {
  return &shortcuts_;
}
inline const ::PBShortcut& PBShortcutList::shortcuts(int index) const {
  return shortcuts_.Get(index);
}
inline ::PBShortcut* PBShortcutList::mutable_shortcuts(int index) {
  return shortcuts_.Mutable(index);
}
inline ::PBShortcut* PBShortcutList::add_shortcuts() {
  return shortcuts_.Add();
}

// repeated uint32 HelpStatus = 3;
inline int PBShortcutList::helpstatus_size() const {
  return helpstatus_.size();
}
inline void PBShortcutList::clear_helpstatus() {
  helpstatus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBShortcutList::helpstatus() const {
  return helpstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBShortcutList::mutable_helpstatus() {
  return &helpstatus_;
}
inline ::google::protobuf::uint32 PBShortcutList::helpstatus(int index) const {
  return helpstatus_.Get(index);
}
inline void PBShortcutList::set_helpstatus(int index, ::google::protobuf::uint32 value) {
  helpstatus_.Set(index, value);
}
inline void PBShortcutList::add_helpstatus(::google::protobuf::uint32 value) {
  helpstatus_.Add(value);
}

// -------------------------------------------------------------------

// PBKillData

// optional uint32 KillID = 1;
inline bool PBKillData::has_killid() const {
  return _has_bit(0);
}
inline void PBKillData::clear_killid() {
  killid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBKillData::killid() const {
  return killid_;
}
inline void PBKillData::set_killid(::google::protobuf::uint32 value) {
  _set_bit(0);
  killid_ = value;
}

// optional uint32 KillTime = 2;
inline bool PBKillData::has_killtime() const {
  return _has_bit(1);
}
inline void PBKillData::clear_killtime() {
  killtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBKillData::killtime() const {
  return killtime_;
}
inline void PBKillData::set_killtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  killtime_ = value;
}

// -------------------------------------------------------------------

// PBWizard

// repeated uint32 WizardPoint = 1;
inline int PBWizard::wizardpoint_size() const {
  return wizardpoint_.size();
}
inline void PBWizard::clear_wizardpoint() {
  wizardpoint_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizard::wizardpoint() const {
  return wizardpoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizard::mutable_wizardpoint() {
  return &wizardpoint_;
}
inline ::google::protobuf::uint32 PBWizard::wizardpoint(int index) const {
  return wizardpoint_.Get(index);
}
inline void PBWizard::set_wizardpoint(int index, ::google::protobuf::uint32 value) {
  wizardpoint_.Set(index, value);
}
inline void PBWizard::add_wizardpoint(::google::protobuf::uint32 value) {
  wizardpoint_.Add(value);
}

// repeated uint32 WizardValue = 2;
inline int PBWizard::wizardvalue_size() const {
  return wizardvalue_.size();
}
inline void PBWizard::clear_wizardvalue() {
  wizardvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizard::wizardvalue() const {
  return wizardvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizard::mutable_wizardvalue() {
  return &wizardvalue_;
}
inline ::google::protobuf::uint32 PBWizard::wizardvalue(int index) const {
  return wizardvalue_.Get(index);
}
inline void PBWizard::set_wizardvalue(int index, ::google::protobuf::uint32 value) {
  wizardvalue_.Set(index, value);
}
inline void PBWizard::add_wizardvalue(::google::protobuf::uint32 value) {
  wizardvalue_.Add(value);
}

// repeated uint32 WizardSubmit = 3;
inline int PBWizard::wizardsubmit_size() const {
  return wizardsubmit_.size();
}
inline void PBWizard::clear_wizardsubmit() {
  wizardsubmit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizard::wizardsubmit() const {
  return wizardsubmit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizard::mutable_wizardsubmit() {
  return &wizardsubmit_;
}
inline ::google::protobuf::uint32 PBWizard::wizardsubmit(int index) const {
  return wizardsubmit_.Get(index);
}
inline void PBWizard::set_wizardsubmit(int index, ::google::protobuf::uint32 value) {
  wizardsubmit_.Set(index, value);
}
inline void PBWizard::add_wizardsubmit(::google::protobuf::uint32 value) {
  wizardsubmit_.Add(value);
}

// repeated uint32 WizardIncrease = 4;
inline int PBWizard::wizardincrease_size() const {
  return wizardincrease_.size();
}
inline void PBWizard::clear_wizardincrease() {
  wizardincrease_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizard::wizardincrease() const {
  return wizardincrease_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizard::mutable_wizardincrease() {
  return &wizardincrease_;
}
inline ::google::protobuf::uint32 PBWizard::wizardincrease(int index) const {
  return wizardincrease_.Get(index);
}
inline void PBWizard::set_wizardincrease(int index, ::google::protobuf::uint32 value) {
  wizardincrease_.Set(index, value);
}
inline void PBWizard::add_wizardincrease(::google::protobuf::uint32 value) {
  wizardincrease_.Add(value);
}

// optional uint32 Trend = 5;
inline bool PBWizard::has_trend() const {
  return _has_bit(4);
}
inline void PBWizard::clear_trend() {
  trend_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBWizard::trend() const {
  return trend_;
}
inline void PBWizard::set_trend(::google::protobuf::uint32 value) {
  _set_bit(4);
  trend_ = value;
}

// optional uint32 CombatFame = 6;
inline bool PBWizard::has_combatfame() const {
  return _has_bit(5);
}
inline void PBWizard::clear_combatfame() {
  combatfame_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBWizard::combatfame() const {
  return combatfame_;
}
inline void PBWizard::set_combatfame(::google::protobuf::uint32 value) {
  _set_bit(5);
  combatfame_ = value;
}

// optional uint32 RepeFame = 7;
inline bool PBWizard::has_repefame() const {
  return _has_bit(6);
}
inline void PBWizard::clear_repefame() {
  repefame_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBWizard::repefame() const {
  return repefame_;
}
inline void PBWizard::set_repefame(::google::protobuf::uint32 value) {
  _set_bit(6);
  repefame_ = value;
}

// optional uint32 CommonFame = 8;
inline bool PBWizard::has_commonfame() const {
  return _has_bit(7);
}
inline void PBWizard::clear_commonfame() {
  commonfame_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBWizard::commonfame() const {
  return commonfame_;
}
inline void PBWizard::set_commonfame(::google::protobuf::uint32 value) {
  _set_bit(7);
  commonfame_ = value;
}

// optional uint32 CombatToday = 9;
inline bool PBWizard::has_combattoday() const {
  return _has_bit(8);
}
inline void PBWizard::clear_combattoday() {
  combattoday_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBWizard::combattoday() const {
  return combattoday_;
}
inline void PBWizard::set_combattoday(::google::protobuf::uint32 value) {
  _set_bit(8);
  combattoday_ = value;
}

// optional uint32 RepeToday = 10;
inline bool PBWizard::has_repetoday() const {
  return _has_bit(9);
}
inline void PBWizard::clear_repetoday() {
  repetoday_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBWizard::repetoday() const {
  return repetoday_;
}
inline void PBWizard::set_repetoday(::google::protobuf::uint32 value) {
  _set_bit(9);
  repetoday_ = value;
}

// optional uint32 CommonToday = 11;
inline bool PBWizard::has_commontoday() const {
  return _has_bit(10);
}
inline void PBWizard::clear_commontoday() {
  commontoday_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBWizard::commontoday() const {
  return commontoday_;
}
inline void PBWizard::set_commontoday(::google::protobuf::uint32 value) {
  _set_bit(10);
  commontoday_ = value;
}

// optional uint32 CombatAll = 12;
inline bool PBWizard::has_combatall() const {
  return _has_bit(11);
}
inline void PBWizard::clear_combatall() {
  combatall_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBWizard::combatall() const {
  return combatall_;
}
inline void PBWizard::set_combatall(::google::protobuf::uint32 value) {
  _set_bit(11);
  combatall_ = value;
}

// optional uint32 RepeAll = 13;
inline bool PBWizard::has_repeall() const {
  return _has_bit(12);
}
inline void PBWizard::clear_repeall() {
  repeall_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBWizard::repeall() const {
  return repeall_;
}
inline void PBWizard::set_repeall(::google::protobuf::uint32 value) {
  _set_bit(12);
  repeall_ = value;
}

// optional uint32 CommonAll = 14;
inline bool PBWizard::has_commonall() const {
  return _has_bit(13);
}
inline void PBWizard::clear_commonall() {
  commonall_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBWizard::commonall() const {
  return commonall_;
}
inline void PBWizard::set_commonall(::google::protobuf::uint32 value) {
  _set_bit(13);
  commonall_ = value;
}

// -------------------------------------------------------------------

// PBTelePostion

// optional uint32 Line = 1;
inline bool PBTelePostion::has_line() const {
  return _has_bit(0);
}
inline void PBTelePostion::clear_line() {
  line_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTelePostion::line() const {
  return line_;
}
inline void PBTelePostion::set_line(::google::protobuf::uint32 value) {
  _set_bit(0);
  line_ = value;
}

// optional uint32 Map = 2;
inline bool PBTelePostion::has_map() const {
  return _has_bit(1);
}
inline void PBTelePostion::clear_map() {
  map_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTelePostion::map() const {
  return map_;
}
inline void PBTelePostion::set_map(::google::protobuf::uint32 value) {
  _set_bit(1);
  map_ = value;
}

// optional uint32 PosX = 3;
inline bool PBTelePostion::has_posx() const {
  return _has_bit(2);
}
inline void PBTelePostion::clear_posx() {
  posx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTelePostion::posx() const {
  return posx_;
}
inline void PBTelePostion::set_posx(::google::protobuf::uint32 value) {
  _set_bit(2);
  posx_ = value;
}

// optional uint32 PosY = 4;
inline bool PBTelePostion::has_posy() const {
  return _has_bit(3);
}
inline void PBTelePostion::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTelePostion::posy() const {
  return posy_;
}
inline void PBTelePostion::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// -------------------------------------------------------------------

// PBPlayerBasicInfo

// optional uint32 Str = 1;
inline bool PBPlayerBasicInfo::has_str() const {
  return _has_bit(0);
}
inline void PBPlayerBasicInfo::clear_str() {
  str_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::str() const {
  return str_;
}
inline void PBPlayerBasicInfo::set_str(::google::protobuf::uint32 value) {
  _set_bit(0);
  str_ = value;
}

// optional uint32 Sta = 2;
inline bool PBPlayerBasicInfo::has_sta() const {
  return _has_bit(1);
}
inline void PBPlayerBasicInfo::clear_sta() {
  sta_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::sta() const {
  return sta_;
}
inline void PBPlayerBasicInfo::set_sta(::google::protobuf::uint32 value) {
  _set_bit(1);
  sta_ = value;
}

// optional uint32 Spr = 3;
inline bool PBPlayerBasicInfo::has_spr() const {
  return _has_bit(2);
}
inline void PBPlayerBasicInfo::clear_spr() {
  spr_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::spr() const {
  return spr_;
}
inline void PBPlayerBasicInfo::set_spr(::google::protobuf::uint32 value) {
  _set_bit(2);
  spr_ = value;
}

// optional uint32 Con = 4;
inline bool PBPlayerBasicInfo::has_con() const {
  return _has_bit(3);
}
inline void PBPlayerBasicInfo::clear_con() {
  con_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::con() const {
  return con_;
}
inline void PBPlayerBasicInfo::set_con(::google::protobuf::uint32 value) {
  _set_bit(3);
  con_ = value;
}

// optional uint32 Wis = 5;
inline bool PBPlayerBasicInfo::has_wis() const {
  return _has_bit(4);
}
inline void PBPlayerBasicInfo::clear_wis() {
  wis_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::wis() const {
  return wis_;
}
inline void PBPlayerBasicInfo::set_wis(::google::protobuf::uint32 value) {
  _set_bit(4);
  wis_ = value;
}

// optional uint32 RemainPoint = 6;
inline bool PBPlayerBasicInfo::has_remainpoint() const {
  return _has_bit(5);
}
inline void PBPlayerBasicInfo::clear_remainpoint() {
  remainpoint_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::remainpoint() const {
  return remainpoint_;
}
inline void PBPlayerBasicInfo::set_remainpoint(::google::protobuf::uint32 value) {
  _set_bit(5);
  remainpoint_ = value;
}

// optional uint32 SkillPoint = 7;
inline bool PBPlayerBasicInfo::has_skillpoint() const {
  return _has_bit(6);
}
inline void PBPlayerBasicInfo::clear_skillpoint() {
  skillpoint_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::skillpoint() const {
  return skillpoint_;
}
inline void PBPlayerBasicInfo::set_skillpoint(::google::protobuf::uint32 value) {
  _set_bit(6);
  skillpoint_ = value;
}

// optional uint32 ProLevel = 8;
inline bool PBPlayerBasicInfo::has_prolevel() const {
  return _has_bit(7);
}
inline void PBPlayerBasicInfo::clear_prolevel() {
  prolevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::prolevel() const {
  return prolevel_;
}
inline void PBPlayerBasicInfo::set_prolevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  prolevel_ = value;
}

// optional uint32 ProExp = 9;
inline bool PBPlayerBasicInfo::has_proexp() const {
  return _has_bit(8);
}
inline void PBPlayerBasicInfo::clear_proexp() {
  proexp_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::proexp() const {
  return proexp_;
}
inline void PBPlayerBasicInfo::set_proexp(::google::protobuf::uint32 value) {
  _set_bit(8);
  proexp_ = value;
}

// optional uint32 ShowFashion = 10;
inline bool PBPlayerBasicInfo::has_showfashion() const {
  return _has_bit(9);
}
inline void PBPlayerBasicInfo::clear_showfashion() {
  showfashion_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::showfashion() const {
  return showfashion_;
}
inline void PBPlayerBasicInfo::set_showfashion(::google::protobuf::uint32 value) {
  _set_bit(9);
  showfashion_ = value;
}

// optional uint32 ShowEquip = 11;
inline bool PBPlayerBasicInfo::has_showequip() const {
  return _has_bit(10);
}
inline void PBPlayerBasicInfo::clear_showequip() {
  showequip_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPlayerBasicInfo::showequip() const {
  return showequip_;
}
inline void PBPlayerBasicInfo::set_showequip(::google::protobuf::uint32 value) {
  _set_bit(10);
  showequip_ = value;
}

// -------------------------------------------------------------------

// PBMonsterRecordInfo

// repeated uint32 ActiveCard = 1;
inline int PBMonsterRecordInfo::activecard_size() const {
  return activecard_.size();
}
inline void PBMonsterRecordInfo::clear_activecard() {
  activecard_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMonsterRecordInfo::activecard() const {
  return activecard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMonsterRecordInfo::mutable_activecard() {
  return &activecard_;
}
inline ::google::protobuf::uint32 PBMonsterRecordInfo::activecard(int index) const {
  return activecard_.Get(index);
}
inline void PBMonsterRecordInfo::set_activecard(int index, ::google::protobuf::uint32 value) {
  activecard_.Set(index, value);
}
inline void PBMonsterRecordInfo::add_activecard(::google::protobuf::uint32 value) {
  activecard_.Add(value);
}

// repeated uint32 OwnCard = 2;
inline int PBMonsterRecordInfo::owncard_size() const {
  return owncard_.size();
}
inline void PBMonsterRecordInfo::clear_owncard() {
  owncard_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMonsterRecordInfo::owncard() const {
  return owncard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMonsterRecordInfo::mutable_owncard() {
  return &owncard_;
}
inline ::google::protobuf::uint32 PBMonsterRecordInfo::owncard(int index) const {
  return owncard_.Get(index);
}
inline void PBMonsterRecordInfo::set_owncard(int index, ::google::protobuf::uint32 value) {
  owncard_.Set(index, value);
}
inline void PBMonsterRecordInfo::add_owncard(::google::protobuf::uint32 value) {
  owncard_.Add(value);
}

// -------------------------------------------------------------------

// PBPlayerMWInfo

// optional uint32 AssignExpScl = 1;
inline bool PBPlayerMWInfo::has_assignexpscl() const {
  return _has_bit(0);
}
inline void PBPlayerMWInfo::clear_assignexpscl() {
  assignexpscl_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerMWInfo::assignexpscl() const {
  return assignexpscl_;
}
inline void PBPlayerMWInfo::set_assignexpscl(::google::protobuf::uint32 value) {
  _set_bit(0);
  assignexpscl_ = value;
}

// -------------------------------------------------------------------

// PBSingleCDGroup

// optional uint32 Index = 1;
inline bool PBSingleCDGroup::has_index() const {
  return _has_bit(0);
}
inline void PBSingleCDGroup::clear_index() {
  index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSingleCDGroup::index() const {
  return index_;
}
inline void PBSingleCDGroup::set_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  index_ = value;
}

// optional uint32 CDTime = 2;
inline bool PBSingleCDGroup::has_cdtime() const {
  return _has_bit(1);
}
inline void PBSingleCDGroup::clear_cdtime() {
  cdtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleCDGroup::cdtime() const {
  return cdtime_;
}
inline void PBSingleCDGroup::set_cdtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  cdtime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerCDGroupInfo

// repeated .PBSingleCDGroup CDGroup = 1;
inline int PBPlayerCDGroupInfo::cdgroup_size() const {
  return cdgroup_.size();
}
inline void PBPlayerCDGroupInfo::clear_cdgroup() {
  cdgroup_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleCDGroup >&
PBPlayerCDGroupInfo::cdgroup() const {
  return cdgroup_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleCDGroup >*
PBPlayerCDGroupInfo::mutable_cdgroup() {
  return &cdgroup_;
}
inline const ::PBSingleCDGroup& PBPlayerCDGroupInfo::cdgroup(int index) const {
  return cdgroup_.Get(index);
}
inline ::PBSingleCDGroup* PBPlayerCDGroupInfo::mutable_cdgroup(int index) {
  return cdgroup_.Mutable(index);
}
inline ::PBSingleCDGroup* PBPlayerCDGroupInfo::add_cdgroup() {
  return cdgroup_.Add();
}

// -------------------------------------------------------------------

// PBTelePosInfo

// optional .PBTelePostion TownPos = 1;
inline bool PBTelePosInfo::has_townpos() const {
  return _has_bit(0);
}
inline void PBTelePosInfo::clear_townpos() {
  if (townpos_ != NULL) townpos_->::PBTelePostion::Clear();
  _clear_bit(0);
}
inline const ::PBTelePostion& PBTelePosInfo::townpos() const {
  return townpos_ != NULL ? *townpos_ : *default_instance_->townpos_;
}
inline ::PBTelePostion* PBTelePosInfo::mutable_townpos() {
  _set_bit(0);
  if (townpos_ == NULL) townpos_ = new ::PBTelePostion;
  return townpos_;
}

// repeated .PBTelePostion TeleList = 2;
inline int PBTelePosInfo::telelist_size() const {
  return telelist_.size();
}
inline void PBTelePosInfo::clear_telelist() {
  telelist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTelePostion >&
PBTelePosInfo::telelist() const {
  return telelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTelePostion >*
PBTelePosInfo::mutable_telelist() {
  return &telelist_;
}
inline const ::PBTelePostion& PBTelePosInfo::telelist(int index) const {
  return telelist_.Get(index);
}
inline ::PBTelePostion* PBTelePosInfo::mutable_telelist(int index) {
  return telelist_.Mutable(index);
}
inline ::PBTelePostion* PBTelePosInfo::add_telelist() {
  return telelist_.Add();
}

// -------------------------------------------------------------------

// PBPlayerPVPInfo

// optional uint32 PKMode = 1;
inline bool PBPlayerPVPInfo::has_pkmode() const {
  return _has_bit(0);
}
inline void PBPlayerPVPInfo::clear_pkmode() {
  pkmode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::pkmode() const {
  return pkmode_;
}
inline void PBPlayerPVPInfo::set_pkmode(::google::protobuf::uint32 value) {
  _set_bit(0);
  pkmode_ = value;
}

// optional uint32 PKValue = 2;
inline bool PBPlayerPVPInfo::has_pkvalue() const {
  return _has_bit(1);
}
inline void PBPlayerPVPInfo::clear_pkvalue() {
  pkvalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::pkvalue() const {
  return pkvalue_;
}
inline void PBPlayerPVPInfo::set_pkvalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  pkvalue_ = value;
}

// optional uint32 KillNum = 3;
inline bool PBPlayerPVPInfo::has_killnum() const {
  return _has_bit(2);
}
inline void PBPlayerPVPInfo::clear_killnum() {
  killnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::killnum() const {
  return killnum_;
}
inline void PBPlayerPVPInfo::set_killnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  killnum_ = value;
}

// optional uint32 Honor = 4;
inline bool PBPlayerPVPInfo::has_honor() const {
  return _has_bit(3);
}
inline void PBPlayerPVPInfo::clear_honor() {
  honor_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::honor() const {
  return honor_;
}
inline void PBPlayerPVPInfo::set_honor(::google::protobuf::uint32 value) {
  _set_bit(3);
  honor_ = value;
}

// optional uint32 InHonPerDay = 5;
inline bool PBPlayerPVPInfo::has_inhonperday() const {
  return _has_bit(4);
}
inline void PBPlayerPVPInfo::clear_inhonperday() {
  inhonperday_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::inhonperday() const {
  return inhonperday_;
}
inline void PBPlayerPVPInfo::set_inhonperday(::google::protobuf::uint32 value) {
  _set_bit(4);
  inhonperday_ = value;
}

// optional uint32 OutHonPerDay = 6;
inline bool PBPlayerPVPInfo::has_outhonperday() const {
  return _has_bit(5);
}
inline void PBPlayerPVPInfo::clear_outhonperday() {
  outhonperday_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::outhonperday() const {
  return outhonperday_;
}
inline void PBPlayerPVPInfo::set_outhonperday(::google::protobuf::uint32 value) {
  _set_bit(5);
  outhonperday_ = value;
}

// repeated .PBKillData Kill = 7;
inline int PBPlayerPVPInfo::kill_size() const {
  return kill_.size();
}
inline void PBPlayerPVPInfo::clear_kill() {
  kill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBKillData >&
PBPlayerPVPInfo::kill() const {
  return kill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBKillData >*
PBPlayerPVPInfo::mutable_kill() {
  return &kill_;
}
inline const ::PBKillData& PBPlayerPVPInfo::kill(int index) const {
  return kill_.Get(index);
}
inline ::PBKillData* PBPlayerPVPInfo::mutable_kill(int index) {
  return kill_.Mutable(index);
}
inline ::PBKillData* PBPlayerPVPInfo::add_kill() {
  return kill_.Add();
}

// optional uint32 KillNumIn = 8;
inline bool PBPlayerPVPInfo::has_killnumin() const {
  return _has_bit(7);
}
inline void PBPlayerPVPInfo::clear_killnumin() {
  killnumin_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::killnumin() const {
  return killnumin_;
}
inline void PBPlayerPVPInfo::set_killnumin(::google::protobuf::uint32 value) {
  _set_bit(7);
  killnumin_ = value;
}

// optional uint32 YellowStatus = 9;
inline bool PBPlayerPVPInfo::has_yellowstatus() const {
  return _has_bit(8);
}
inline void PBPlayerPVPInfo::clear_yellowstatus() {
  yellowstatus_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::yellowstatus() const {
  return yellowstatus_;
}
inline void PBPlayerPVPInfo::set_yellowstatus(::google::protobuf::uint32 value) {
  _set_bit(8);
  yellowstatus_ = value;
}

// optional uint32 PrisonTime = 10;
inline bool PBPlayerPVPInfo::has_prisontime() const {
  return _has_bit(9);
}
inline void PBPlayerPVPInfo::clear_prisontime() {
  prisontime_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::prisontime() const {
  return prisontime_;
}
inline void PBPlayerPVPInfo::set_prisontime(::google::protobuf::uint32 value) {
  _set_bit(9);
  prisontime_ = value;
}

// optional uint32 TotalPrisonTime = 11;
inline bool PBPlayerPVPInfo::has_totalprisontime() const {
  return _has_bit(10);
}
inline void PBPlayerPVPInfo::clear_totalprisontime() {
  totalprisontime_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::totalprisontime() const {
  return totalprisontime_;
}
inline void PBPlayerPVPInfo::set_totalprisontime(::google::protobuf::uint32 value) {
  _set_bit(10);
  totalprisontime_ = value;
}

// optional uint32 TodayHonor = 12;
inline bool PBPlayerPVPInfo::has_todayhonor() const {
  return _has_bit(11);
}
inline void PBPlayerPVPInfo::clear_todayhonor() {
  todayhonor_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::todayhonor() const {
  return todayhonor_;
}
inline void PBPlayerPVPInfo::set_todayhonor(::google::protobuf::uint32 value) {
  _set_bit(11);
  todayhonor_ = value;
}

// optional uint32 TotalWar = 13;
inline bool PBPlayerPVPInfo::has_totalwar() const {
  return _has_bit(12);
}
inline void PBPlayerPVPInfo::clear_totalwar() {
  totalwar_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::totalwar() const {
  return totalwar_;
}
inline void PBPlayerPVPInfo::set_totalwar(::google::protobuf::uint32 value) {
  _set_bit(12);
  totalwar_ = value;
}

// optional uint32 TodayWar = 14;
inline bool PBPlayerPVPInfo::has_todaywar() const {
  return _has_bit(13);
}
inline void PBPlayerPVPInfo::clear_todaywar() {
  todaywar_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::todaywar() const {
  return todaywar_;
}
inline void PBPlayerPVPInfo::set_todaywar(::google::protobuf::uint32 value) {
  _set_bit(13);
  todaywar_ = value;
}

// optional uint32 TodayOther = 15;
inline bool PBPlayerPVPInfo::has_todayother() const {
  return _has_bit(14);
}
inline void PBPlayerPVPInfo::clear_todayother() {
  todayother_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::todayother() const {
  return todayother_;
}
inline void PBPlayerPVPInfo::set_todayother(::google::protobuf::uint32 value) {
  _set_bit(14);
  todayother_ = value;
}

// optional uint32 FreeWar = 16;
inline bool PBPlayerPVPInfo::has_freewar() const {
  return _has_bit(15);
}
inline void PBPlayerPVPInfo::clear_freewar() {
  freewar_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::freewar() const {
  return freewar_;
}
inline void PBPlayerPVPInfo::set_freewar(::google::protobuf::uint32 value) {
  _set_bit(15);
  freewar_ = value;
}

// optional uint32 WarSerial = 17;
inline bool PBPlayerPVPInfo::has_warserial() const {
  return _has_bit(16);
}
inline void PBPlayerPVPInfo::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::warserial() const {
  return warserial_;
}
inline void PBPlayerPVPInfo::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(16);
  warserial_ = value;
}

// optional uint32 WarKill = 18;
inline bool PBPlayerPVPInfo::has_warkill() const {
  return _has_bit(17);
}
inline void PBPlayerPVPInfo::clear_warkill() {
  warkill_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::warkill() const {
  return warkill_;
}
inline void PBPlayerPVPInfo::set_warkill(::google::protobuf::uint32 value) {
  _set_bit(17);
  warkill_ = value;
}

// optional uint32 ExpHonor = 19;
inline bool PBPlayerPVPInfo::has_exphonor() const {
  return _has_bit(18);
}
inline void PBPlayerPVPInfo::clear_exphonor() {
  exphonor_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::exphonor() const {
  return exphonor_;
}
inline void PBPlayerPVPInfo::set_exphonor(::google::protobuf::uint32 value) {
  _set_bit(18);
  exphonor_ = value;
}

// optional uint32 ItemHonor = 20;
inline bool PBPlayerPVPInfo::has_itemhonor() const {
  return _has_bit(19);
}
inline void PBPlayerPVPInfo::clear_itemhonor() {
  itemhonor_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBPlayerPVPInfo::itemhonor() const {
  return itemhonor_;
}
inline void PBPlayerPVPInfo::set_itemhonor(::google::protobuf::uint32 value) {
  _set_bit(19);
  itemhonor_ = value;
}

// -------------------------------------------------------------------

// PBPlayerStatisticInfo

// optional uint32 CompletedTasks = 1;
inline bool PBPlayerStatisticInfo::has_completedtasks() const {
  return _has_bit(0);
}
inline void PBPlayerStatisticInfo::clear_completedtasks() {
  completedtasks_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::completedtasks() const {
  return completedtasks_;
}
inline void PBPlayerStatisticInfo::set_completedtasks(::google::protobuf::uint32 value) {
  _set_bit(0);
  completedtasks_ = value;
}

// optional uint32 OriginReliveTimes = 2;
inline bool PBPlayerStatisticInfo::has_originrelivetimes() const {
  return _has_bit(1);
}
inline void PBPlayerStatisticInfo::clear_originrelivetimes() {
  originrelivetimes_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::originrelivetimes() const {
  return originrelivetimes_;
}
inline void PBPlayerStatisticInfo::set_originrelivetimes(::google::protobuf::uint32 value) {
  _set_bit(1);
  originrelivetimes_ = value;
}

// optional uint32 KillSameNationNum = 3;
inline bool PBPlayerStatisticInfo::has_killsamenationnum() const {
  return _has_bit(2);
}
inline void PBPlayerStatisticInfo::clear_killsamenationnum() {
  killsamenationnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::killsamenationnum() const {
  return killsamenationnum_;
}
inline void PBPlayerStatisticInfo::set_killsamenationnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  killsamenationnum_ = value;
}

// optional uint32 KillOgreNum = 4;
inline bool PBPlayerStatisticInfo::has_killogrenum() const {
  return _has_bit(3);
}
inline void PBPlayerStatisticInfo::clear_killogrenum() {
  killogrenum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::killogrenum() const {
  return killogrenum_;
}
inline void PBPlayerStatisticInfo::set_killogrenum(::google::protobuf::uint32 value) {
  _set_bit(3);
  killogrenum_ = value;
}

// optional uint32 UpFailNum = 5;
inline bool PBPlayerStatisticInfo::has_upfailnum() const {
  return _has_bit(4);
}
inline void PBPlayerStatisticInfo::clear_upfailnum() {
  upfailnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::upfailnum() const {
  return upfailnum_;
}
inline void PBPlayerStatisticInfo::set_upfailnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  upfailnum_ = value;
}

// optional uint32 TodayKillEnemyIn = 6;
inline bool PBPlayerStatisticInfo::has_todaykillenemyin() const {
  return _has_bit(5);
}
inline void PBPlayerStatisticInfo::clear_todaykillenemyin() {
  todaykillenemyin_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::todaykillenemyin() const {
  return todaykillenemyin_;
}
inline void PBPlayerStatisticInfo::set_todaykillenemyin(::google::protobuf::uint32 value) {
  _set_bit(5);
  todaykillenemyin_ = value;
}

// optional uint32 TodayKillEnemyOut = 7;
inline bool PBPlayerStatisticInfo::has_todaykillenemyout() const {
  return _has_bit(6);
}
inline void PBPlayerStatisticInfo::clear_todaykillenemyout() {
  todaykillenemyout_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::todaykillenemyout() const {
  return todaykillenemyout_;
}
inline void PBPlayerStatisticInfo::set_todaykillenemyout(::google::protobuf::uint32 value) {
  _set_bit(6);
  todaykillenemyout_ = value;
}

// optional uint32 DieNum = 8;
inline bool PBPlayerStatisticInfo::has_dienum() const {
  return _has_bit(7);
}
inline void PBPlayerStatisticInfo::clear_dienum() {
  dienum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPlayerStatisticInfo::dienum() const {
  return dienum_;
}
inline void PBPlayerStatisticInfo::set_dienum(::google::protobuf::uint32 value) {
  _set_bit(7);
  dienum_ = value;
}

// -------------------------------------------------------------------

// PBPlayerTalentInfo

// optional uint32 TalentPoint = 1;
inline bool PBPlayerTalentInfo::has_talentpoint() const {
  return _has_bit(0);
}
inline void PBPlayerTalentInfo::clear_talentpoint() {
  talentpoint_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerTalentInfo::talentpoint() const {
  return talentpoint_;
}
inline void PBPlayerTalentInfo::set_talentpoint(::google::protobuf::uint32 value) {
  _set_bit(0);
  talentpoint_ = value;
}

// optional uint32 TalentStep = 2;
inline bool PBPlayerTalentInfo::has_talentstep() const {
  return _has_bit(1);
}
inline void PBPlayerTalentInfo::clear_talentstep() {
  talentstep_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPlayerTalentInfo::talentstep() const {
  return talentstep_;
}
inline void PBPlayerTalentInfo::set_talentstep(::google::protobuf::uint32 value) {
  _set_bit(1);
  talentstep_ = value;
}

// optional uint32 TalentStudy = 3;
inline bool PBPlayerTalentInfo::has_talentstudy() const {
  return _has_bit(2);
}
inline void PBPlayerTalentInfo::clear_talentstudy() {
  talentstudy_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPlayerTalentInfo::talentstudy() const {
  return talentstudy_;
}
inline void PBPlayerTalentInfo::set_talentstudy(::google::protobuf::uint32 value) {
  _set_bit(2);
  talentstudy_ = value;
}

// optional .PBSkillList TalentSkill = 4;
inline bool PBPlayerTalentInfo::has_talentskill() const {
  return _has_bit(3);
}
inline void PBPlayerTalentInfo::clear_talentskill() {
  if (talentskill_ != NULL) talentskill_->::PBSkillList::Clear();
  _clear_bit(3);
}
inline const ::PBSkillList& PBPlayerTalentInfo::talentskill() const {
  return talentskill_ != NULL ? *talentskill_ : *default_instance_->talentskill_;
}
inline ::PBSkillList* PBPlayerTalentInfo::mutable_talentskill() {
  _set_bit(3);
  if (talentskill_ == NULL) talentskill_ = new ::PBSkillList;
  return talentskill_;
}

// optional uint32 TalentExp = 5;
inline bool PBPlayerTalentInfo::has_talentexp() const {
  return _has_bit(4);
}
inline void PBPlayerTalentInfo::clear_talentexp() {
  talentexp_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPlayerTalentInfo::talentexp() const {
  return talentexp_;
}
inline void PBPlayerTalentInfo::set_talentexp(::google::protobuf::uint32 value) {
  _set_bit(4);
  talentexp_ = value;
}

// optional uint32 TalentLevel = 6;
inline bool PBPlayerTalentInfo::has_talentlevel() const {
  return _has_bit(5);
}
inline void PBPlayerTalentInfo::clear_talentlevel() {
  talentlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPlayerTalentInfo::talentlevel() const {
  return talentlevel_;
}
inline void PBPlayerTalentInfo::set_talentlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  talentlevel_ = value;
}

// -------------------------------------------------------------------

// PBPlayerTitleInfo

// optional uint32 CurrentTitle = 1;
inline bool PBPlayerTitleInfo::has_currenttitle() const {
  return _has_bit(0);
}
inline void PBPlayerTitleInfo::clear_currenttitle() {
  currenttitle_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::currenttitle() const {
  return currenttitle_;
}
inline void PBPlayerTitleInfo::set_currenttitle(::google::protobuf::uint32 value) {
  _set_bit(0);
  currenttitle_ = value;
}

// repeated uint32 TitleList = 2;
inline int PBPlayerTitleInfo::titlelist_size() const {
  return titlelist_.size();
}
inline void PBPlayerTitleInfo::clear_titlelist() {
  titlelist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerTitleInfo::titlelist() const {
  return titlelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerTitleInfo::mutable_titlelist() {
  return &titlelist_;
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::titlelist(int index) const {
  return titlelist_.Get(index);
}
inline void PBPlayerTitleInfo::set_titlelist(int index, ::google::protobuf::uint32 value) {
  titlelist_.Set(index, value);
}
inline void PBPlayerTitleInfo::add_titlelist(::google::protobuf::uint32 value) {
  titlelist_.Add(value);
}

// optional .PBSkillList TitleSkill = 3;
inline bool PBPlayerTitleInfo::has_titleskill() const {
  return _has_bit(2);
}
inline void PBPlayerTitleInfo::clear_titleskill() {
  if (titleskill_ != NULL) titleskill_->::PBSkillList::Clear();
  _clear_bit(2);
}
inline const ::PBSkillList& PBPlayerTitleInfo::titleskill() const {
  return titleskill_ != NULL ? *titleskill_ : *default_instance_->titleskill_;
}
inline ::PBSkillList* PBPlayerTitleInfo::mutable_titleskill() {
  _set_bit(2);
  if (titleskill_ == NULL) titleskill_ = new ::PBSkillList;
  return titleskill_;
}

// repeated uint32 Time = 4;
inline int PBPlayerTitleInfo::time_size() const {
  return time_.size();
}
inline void PBPlayerTitleInfo::clear_time() {
  time_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerTitleInfo::time() const {
  return time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerTitleInfo::mutable_time() {
  return &time_;
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::time(int index) const {
  return time_.Get(index);
}
inline void PBPlayerTitleInfo::set_time(int index, ::google::protobuf::uint32 value) {
  time_.Set(index, value);
}
inline void PBPlayerTitleInfo::add_time(::google::protobuf::uint32 value) {
  time_.Add(value);
}

// -------------------------------------------------------------------

// PBActivityStateInf

// optional uint32 ActivityID = 1;
inline bool PBActivityStateInf::has_activityid() const {
  return _has_bit(0);
}
inline void PBActivityStateInf::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBActivityStateInf::activityid() const {
  return activityid_;
}
inline void PBActivityStateInf::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  activityid_ = value;
}

// optional uint32 CurState = 2;
inline bool PBActivityStateInf::has_curstate() const {
  return _has_bit(1);
}
inline void PBActivityStateInf::clear_curstate() {
  curstate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBActivityStateInf::curstate() const {
  return curstate_;
}
inline void PBActivityStateInf::set_curstate(::google::protobuf::uint32 value) {
  _set_bit(1);
  curstate_ = value;
}

// repeated uint32 StateParam = 3;
inline int PBActivityStateInf::stateparam_size() const {
  return stateparam_.size();
}
inline void PBActivityStateInf::clear_stateparam() {
  stateparam_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBActivityStateInf::stateparam() const {
  return stateparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBActivityStateInf::mutable_stateparam() {
  return &stateparam_;
}
inline ::google::protobuf::uint32 PBActivityStateInf::stateparam(int index) const {
  return stateparam_.Get(index);
}
inline void PBActivityStateInf::set_stateparam(int index, ::google::protobuf::uint32 value) {
  stateparam_.Set(index, value);
}
inline void PBActivityStateInf::add_stateparam(::google::protobuf::uint32 value) {
  stateparam_.Add(value);
}

// optional uint32 ChgTm = 4;
inline bool PBActivityStateInf::has_chgtm() const {
  return _has_bit(3);
}
inline void PBActivityStateInf::clear_chgtm() {
  chgtm_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBActivityStateInf::chgtm() const {
  return chgtm_;
}
inline void PBActivityStateInf::set_chgtm(::google::protobuf::uint32 value) {
  _set_bit(3);
  chgtm_ = value;
}

// optional uint32 RealLastedTime = 5;
inline bool PBActivityStateInf::has_reallastedtime() const {
  return _has_bit(4);
}
inline void PBActivityStateInf::clear_reallastedtime() {
  reallastedtime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBActivityStateInf::reallastedtime() const {
  return reallastedtime_;
}
inline void PBActivityStateInf::set_reallastedtime(::google::protobuf::uint32 value) {
  _set_bit(4);
  reallastedtime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerActivityInfo

// optional uint32 DiploidTime = 1;
inline bool PBPlayerActivityInfo::has_diploidtime() const {
  return _has_bit(0);
}
inline void PBPlayerActivityInfo::clear_diploidtime() {
  diploidtime_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::diploidtime() const {
  return diploidtime_;
}
inline void PBPlayerActivityInfo::set_diploidtime(::google::protobuf::uint32 value) {
  _set_bit(0);
  diploidtime_ = value;
}

// optional uint32 LastRefreshTimeOfDipLoid = 2;
inline bool PBPlayerActivityInfo::has_lastrefreshtimeofdiploid() const {
  return _has_bit(1);
}
inline void PBPlayerActivityInfo::clear_lastrefreshtimeofdiploid() {
  lastrefreshtimeofdiploid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lastrefreshtimeofdiploid() const {
  return lastrefreshtimeofdiploid_;
}
inline void PBPlayerActivityInfo::set_lastrefreshtimeofdiploid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lastrefreshtimeofdiploid_ = value;
}

// repeated uint32 DiploidState = 3;
inline int PBPlayerActivityInfo::diploidstate_size() const {
  return diploidstate_.size();
}
inline void PBPlayerActivityInfo::clear_diploidstate() {
  diploidstate_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerActivityInfo::diploidstate() const {
  return diploidstate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerActivityInfo::mutable_diploidstate() {
  return &diploidstate_;
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::diploidstate(int index) const {
  return diploidstate_.Get(index);
}
inline void PBPlayerActivityInfo::set_diploidstate(int index, ::google::protobuf::uint32 value) {
  diploidstate_.Set(index, value);
}
inline void PBPlayerActivityInfo::add_diploidstate(::google::protobuf::uint32 value) {
  diploidstate_.Add(value);
}

// optional uint32 DailyWelfareSta = 4;
inline bool PBPlayerActivityInfo::has_dailywelfaresta() const {
  return _has_bit(3);
}
inline void PBPlayerActivityInfo::clear_dailywelfaresta() {
  dailywelfaresta_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::dailywelfaresta() const {
  return dailywelfaresta_;
}
inline void PBPlayerActivityInfo::set_dailywelfaresta(::google::protobuf::uint32 value) {
  _set_bit(3);
  dailywelfaresta_ = value;
}

// optional uint32 LastDaylyDisposTime = 5;
inline bool PBPlayerActivityInfo::has_lastdaylydispostime() const {
  return _has_bit(4);
}
inline void PBPlayerActivityInfo::clear_lastdaylydispostime() {
  lastdaylydispostime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lastdaylydispostime() const {
  return lastdaylydispostime_;
}
inline void PBPlayerActivityInfo::set_lastdaylydispostime(::google::protobuf::uint32 value) {
  _set_bit(4);
  lastdaylydispostime_ = value;
}

// optional uint32 LastWeeklyDisposTime = 6;
inline bool PBPlayerActivityInfo::has_lastweeklydispostime() const {
  return _has_bit(5);
}
inline void PBPlayerActivityInfo::clear_lastweeklydispostime() {
  lastweeklydispostime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lastweeklydispostime() const {
  return lastweeklydispostime_;
}
inline void PBPlayerActivityInfo::set_lastweeklydispostime(::google::protobuf::uint32 value) {
  _set_bit(5);
  lastweeklydispostime_ = value;
}

// optional uint32 LastFamilyApplyTime = 7;
inline bool PBPlayerActivityInfo::has_lastfamilyapplytime() const {
  return _has_bit(6);
}
inline void PBPlayerActivityInfo::clear_lastfamilyapplytime() {
  lastfamilyapplytime_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lastfamilyapplytime() const {
  return lastfamilyapplytime_;
}
inline void PBPlayerActivityInfo::set_lastfamilyapplytime(::google::protobuf::uint32 value) {
  _set_bit(6);
  lastfamilyapplytime_ = value;
}

// optional uint32 LastTimeLeaveFamily = 8;
inline bool PBPlayerActivityInfo::has_lasttimeleavefamily() const {
  return _has_bit(7);
}
inline void PBPlayerActivityInfo::clear_lasttimeleavefamily() {
  lasttimeleavefamily_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lasttimeleavefamily() const {
  return lasttimeleavefamily_;
}
inline void PBPlayerActivityInfo::set_lasttimeleavefamily(::google::protobuf::uint32 value) {
  _set_bit(7);
  lasttimeleavefamily_ = value;
}

// optional uint32 LastJudgeTime = 9;
inline bool PBPlayerActivityInfo::has_lastjudgetime() const {
  return _has_bit(8);
}
inline void PBPlayerActivityInfo::clear_lastjudgetime() {
  lastjudgetime_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::lastjudgetime() const {
  return lastjudgetime_;
}
inline void PBPlayerActivityInfo::set_lastjudgetime(::google::protobuf::uint32 value) {
  _set_bit(8);
  lastjudgetime_ = value;
}

// optional uint32 SaveDate = 10;
inline bool PBPlayerActivityInfo::has_savedate() const {
  return _has_bit(9);
}
inline void PBPlayerActivityInfo::clear_savedate() {
  savedate_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::savedate() const {
  return savedate_;
}
inline void PBPlayerActivityInfo::set_savedate(::google::protobuf::uint32 value) {
  _set_bit(9);
  savedate_ = value;
}

// optional uint32 VipFlag = 11;
inline bool PBPlayerActivityInfo::has_vipflag() const {
  return _has_bit(10);
}
inline void PBPlayerActivityInfo::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::vipflag() const {
  return vipflag_;
}
inline void PBPlayerActivityInfo::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(10);
  vipflag_ = value;
}

// optional uint32 VipTime = 12;
inline bool PBPlayerActivityInfo::has_viptime() const {
  return _has_bit(11);
}
inline void PBPlayerActivityInfo::clear_viptime() {
  viptime_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::viptime() const {
  return viptime_;
}
inline void PBPlayerActivityInfo::set_viptime(::google::protobuf::uint32 value) {
  _set_bit(11);
  viptime_ = value;
}

// optional .PBAwardRecord AwardRecord = 13;
inline bool PBPlayerActivityInfo::has_awardrecord() const {
  return _has_bit(12);
}
inline void PBPlayerActivityInfo::clear_awardrecord() {
  if (awardrecord_ != NULL) awardrecord_->::PBAwardRecord::Clear();
  _clear_bit(12);
}
inline const ::PBAwardRecord& PBPlayerActivityInfo::awardrecord() const {
  return awardrecord_ != NULL ? *awardrecord_ : *default_instance_->awardrecord_;
}
inline ::PBAwardRecord* PBPlayerActivityInfo::mutable_awardrecord() {
  _set_bit(12);
  if (awardrecord_ == NULL) awardrecord_ = new ::PBAwardRecord;
  return awardrecord_;
}

// optional uint32 InvestStatus = 14;
inline bool PBPlayerActivityInfo::has_investstatus() const {
  return _has_bit(13);
}
inline void PBPlayerActivityInfo::clear_investstatus() {
  investstatus_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::investstatus() const {
  return investstatus_;
}
inline void PBPlayerActivityInfo::set_investstatus(::google::protobuf::uint32 value) {
  _set_bit(13);
  investstatus_ = value;
}

// optional .PBAwardRecord WeeklyAwardRecord = 15;
inline bool PBPlayerActivityInfo::has_weeklyawardrecord() const {
  return _has_bit(14);
}
inline void PBPlayerActivityInfo::clear_weeklyawardrecord() {
  if (weeklyawardrecord_ != NULL) weeklyawardrecord_->::PBAwardRecord::Clear();
  _clear_bit(14);
}
inline const ::PBAwardRecord& PBPlayerActivityInfo::weeklyawardrecord() const {
  return weeklyawardrecord_ != NULL ? *weeklyawardrecord_ : *default_instance_->weeklyawardrecord_;
}
inline ::PBAwardRecord* PBPlayerActivityInfo::mutable_weeklyawardrecord() {
  _set_bit(14);
  if (weeklyawardrecord_ == NULL) weeklyawardrecord_ = new ::PBAwardRecord;
  return weeklyawardrecord_;
}

// repeated .PBActivityStateInf ActivityState = 16;
inline int PBPlayerActivityInfo::activitystate_size() const {
  return activitystate_.size();
}
inline void PBPlayerActivityInfo::clear_activitystate() {
  activitystate_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBActivityStateInf >&
PBPlayerActivityInfo::activitystate() const {
  return activitystate_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBActivityStateInf >*
PBPlayerActivityInfo::mutable_activitystate() {
  return &activitystate_;
}
inline const ::PBActivityStateInf& PBPlayerActivityInfo::activitystate(int index) const {
  return activitystate_.Get(index);
}
inline ::PBActivityStateInf* PBPlayerActivityInfo::mutable_activitystate(int index) {
  return activitystate_.Mutable(index);
}
inline ::PBActivityStateInf* PBPlayerActivityInfo::add_activitystate() {
  return activitystate_.Add();
}

// optional uint32 HasVoted = 17;
inline bool PBPlayerActivityInfo::has_hasvoted() const {
  return _has_bit(16);
}
inline void PBPlayerActivityInfo::clear_hasvoted() {
  hasvoted_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::hasvoted() const {
  return hasvoted_;
}
inline void PBPlayerActivityInfo::set_hasvoted(::google::protobuf::uint32 value) {
  _set_bit(16);
  hasvoted_ = value;
}

// optional uint32 SaveTm = 18;
inline bool PBPlayerActivityInfo::has_savetm() const {
  return _has_bit(17);
}
inline void PBPlayerActivityInfo::clear_savetm() {
  savetm_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBPlayerActivityInfo::savetm() const {
  return savetm_;
}
inline void PBPlayerActivityInfo::set_savetm(::google::protobuf::uint32 value) {
  _set_bit(17);
  savetm_ = value;
}

// -------------------------------------------------------------------

// PBPlayerClientInfo

// optional .PBShortcutList Shortcut = 1;
inline bool PBPlayerClientInfo::has_shortcut() const {
  return _has_bit(0);
}
inline void PBPlayerClientInfo::clear_shortcut() {
  if (shortcut_ != NULL) shortcut_->::PBShortcutList::Clear();
  _clear_bit(0);
}
inline const ::PBShortcutList& PBPlayerClientInfo::shortcut() const {
  return shortcut_ != NULL ? *shortcut_ : *default_instance_->shortcut_;
}
inline ::PBShortcutList* PBPlayerClientInfo::mutable_shortcut() {
  _set_bit(0);
  if (shortcut_ == NULL) shortcut_ = new ::PBShortcutList;
  return shortcut_;
}

// -------------------------------------------------------------------

// PBSpiritTypeInfo

// repeated uint32 SlotOpenStatus = 1;
inline int PBSpiritTypeInfo::slotopenstatus_size() const {
  return slotopenstatus_.size();
}
inline void PBSpiritTypeInfo::clear_slotopenstatus() {
  slotopenstatus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpiritTypeInfo::slotopenstatus() const {
  return slotopenstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpiritTypeInfo::mutable_slotopenstatus() {
  return &slotopenstatus_;
}
inline ::google::protobuf::uint32 PBSpiritTypeInfo::slotopenstatus(int index) const {
  return slotopenstatus_.Get(index);
}
inline void PBSpiritTypeInfo::set_slotopenstatus(int index, ::google::protobuf::uint32 value) {
  slotopenstatus_.Set(index, value);
}
inline void PBSpiritTypeInfo::add_slotopenstatus(::google::protobuf::uint32 value) {
  slotopenstatus_.Add(value);
}

// repeated uint32 CastingItemID = 2;
inline int PBSpiritTypeInfo::castingitemid_size() const {
  return castingitemid_.size();
}
inline void PBSpiritTypeInfo::clear_castingitemid() {
  castingitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpiritTypeInfo::castingitemid() const {
  return castingitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpiritTypeInfo::mutable_castingitemid() {
  return &castingitemid_;
}
inline ::google::protobuf::uint32 PBSpiritTypeInfo::castingitemid(int index) const {
  return castingitemid_.Get(index);
}
inline void PBSpiritTypeInfo::set_castingitemid(int index, ::google::protobuf::uint32 value) {
  castingitemid_.Set(index, value);
}
inline void PBSpiritTypeInfo::add_castingitemid(::google::protobuf::uint32 value) {
  castingitemid_.Add(value);
}

// repeated uint32 BindStatus = 3;
inline int PBSpiritTypeInfo::bindstatus_size() const {
  return bindstatus_.size();
}
inline void PBSpiritTypeInfo::clear_bindstatus() {
  bindstatus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpiritTypeInfo::bindstatus() const {
  return bindstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpiritTypeInfo::mutable_bindstatus() {
  return &bindstatus_;
}
inline ::google::protobuf::uint32 PBSpiritTypeInfo::bindstatus(int index) const {
  return bindstatus_.Get(index);
}
inline void PBSpiritTypeInfo::set_bindstatus(int index, ::google::protobuf::uint32 value) {
  bindstatus_.Set(index, value);
}
inline void PBSpiritTypeInfo::add_bindstatus(::google::protobuf::uint32 value) {
  bindstatus_.Add(value);
}

// -------------------------------------------------------------------

// PBSpiritPositionInfo

// repeated .PBSpiritTypeInfo SpiritTypeInfo = 1;
inline int PBSpiritPositionInfo::spirittypeinfo_size() const {
  return spirittypeinfo_.size();
}
inline void PBSpiritPositionInfo::clear_spirittypeinfo() {
  spirittypeinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritTypeInfo >&
PBSpiritPositionInfo::spirittypeinfo() const {
  return spirittypeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSpiritTypeInfo >*
PBSpiritPositionInfo::mutable_spirittypeinfo() {
  return &spirittypeinfo_;
}
inline const ::PBSpiritTypeInfo& PBSpiritPositionInfo::spirittypeinfo(int index) const {
  return spirittypeinfo_.Get(index);
}
inline ::PBSpiritTypeInfo* PBSpiritPositionInfo::mutable_spirittypeinfo(int index) {
  return spirittypeinfo_.Mutable(index);
}
inline ::PBSpiritTypeInfo* PBSpiritPositionInfo::add_spirittypeinfo() {
  return spirittypeinfo_.Add();
}

// -------------------------------------------------------------------

// PBSpiritInfo

// repeated .PBSpiritPositionInfo PositionInfo = 1;
inline int PBSpiritInfo::positioninfo_size() const {
  return positioninfo_.size();
}
inline void PBSpiritInfo::clear_positioninfo() {
  positioninfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritPositionInfo >&
PBSpiritInfo::positioninfo() const {
  return positioninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSpiritPositionInfo >*
PBSpiritInfo::mutable_positioninfo() {
  return &positioninfo_;
}
inline const ::PBSpiritPositionInfo& PBSpiritInfo::positioninfo(int index) const {
  return positioninfo_.Get(index);
}
inline ::PBSpiritPositionInfo* PBSpiritInfo::mutable_positioninfo(int index) {
  return positioninfo_.Mutable(index);
}
inline ::PBSpiritPositionInfo* PBSpiritInfo::add_positioninfo() {
  return positioninfo_.Add();
}

// -------------------------------------------------------------------

// PBProperty

// optional uint32 CurHP = 1;
inline bool PBProperty::has_curhp() const {
  return _has_bit(0);
}
inline void PBProperty::clear_curhp() {
  curhp_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProperty::curhp() const {
  return curhp_;
}
inline void PBProperty::set_curhp(::google::protobuf::uint32 value) {
  _set_bit(0);
  curhp_ = value;
}

// optional uint32 CurMP = 2;
inline bool PBProperty::has_curmp() const {
  return _has_bit(1);
}
inline void PBProperty::clear_curmp() {
  curmp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBProperty::curmp() const {
  return curmp_;
}
inline void PBProperty::set_curmp(::google::protobuf::uint32 value) {
  _set_bit(1);
  curmp_ = value;
}

// optional uint32 CurAP = 3;
inline bool PBProperty::has_curap() const {
  return _has_bit(2);
}
inline void PBProperty::clear_curap() {
  curap_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBProperty::curap() const {
  return curap_;
}
inline void PBProperty::set_curap(::google::protobuf::uint32 value) {
  _set_bit(2);
  curap_ = value;
}

// optional .PBPlayerBasicInfo BasicInfo = 4;
inline bool PBProperty::has_basicinfo() const {
  return _has_bit(3);
}
inline void PBProperty::clear_basicinfo() {
  if (basicinfo_ != NULL) basicinfo_->::PBPlayerBasicInfo::Clear();
  _clear_bit(3);
}
inline const ::PBPlayerBasicInfo& PBProperty::basicinfo() const {
  return basicinfo_ != NULL ? *basicinfo_ : *default_instance_->basicinfo_;
}
inline ::PBPlayerBasicInfo* PBProperty::mutable_basicinfo() {
  _set_bit(3);
  if (basicinfo_ == NULL) basicinfo_ = new ::PBPlayerBasicInfo;
  return basicinfo_;
}

// optional .PBItemBox Baggage = 5;
inline bool PBProperty::has_baggage() const {
  return _has_bit(4);
}
inline void PBProperty::clear_baggage() {
  if (baggage_ != NULL) baggage_->::PBItemBox::Clear();
  _clear_bit(4);
}
inline const ::PBItemBox& PBProperty::baggage() const {
  return baggage_ != NULL ? *baggage_ : *default_instance_->baggage_;
}
inline ::PBItemBox* PBProperty::mutable_baggage() {
  _set_bit(4);
  if (baggage_ == NULL) baggage_ = new ::PBItemBox;
  return baggage_;
}

// optional .PBItemBox TaskBaggage = 6;
inline bool PBProperty::has_taskbaggage() const {
  return _has_bit(5);
}
inline void PBProperty::clear_taskbaggage() {
  if (taskbaggage_ != NULL) taskbaggage_->::PBItemBox::Clear();
  _clear_bit(5);
}
inline const ::PBItemBox& PBProperty::taskbaggage() const {
  return taskbaggage_ != NULL ? *taskbaggage_ : *default_instance_->taskbaggage_;
}
inline ::PBItemBox* PBProperty::mutable_taskbaggage() {
  _set_bit(5);
  if (taskbaggage_ == NULL) taskbaggage_ = new ::PBItemBox;
  return taskbaggage_;
}

// optional .PBItemBox Equipment = 7;
inline bool PBProperty::has_equipment() const {
  return _has_bit(6);
}
inline void PBProperty::clear_equipment() {
  if (equipment_ != NULL) equipment_->::PBItemBox::Clear();
  _clear_bit(6);
}
inline const ::PBItemBox& PBProperty::equipment() const {
  return equipment_ != NULL ? *equipment_ : *default_instance_->equipment_;
}
inline ::PBItemBox* PBProperty::mutable_equipment() {
  _set_bit(6);
  if (equipment_ == NULL) equipment_ = new ::PBItemBox;
  return equipment_;
}

// optional .PBItemBox Storage = 8;
inline bool PBProperty::has_storage() const {
  return _has_bit(7);
}
inline void PBProperty::clear_storage() {
  if (storage_ != NULL) storage_->::PBItemBox::Clear();
  _clear_bit(7);
}
inline const ::PBItemBox& PBProperty::storage() const {
  return storage_ != NULL ? *storage_ : *default_instance_->storage_;
}
inline ::PBItemBox* PBProperty::mutable_storage() {
  _set_bit(7);
  if (storage_ == NULL) storage_ = new ::PBItemBox;
  return storage_;
}

// optional .PBSkillList Skill = 9;
inline bool PBProperty::has_skill() const {
  return _has_bit(8);
}
inline void PBProperty::clear_skill() {
  if (skill_ != NULL) skill_->::PBSkillList::Clear();
  _clear_bit(8);
}
inline const ::PBSkillList& PBProperty::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::PBSkillList* PBProperty::mutable_skill() {
  _set_bit(8);
  if (skill_ == NULL) skill_ = new ::PBSkillList;
  return skill_;
}

// optional .PBBuffList Buff = 10;
inline bool PBProperty::has_buff() const {
  return _has_bit(9);
}
inline void PBProperty::clear_buff() {
  if (buff_ != NULL) buff_->::PBBuffList::Clear();
  _clear_bit(9);
}
inline const ::PBBuffList& PBProperty::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::PBBuffList* PBProperty::mutable_buff() {
  _set_bit(9);
  if (buff_ == NULL) buff_ = new ::PBBuffList;
  return buff_;
}

// optional .PBPlayerCDGroupInfo CDGroup = 11;
inline bool PBProperty::has_cdgroup() const {
  return _has_bit(10);
}
inline void PBProperty::clear_cdgroup() {
  if (cdgroup_ != NULL) cdgroup_->::PBPlayerCDGroupInfo::Clear();
  _clear_bit(10);
}
inline const ::PBPlayerCDGroupInfo& PBProperty::cdgroup() const {
  return cdgroup_ != NULL ? *cdgroup_ : *default_instance_->cdgroup_;
}
inline ::PBPlayerCDGroupInfo* PBProperty::mutable_cdgroup() {
  _set_bit(10);
  if (cdgroup_ == NULL) cdgroup_ = new ::PBPlayerCDGroupInfo;
  return cdgroup_;
}

// optional .PBMonsterRecordInfo MonsterRecord = 12;
inline bool PBProperty::has_monsterrecord() const {
  return _has_bit(11);
}
inline void PBProperty::clear_monsterrecord() {
  if (monsterrecord_ != NULL) monsterrecord_->::PBMonsterRecordInfo::Clear();
  _clear_bit(11);
}
inline const ::PBMonsterRecordInfo& PBProperty::monsterrecord() const {
  return monsterrecord_ != NULL ? *monsterrecord_ : *default_instance_->monsterrecord_;
}
inline ::PBMonsterRecordInfo* PBProperty::mutable_monsterrecord() {
  _set_bit(11);
  if (monsterrecord_ == NULL) monsterrecord_ = new ::PBMonsterRecordInfo;
  return monsterrecord_;
}

// optional .PBTelePosInfo TelePos = 13;
inline bool PBProperty::has_telepos() const {
  return _has_bit(12);
}
inline void PBProperty::clear_telepos() {
  if (telepos_ != NULL) telepos_->::PBTelePosInfo::Clear();
  _clear_bit(12);
}
inline const ::PBTelePosInfo& PBProperty::telepos() const {
  return telepos_ != NULL ? *telepos_ : *default_instance_->telepos_;
}
inline ::PBTelePosInfo* PBProperty::mutable_telepos() {
  _set_bit(12);
  if (telepos_ == NULL) telepos_ = new ::PBTelePosInfo;
  return telepos_;
}

// optional .PBPlayerPVPInfo PvPInfo = 14;
inline bool PBProperty::has_pvpinfo() const {
  return _has_bit(13);
}
inline void PBProperty::clear_pvpinfo() {
  if (pvpinfo_ != NULL) pvpinfo_->::PBPlayerPVPInfo::Clear();
  _clear_bit(13);
}
inline const ::PBPlayerPVPInfo& PBProperty::pvpinfo() const {
  return pvpinfo_ != NULL ? *pvpinfo_ : *default_instance_->pvpinfo_;
}
inline ::PBPlayerPVPInfo* PBProperty::mutable_pvpinfo() {
  _set_bit(13);
  if (pvpinfo_ == NULL) pvpinfo_ = new ::PBPlayerPVPInfo;
  return pvpinfo_;
}

// optional .PBPlayerTitleInfo TitleInfo = 15;
inline bool PBProperty::has_titleinfo() const {
  return _has_bit(14);
}
inline void PBProperty::clear_titleinfo() {
  if (titleinfo_ != NULL) titleinfo_->::PBPlayerTitleInfo::Clear();
  _clear_bit(14);
}
inline const ::PBPlayerTitleInfo& PBProperty::titleinfo() const {
  return titleinfo_ != NULL ? *titleinfo_ : *default_instance_->titleinfo_;
}
inline ::PBPlayerTitleInfo* PBProperty::mutable_titleinfo() {
  _set_bit(14);
  if (titleinfo_ == NULL) titleinfo_ = new ::PBPlayerTitleInfo;
  return titleinfo_;
}

// optional .PBPlayerTalentInfo TalentInfo = 16;
inline bool PBProperty::has_talentinfo() const {
  return _has_bit(15);
}
inline void PBProperty::clear_talentinfo() {
  if (talentinfo_ != NULL) talentinfo_->::PBPlayerTalentInfo::Clear();
  _clear_bit(15);
}
inline const ::PBPlayerTalentInfo& PBProperty::talentinfo() const {
  return talentinfo_ != NULL ? *talentinfo_ : *default_instance_->talentinfo_;
}
inline ::PBPlayerTalentInfo* PBProperty::mutable_talentinfo() {
  _set_bit(15);
  if (talentinfo_ == NULL) talentinfo_ = new ::PBPlayerTalentInfo;
  return talentinfo_;
}

// optional .PBPlayerMWInfo MWInfo = 17;
inline bool PBProperty::has_mwinfo() const {
  return _has_bit(16);
}
inline void PBProperty::clear_mwinfo() {
  if (mwinfo_ != NULL) mwinfo_->::PBPlayerMWInfo::Clear();
  _clear_bit(16);
}
inline const ::PBPlayerMWInfo& PBProperty::mwinfo() const {
  return mwinfo_ != NULL ? *mwinfo_ : *default_instance_->mwinfo_;
}
inline ::PBPlayerMWInfo* PBProperty::mutable_mwinfo() {
  _set_bit(16);
  if (mwinfo_ == NULL) mwinfo_ = new ::PBPlayerMWInfo;
  return mwinfo_;
}

// optional .PBLifeSkillBox LifeSkillBox = 18;
inline bool PBProperty::has_lifeskillbox() const {
  return _has_bit(17);
}
inline void PBProperty::clear_lifeskillbox() {
  if (lifeskillbox_ != NULL) lifeskillbox_->::PBLifeSkillBox::Clear();
  _clear_bit(17);
}
inline const ::PBLifeSkillBox& PBProperty::lifeskillbox() const {
  return lifeskillbox_ != NULL ? *lifeskillbox_ : *default_instance_->lifeskillbox_;
}
inline ::PBLifeSkillBox* PBProperty::mutable_lifeskillbox() {
  _set_bit(17);
  if (lifeskillbox_ == NULL) lifeskillbox_ = new ::PBLifeSkillBox;
  return lifeskillbox_;
}

// optional .PBPlayerStatisticInfo StatisticInfo = 19;
inline bool PBProperty::has_statisticinfo() const {
  return _has_bit(18);
}
inline void PBProperty::clear_statisticinfo() {
  if (statisticinfo_ != NULL) statisticinfo_->::PBPlayerStatisticInfo::Clear();
  _clear_bit(18);
}
inline const ::PBPlayerStatisticInfo& PBProperty::statisticinfo() const {
  return statisticinfo_ != NULL ? *statisticinfo_ : *default_instance_->statisticinfo_;
}
inline ::PBPlayerStatisticInfo* PBProperty::mutable_statisticinfo() {
  _set_bit(18);
  if (statisticinfo_ == NULL) statisticinfo_ = new ::PBPlayerStatisticInfo;
  return statisticinfo_;
}

// optional .PBPlayerClientInfo ClientInfo = 20;
inline bool PBProperty::has_clientinfo() const {
  return _has_bit(19);
}
inline void PBProperty::clear_clientinfo() {
  if (clientinfo_ != NULL) clientinfo_->::PBPlayerClientInfo::Clear();
  _clear_bit(19);
}
inline const ::PBPlayerClientInfo& PBProperty::clientinfo() const {
  return clientinfo_ != NULL ? *clientinfo_ : *default_instance_->clientinfo_;
}
inline ::PBPlayerClientInfo* PBProperty::mutable_clientinfo() {
  _set_bit(19);
  if (clientinfo_ == NULL) clientinfo_ = new ::PBPlayerClientInfo;
  return clientinfo_;
}

// optional .PBWizard Wizard = 21;
inline bool PBProperty::has_wizard() const {
  return _has_bit(20);
}
inline void PBProperty::clear_wizard() {
  if (wizard_ != NULL) wizard_->::PBWizard::Clear();
  _clear_bit(20);
}
inline const ::PBWizard& PBProperty::wizard() const {
  return wizard_ != NULL ? *wizard_ : *default_instance_->wizard_;
}
inline ::PBWizard* PBProperty::mutable_wizard() {
  _set_bit(20);
  if (wizard_ == NULL) wizard_ = new ::PBWizard;
  return wizard_;
}

// optional .PBPlayerActivityInfo Activity = 22;
inline bool PBProperty::has_activity() const {
  return _has_bit(21);
}
inline void PBProperty::clear_activity() {
  if (activity_ != NULL) activity_->::PBPlayerActivityInfo::Clear();
  _clear_bit(21);
}
inline const ::PBPlayerActivityInfo& PBProperty::activity() const {
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::PBPlayerActivityInfo* PBProperty::mutable_activity() {
  _set_bit(21);
  if (activity_ == NULL) activity_ = new ::PBPlayerActivityInfo;
  return activity_;
}

// optional .PBAwardRecord Award = 23;
inline bool PBProperty::has_award() const {
  return _has_bit(22);
}
inline void PBProperty::clear_award() {
  if (award_ != NULL) award_->::PBAwardRecord::Clear();
  _clear_bit(22);
}
inline const ::PBAwardRecord& PBProperty::award() const {
  return award_ != NULL ? *award_ : *default_instance_->award_;
}
inline ::PBAwardRecord* PBProperty::mutable_award() {
  _set_bit(22);
  if (award_ == NULL) award_ = new ::PBAwardRecord;
  return award_;
}

// optional .PBMatrixInfo Matrix = 24;
inline bool PBProperty::has_matrix() const {
  return _has_bit(23);
}
inline void PBProperty::clear_matrix() {
  if (matrix_ != NULL) matrix_->::PBMatrixInfo::Clear();
  _clear_bit(23);
}
inline const ::PBMatrixInfo& PBProperty::matrix() const {
  return matrix_ != NULL ? *matrix_ : *default_instance_->matrix_;
}
inline ::PBMatrixInfo* PBProperty::mutable_matrix() {
  _set_bit(23);
  if (matrix_ == NULL) matrix_ = new ::PBMatrixInfo;
  return matrix_;
}

// optional .PBExpTimeInfo ExpTimeInfo = 25;
inline bool PBProperty::has_exptimeinfo() const {
  return _has_bit(24);
}
inline void PBProperty::clear_exptimeinfo() {
  if (exptimeinfo_ != NULL) exptimeinfo_->::PBExpTimeInfo::Clear();
  _clear_bit(24);
}
inline const ::PBExpTimeInfo& PBProperty::exptimeinfo() const {
  return exptimeinfo_ != NULL ? *exptimeinfo_ : *default_instance_->exptimeinfo_;
}
inline ::PBExpTimeInfo* PBProperty::mutable_exptimeinfo() {
  _set_bit(24);
  if (exptimeinfo_ == NULL) exptimeinfo_ = new ::PBExpTimeInfo;
  return exptimeinfo_;
}

// optional .PBTreasureBowl TreasureBowl = 26;
inline bool PBProperty::has_treasurebowl() const {
  return _has_bit(25);
}
inline void PBProperty::clear_treasurebowl() {
  if (treasurebowl_ != NULL) treasurebowl_->::PBTreasureBowl::Clear();
  _clear_bit(25);
}
inline const ::PBTreasureBowl& PBProperty::treasurebowl() const {
  return treasurebowl_ != NULL ? *treasurebowl_ : *default_instance_->treasurebowl_;
}
inline ::PBTreasureBowl* PBProperty::mutable_treasurebowl() {
  _set_bit(25);
  if (treasurebowl_ == NULL) treasurebowl_ = new ::PBTreasureBowl;
  return treasurebowl_;
}

// optional .PBSpiritInfo SpiritInfo = 27;
inline bool PBProperty::has_spiritinfo() const {
  return _has_bit(26);
}
inline void PBProperty::clear_spiritinfo() {
  if (spiritinfo_ != NULL) spiritinfo_->::PBSpiritInfo::Clear();
  _clear_bit(26);
}
inline const ::PBSpiritInfo& PBProperty::spiritinfo() const {
  return spiritinfo_ != NULL ? *spiritinfo_ : *default_instance_->spiritinfo_;
}
inline ::PBSpiritInfo* PBProperty::mutable_spiritinfo() {
  _set_bit(26);
  if (spiritinfo_ == NULL) spiritinfo_ = new ::PBSpiritInfo;
  return spiritinfo_;
}

// -------------------------------------------------------------------

// PBTask

// required uint32 TaskID = 1;
inline bool PBTask::has_taskid() const {
  return _has_bit(0);
}
inline void PBTask::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTask::taskid() const {
  return taskid_;
}
inline void PBTask::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskProgress = 2;
inline bool PBTask::has_taskprogress() const {
  return _has_bit(1);
}
inline void PBTask::clear_taskprogress() {
  taskprogress_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTask::taskprogress() const {
  return taskprogress_;
}
inline void PBTask::set_taskprogress(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskprogress_ = value;
}

// optional int32 GameTimeLeft = 3;
inline bool PBTask::has_gametimeleft() const {
  return _has_bit(2);
}
inline void PBTask::clear_gametimeleft() {
  gametimeleft_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBTask::gametimeleft() const {
  return gametimeleft_;
}
inline void PBTask::set_gametimeleft(::google::protobuf::int32 value) {
  _set_bit(2);
  gametimeleft_ = value;
}

// repeated uint32 TaskData = 4;
inline int PBTask::taskdata_size() const {
  return taskdata_.size();
}
inline void PBTask::clear_taskdata() {
  taskdata_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTask::taskdata() const {
  return taskdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTask::mutable_taskdata() {
  return &taskdata_;
}
inline ::google::protobuf::uint32 PBTask::taskdata(int index) const {
  return taskdata_.Get(index);
}
inline void PBTask::set_taskdata(int index, ::google::protobuf::uint32 value) {
  taskdata_.Set(index, value);
}
inline void PBTask::add_taskdata(::google::protobuf::uint32 value) {
  taskdata_.Add(value);
}

// repeated uint32 TalkedNpcs = 5;
inline int PBTask::talkednpcs_size() const {
  return talkednpcs_.size();
}
inline void PBTask::clear_talkednpcs() {
  talkednpcs_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTask::talkednpcs() const {
  return talkednpcs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTask::mutable_talkednpcs() {
  return &talkednpcs_;
}
inline ::google::protobuf::uint32 PBTask::talkednpcs(int index) const {
  return talkednpcs_.Get(index);
}
inline void PBTask::set_talkednpcs(int index, ::google::protobuf::uint32 value) {
  talkednpcs_.Set(index, value);
}
inline void PBTask::add_talkednpcs(::google::protobuf::uint32 value) {
  talkednpcs_.Add(value);
}

// optional uint32 ExFlags = 6;
inline bool PBTask::has_exflags() const {
  return _has_bit(5);
}
inline void PBTask::clear_exflags() {
  exflags_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTask::exflags() const {
  return exflags_;
}
inline void PBTask::set_exflags(::google::protobuf::uint32 value) {
  _set_bit(5);
  exflags_ = value;
}

// optional uint32 BeginTime = 7;
inline bool PBTask::has_begintime() const {
  return _has_bit(6);
}
inline void PBTask::clear_begintime() {
  begintime_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTask::begintime() const {
  return begintime_;
}
inline void PBTask::set_begintime(::google::protobuf::uint32 value) {
  _set_bit(6);
  begintime_ = value;
}

// -------------------------------------------------------------------

// PBLoopTaskData

// optional uint32 TodayCompletedCircles = 1;
inline bool PBLoopTaskData::has_todaycompletedcircles() const {
  return _has_bit(0);
}
inline void PBLoopTaskData::clear_todaycompletedcircles() {
  todaycompletedcircles_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLoopTaskData::todaycompletedcircles() const {
  return todaycompletedcircles_;
}
inline void PBLoopTaskData::set_todaycompletedcircles(::google::protobuf::uint32 value) {
  _set_bit(0);
  todaycompletedcircles_ = value;
}

// optional uint64 LastCompletedTime = 2;
inline bool PBLoopTaskData::has_lastcompletedtime() const {
  return _has_bit(1);
}
inline void PBLoopTaskData::clear_lastcompletedtime() {
  lastcompletedtime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBLoopTaskData::lastcompletedtime() const {
  return lastcompletedtime_;
}
inline void PBLoopTaskData::set_lastcompletedtime(::google::protobuf::uint64 value) {
  _set_bit(1);
  lastcompletedtime_ = value;
}

// repeated uint32 LoopTasks = 3;
inline int PBLoopTaskData::looptasks_size() const {
  return looptasks_.size();
}
inline void PBLoopTaskData::clear_looptasks() {
  looptasks_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLoopTaskData::looptasks() const {
  return looptasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLoopTaskData::mutable_looptasks() {
  return &looptasks_;
}
inline ::google::protobuf::uint32 PBLoopTaskData::looptasks(int index) const {
  return looptasks_.Get(index);
}
inline void PBLoopTaskData::set_looptasks(int index, ::google::protobuf::uint32 value) {
  looptasks_.Set(index, value);
}
inline void PBLoopTaskData::add_looptasks(::google::protobuf::uint32 value) {
  looptasks_.Add(value);
}

// optional uint32 CompletedTimes = 4;
inline bool PBLoopTaskData::has_completedtimes() const {
  return _has_bit(3);
}
inline void PBLoopTaskData::clear_completedtimes() {
  completedtimes_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBLoopTaskData::completedtimes() const {
  return completedtimes_;
}
inline void PBLoopTaskData::set_completedtimes(::google::protobuf::uint32 value) {
  _set_bit(3);
  completedtimes_ = value;
}

// optional uint64 LastAbortTime = 5;
inline bool PBLoopTaskData::has_lastaborttime() const {
  return _has_bit(4);
}
inline void PBLoopTaskData::clear_lastaborttime() {
  lastaborttime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 PBLoopTaskData::lastaborttime() const {
  return lastaborttime_;
}
inline void PBLoopTaskData::set_lastaborttime(::google::protobuf::uint64 value) {
  _set_bit(4);
  lastaborttime_ = value;
}

// optional int32 CurSubIndex = 6;
inline bool PBLoopTaskData::has_cursubindex() const {
  return _has_bit(5);
}
inline void PBLoopTaskData::clear_cursubindex() {
  cursubindex_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBLoopTaskData::cursubindex() const {
  return cursubindex_;
}
inline void PBLoopTaskData::set_cursubindex(::google::protobuf::int32 value) {
  _set_bit(5);
  cursubindex_ = value;
}

// optional uint32 WeekLoops = 7;
inline bool PBLoopTaskData::has_weekloops() const {
  return _has_bit(6);
}
inline void PBLoopTaskData::clear_weekloops() {
  weekloops_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBLoopTaskData::weekloops() const {
  return weekloops_;
}
inline void PBLoopTaskData::set_weekloops(::google::protobuf::uint32 value) {
  _set_bit(6);
  weekloops_ = value;
}

// optional uint32 DayCompletedLoopFlag = 8;
inline bool PBLoopTaskData::has_daycompletedloopflag() const {
  return _has_bit(7);
}
inline void PBLoopTaskData::clear_daycompletedloopflag() {
  daycompletedloopflag_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBLoopTaskData::daycompletedloopflag() const {
  return daycompletedloopflag_;
}
inline void PBLoopTaskData::set_daycompletedloopflag(::google::protobuf::uint32 value) {
  _set_bit(7);
  daycompletedloopflag_ = value;
}

// -------------------------------------------------------------------

// PBStorageTaskData

// repeated uint32 Tasks = 1;
inline int PBStorageTaskData::tasks_size() const {
  return tasks_.size();
}
inline void PBStorageTaskData::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBStorageTaskData::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBStorageTaskData::mutable_tasks() {
  return &tasks_;
}
inline ::google::protobuf::uint32 PBStorageTaskData::tasks(int index) const {
  return tasks_.Get(index);
}
inline void PBStorageTaskData::set_tasks(int index, ::google::protobuf::uint32 value) {
  tasks_.Set(index, value);
}
inline void PBStorageTaskData::add_tasks(::google::protobuf::uint32 value) {
  tasks_.Add(value);
}

// optional uint32 TaskNum = 2;
inline bool PBStorageTaskData::has_tasknum() const {
  return _has_bit(1);
}
inline void PBStorageTaskData::clear_tasknum() {
  tasknum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBStorageTaskData::tasknum() const {
  return tasknum_;
}
inline void PBStorageTaskData::set_tasknum(::google::protobuf::uint32 value) {
  _set_bit(1);
  tasknum_ = value;
}

// optional uint64 LastClickNpc = 3;
inline bool PBStorageTaskData::has_lastclicknpc() const {
  return _has_bit(2);
}
inline void PBStorageTaskData::clear_lastclicknpc() {
  lastclicknpc_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 PBStorageTaskData::lastclicknpc() const {
  return lastclicknpc_;
}
inline void PBStorageTaskData::set_lastclicknpc(::google::protobuf::uint64 value) {
  _set_bit(2);
  lastclicknpc_ = value;
}

// optional uint32 CurTaskID = 4;
inline bool PBStorageTaskData::has_curtaskid() const {
  return _has_bit(3);
}
inline void PBStorageTaskData::clear_curtaskid() {
  curtaskid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBStorageTaskData::curtaskid() const {
  return curtaskid_;
}
inline void PBStorageTaskData::set_curtaskid(::google::protobuf::uint32 value) {
  _set_bit(3);
  curtaskid_ = value;
}

// repeated uint32 GotTasks = 5;
inline int PBStorageTaskData::gottasks_size() const {
  return gottasks_.size();
}
inline void PBStorageTaskData::clear_gottasks() {
  gottasks_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBStorageTaskData::gottasks() const {
  return gottasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBStorageTaskData::mutable_gottasks() {
  return &gottasks_;
}
inline ::google::protobuf::uint32 PBStorageTaskData::gottasks(int index) const {
  return gottasks_.Get(index);
}
inline void PBStorageTaskData::set_gottasks(int index, ::google::protobuf::uint32 value) {
  gottasks_.Set(index, value);
}
inline void PBStorageTaskData::add_gottasks(::google::protobuf::uint32 value) {
  gottasks_.Add(value);
}

// optional uint32 GotNum = 6;
inline bool PBStorageTaskData::has_gotnum() const {
  return _has_bit(5);
}
inline void PBStorageTaskData::clear_gotnum() {
  gotnum_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBStorageTaskData::gotnum() const {
  return gotnum_;
}
inline void PBStorageTaskData::set_gotnum(::google::protobuf::uint32 value) {
  _set_bit(5);
  gotnum_ = value;
}

// optional uint32 TodayCompleted = 7;
inline bool PBStorageTaskData::has_todaycompleted() const {
  return _has_bit(6);
}
inline void PBStorageTaskData::clear_todaycompleted() {
  todaycompleted_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBStorageTaskData::todaycompleted() const {
  return todaycompleted_;
}
inline void PBStorageTaskData::set_todaycompleted(::google::protobuf::uint32 value) {
  _set_bit(6);
  todaycompleted_ = value;
}

// optional uint32 TodayRMBRefresh = 8;
inline bool PBStorageTaskData::has_todayrmbrefresh() const {
  return _has_bit(7);
}
inline void PBStorageTaskData::clear_todayrmbrefresh() {
  todayrmbrefresh_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBStorageTaskData::todayrmbrefresh() const {
  return todayrmbrefresh_;
}
inline void PBStorageTaskData::set_todayrmbrefresh(::google::protobuf::uint32 value) {
  _set_bit(7);
  todayrmbrefresh_ = value;
}

// -------------------------------------------------------------------

// TragedyStruct

// optional uint32 TragedyIndex = 1;
inline bool TragedyStruct::has_tragedyindex() const {
  return _has_bit(0);
}
inline void TragedyStruct::clear_tragedyindex() {
  tragedyindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 TragedyStruct::tragedyindex() const {
  return tragedyindex_;
}
inline void TragedyStruct::set_tragedyindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  tragedyindex_ = value;
}

// optional fixed32 NextTragedyTask = 2;
inline bool TragedyStruct::has_nexttragedytask() const {
  return _has_bit(1);
}
inline void TragedyStruct::clear_nexttragedytask() {
  nexttragedytask_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 TragedyStruct::nexttragedytask() const {
  return nexttragedytask_;
}
inline void TragedyStruct::set_nexttragedytask(::google::protobuf::uint32 value) {
  _set_bit(1);
  nexttragedytask_ = value;
}

// optional uint32 TragedyState = 3;
inline bool TragedyStruct::has_tragedystate() const {
  return _has_bit(2);
}
inline void TragedyStruct::clear_tragedystate() {
  tragedystate_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 TragedyStruct::tragedystate() const {
  return tragedystate_;
}
inline void TragedyStruct::set_tragedystate(::google::protobuf::uint32 value) {
  _set_bit(2);
  tragedystate_ = value;
}

// -------------------------------------------------------------------

// PBTaskGroupData

// optional uint32 GroupID = 1;
inline bool PBTaskGroupData::has_groupid() const {
  return _has_bit(0);
}
inline void PBTaskGroupData::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTaskGroupData::groupid() const {
  return groupid_;
}
inline void PBTaskGroupData::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(0);
  groupid_ = value;
}

// optional uint32 TodayCompleted = 2;
inline bool PBTaskGroupData::has_todaycompleted() const {
  return _has_bit(1);
}
inline void PBTaskGroupData::clear_todaycompleted() {
  todaycompleted_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTaskGroupData::todaycompleted() const {
  return todaycompleted_;
}
inline void PBTaskGroupData::set_todaycompleted(::google::protobuf::uint32 value) {
  _set_bit(1);
  todaycompleted_ = value;
}

// optional uint32 TodayAccepted = 3;
inline bool PBTaskGroupData::has_todayaccepted() const {
  return _has_bit(2);
}
inline void PBTaskGroupData::clear_todayaccepted() {
  todayaccepted_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTaskGroupData::todayaccepted() const {
  return todayaccepted_;
}
inline void PBTaskGroupData::set_todayaccepted(::google::protobuf::uint32 value) {
  _set_bit(2);
  todayaccepted_ = value;
}

// optional uint32 WeekCompleted = 4;
inline bool PBTaskGroupData::has_weekcompleted() const {
  return _has_bit(3);
}
inline void PBTaskGroupData::clear_weekcompleted() {
  weekcompleted_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTaskGroupData::weekcompleted() const {
  return weekcompleted_;
}
inline void PBTaskGroupData::set_weekcompleted(::google::protobuf::uint32 value) {
  _set_bit(3);
  weekcompleted_ = value;
}

// optional uint32 WeekAccepted = 5;
inline bool PBTaskGroupData::has_weekaccepted() const {
  return _has_bit(4);
}
inline void PBTaskGroupData::clear_weekaccepted() {
  weekaccepted_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTaskGroupData::weekaccepted() const {
  return weekaccepted_;
}
inline void PBTaskGroupData::set_weekaccepted(::google::protobuf::uint32 value) {
  _set_bit(4);
  weekaccepted_ = value;
}

// -------------------------------------------------------------------

// SingleChairManTask

// optional uint32 TaskID = 1;
inline bool SingleChairManTask::has_taskid() const {
  return _has_bit(0);
}
inline void SingleChairManTask::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleChairManTask::taskid() const {
  return taskid_;
}
inline void SingleChairManTask::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskState = 2;
inline bool SingleChairManTask::has_taskstate() const {
  return _has_bit(1);
}
inline void SingleChairManTask::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleChairManTask::taskstate() const {
  return taskstate_;
}
inline void SingleChairManTask::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskstate_ = value;
}

// -------------------------------------------------------------------

// SingleCompletedInf

// optional uint32 ChairmanID = 1;
inline bool SingleCompletedInf::has_chairmanid() const {
  return _has_bit(0);
}
inline void SingleCompletedInf::clear_chairmanid() {
  chairmanid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleCompletedInf::chairmanid() const {
  return chairmanid_;
}
inline void SingleCompletedInf::set_chairmanid(::google::protobuf::uint32 value) {
  _set_bit(0);
  chairmanid_ = value;
}

// optional uint32 CompletedNum = 2;
inline bool SingleCompletedInf::has_completednum() const {
  return _has_bit(1);
}
inline void SingleCompletedInf::clear_completednum() {
  completednum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleCompletedInf::completednum() const {
  return completednum_;
}
inline void SingleCompletedInf::set_completednum(::google::protobuf::uint32 value) {
  _set_bit(1);
  completednum_ = value;
}

// -------------------------------------------------------------------

// PBChairManTaskData

// repeated .SingleChairManTask Tasks = 1;
inline int PBChairManTaskData::tasks_size() const {
  return tasks_.size();
}
inline void PBChairManTaskData::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >&
PBChairManTaskData::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >*
PBChairManTaskData::mutable_tasks() {
  return &tasks_;
}
inline const ::SingleChairManTask& PBChairManTaskData::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::SingleChairManTask* PBChairManTaskData::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::SingleChairManTask* PBChairManTaskData::add_tasks() {
  return tasks_.Add();
}

// optional uint32 ChairManID = 2;
inline bool PBChairManTaskData::has_chairmanid() const {
  return _has_bit(1);
}
inline void PBChairManTaskData::clear_chairmanid() {
  chairmanid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBChairManTaskData::chairmanid() const {
  return chairmanid_;
}
inline void PBChairManTaskData::set_chairmanid(::google::protobuf::uint32 value) {
  _set_bit(1);
  chairmanid_ = value;
}

// optional uint32 CompletedNum = 3;
inline bool PBChairManTaskData::has_completednum() const {
  return _has_bit(2);
}
inline void PBChairManTaskData::clear_completednum() {
  completednum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBChairManTaskData::completednum() const {
  return completednum_;
}
inline void PBChairManTaskData::set_completednum(::google::protobuf::uint32 value) {
  _set_bit(2);
  completednum_ = value;
}

// optional uint32 AcceptedNum = 4;
inline bool PBChairManTaskData::has_acceptednum() const {
  return _has_bit(3);
}
inline void PBChairManTaskData::clear_acceptednum() {
  acceptednum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBChairManTaskData::acceptednum() const {
  return acceptednum_;
}
inline void PBChairManTaskData::set_acceptednum(::google::protobuf::uint32 value) {
  _set_bit(3);
  acceptednum_ = value;
}

// repeated .SingleCompletedInf Completed = 5;
inline int PBChairManTaskData::completed_size() const {
  return completed_.size();
}
inline void PBChairManTaskData::clear_completed() {
  completed_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleCompletedInf >&
PBChairManTaskData::completed() const {
  return completed_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleCompletedInf >*
PBChairManTaskData::mutable_completed() {
  return &completed_;
}
inline const ::SingleCompletedInf& PBChairManTaskData::completed(int index) const {
  return completed_.Get(index);
}
inline ::SingleCompletedInf* PBChairManTaskData::mutable_completed(int index) {
  return completed_.Mutable(index);
}
inline ::SingleCompletedInf* PBChairManTaskData::add_completed() {
  return completed_.Add();
}

// -------------------------------------------------------------------

// PBRefreshTaskData

// optional uint32 TaskID = 1;
inline bool PBRefreshTaskData::has_taskid() const {
  return _has_bit(0);
}
inline void PBRefreshTaskData::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRefreshTaskData::taskid() const {
  return taskid_;
}
inline void PBRefreshTaskData::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskColor = 2;
inline bool PBRefreshTaskData::has_taskcolor() const {
  return _has_bit(1);
}
inline void PBRefreshTaskData::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRefreshTaskData::taskcolor() const {
  return taskcolor_;
}
inline void PBRefreshTaskData::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskcolor_ = value;
}

// optional uint32 ResultFlag = 3;
inline bool PBRefreshTaskData::has_resultflag() const {
  return _has_bit(2);
}
inline void PBRefreshTaskData::clear_resultflag() {
  resultflag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBRefreshTaskData::resultflag() const {
  return resultflag_;
}
inline void PBRefreshTaskData::set_resultflag(::google::protobuf::uint32 value) {
  _set_bit(2);
  resultflag_ = value;
}

// -------------------------------------------------------------------

// GroupPublishData

// optional uint32 TaskID = 1;
inline bool GroupPublishData::has_taskid() const {
  return _has_bit(0);
}
inline void GroupPublishData::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 GroupPublishData::taskid() const {
  return taskid_;
}
inline void GroupPublishData::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskState = 2;
inline bool GroupPublishData::has_taskstate() const {
  return _has_bit(1);
}
inline void GroupPublishData::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 GroupPublishData::taskstate() const {
  return taskstate_;
}
inline void GroupPublishData::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskstate_ = value;
}

// -------------------------------------------------------------------

// PBTaskList

// optional uint32 TaskNumber = 1;
inline bool PBTaskList::has_tasknumber() const {
  return _has_bit(0);
}
inline void PBTaskList::clear_tasknumber() {
  tasknumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTaskList::tasknumber() const {
  return tasknumber_;
}
inline void PBTaskList::set_tasknumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  tasknumber_ = value;
}

// repeated .PBTask TaskList = 2;
inline int PBTaskList::tasklist_size() const {
  return tasklist_.size();
}
inline void PBTaskList::clear_tasklist() {
  tasklist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTask >&
PBTaskList::tasklist() const {
  return tasklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTask >*
PBTaskList::mutable_tasklist() {
  return &tasklist_;
}
inline const ::PBTask& PBTaskList::tasklist(int index) const {
  return tasklist_.Get(index);
}
inline ::PBTask* PBTaskList::mutable_tasklist(int index) {
  return tasklist_.Mutable(index);
}
inline ::PBTask* PBTaskList::add_tasklist() {
  return tasklist_.Add();
}

// optional .PBLoopTaskData LoopTaskData = 3;
inline bool PBTaskList::has_looptaskdata() const {
  return _has_bit(2);
}
inline void PBTaskList::clear_looptaskdata() {
  if (looptaskdata_ != NULL) looptaskdata_->::PBLoopTaskData::Clear();
  _clear_bit(2);
}
inline const ::PBLoopTaskData& PBTaskList::looptaskdata() const {
  return looptaskdata_ != NULL ? *looptaskdata_ : *default_instance_->looptaskdata_;
}
inline ::PBLoopTaskData* PBTaskList::mutable_looptaskdata() {
  _set_bit(2);
  if (looptaskdata_ == NULL) looptaskdata_ = new ::PBLoopTaskData;
  return looptaskdata_;
}

// repeated uint32 EventID = 4;
inline int PBTaskList::eventid_size() const {
  return eventid_.size();
}
inline void PBTaskList::clear_eventid() {
  eventid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::eventid() const {
  return eventid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_eventid() {
  return &eventid_;
}
inline ::google::protobuf::uint32 PBTaskList::eventid(int index) const {
  return eventid_.Get(index);
}
inline void PBTaskList::set_eventid(int index, ::google::protobuf::uint32 value) {
  eventid_.Set(index, value);
}
inline void PBTaskList::add_eventid(::google::protobuf::uint32 value) {
  eventid_.Add(value);
}

// repeated uint32 EventParam = 5;
inline int PBTaskList::eventparam_size() const {
  return eventparam_.size();
}
inline void PBTaskList::clear_eventparam() {
  eventparam_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::eventparam() const {
  return eventparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_eventparam() {
  return &eventparam_;
}
inline ::google::protobuf::uint32 PBTaskList::eventparam(int index) const {
  return eventparam_.Get(index);
}
inline void PBTaskList::set_eventparam(int index, ::google::protobuf::uint32 value) {
  eventparam_.Set(index, value);
}
inline void PBTaskList::add_eventparam(::google::protobuf::uint32 value) {
  eventparam_.Add(value);
}

// repeated uint32 EventTick = 6;
inline int PBTaskList::eventtick_size() const {
  return eventtick_.size();
}
inline void PBTaskList::clear_eventtick() {
  eventtick_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::eventtick() const {
  return eventtick_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_eventtick() {
  return &eventtick_;
}
inline ::google::protobuf::uint32 PBTaskList::eventtick(int index) const {
  return eventtick_.Get(index);
}
inline void PBTaskList::set_eventtick(int index, ::google::protobuf::uint32 value) {
  eventtick_.Set(index, value);
}
inline void PBTaskList::add_eventtick(::google::protobuf::uint32 value) {
  eventtick_.Add(value);
}

// optional .PBStorageTaskData StorageTaskData = 7;
inline bool PBTaskList::has_storagetaskdata() const {
  return _has_bit(6);
}
inline void PBTaskList::clear_storagetaskdata() {
  if (storagetaskdata_ != NULL) storagetaskdata_->::PBStorageTaskData::Clear();
  _clear_bit(6);
}
inline const ::PBStorageTaskData& PBTaskList::storagetaskdata() const {
  return storagetaskdata_ != NULL ? *storagetaskdata_ : *default_instance_->storagetaskdata_;
}
inline ::PBStorageTaskData* PBTaskList::mutable_storagetaskdata() {
  _set_bit(6);
  if (storagetaskdata_ == NULL) storagetaskdata_ = new ::PBStorageTaskData;
  return storagetaskdata_;
}

// repeated .TragedyStruct TragedyTaskData = 8;
inline int PBTaskList::tragedytaskdata_size() const {
  return tragedytaskdata_.size();
}
inline void PBTaskList::clear_tragedytaskdata() {
  tragedytaskdata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::TragedyStruct >&
PBTaskList::tragedytaskdata() const {
  return tragedytaskdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::TragedyStruct >*
PBTaskList::mutable_tragedytaskdata() {
  return &tragedytaskdata_;
}
inline const ::TragedyStruct& PBTaskList::tragedytaskdata(int index) const {
  return tragedytaskdata_.Get(index);
}
inline ::TragedyStruct* PBTaskList::mutable_tragedytaskdata(int index) {
  return tragedytaskdata_.Mutable(index);
}
inline ::TragedyStruct* PBTaskList::add_tragedytaskdata() {
  return tragedytaskdata_.Add();
}

// repeated uint32 CompletedTask = 9;
inline int PBTaskList::completedtask_size() const {
  return completedtask_.size();
}
inline void PBTaskList::clear_completedtask() {
  completedtask_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::completedtask() const {
  return completedtask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_completedtask() {
  return &completedtask_;
}
inline ::google::protobuf::uint32 PBTaskList::completedtask(int index) const {
  return completedtask_.Get(index);
}
inline void PBTaskList::set_completedtask(int index, ::google::protobuf::uint32 value) {
  completedtask_.Set(index, value);
}
inline void PBTaskList::add_completedtask(::google::protobuf::uint32 value) {
  completedtask_.Add(value);
}

// repeated uint32 FailedTask = 10;
inline int PBTaskList::failedtask_size() const {
  return failedtask_.size();
}
inline void PBTaskList::clear_failedtask() {
  failedtask_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::failedtask() const {
  return failedtask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_failedtask() {
  return &failedtask_;
}
inline ::google::protobuf::uint32 PBTaskList::failedtask(int index) const {
  return failedtask_.Get(index);
}
inline void PBTaskList::set_failedtask(int index, ::google::protobuf::uint32 value) {
  failedtask_.Set(index, value);
}
inline void PBTaskList::add_failedtask(::google::protobuf::uint32 value) {
  failedtask_.Add(value);
}

// repeated .PBTaskGroupData TaskGroups = 11;
inline int PBTaskList::taskgroups_size() const {
  return taskgroups_.size();
}
inline void PBTaskList::clear_taskgroups() {
  taskgroups_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTaskGroupData >&
PBTaskList::taskgroups() const {
  return taskgroups_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTaskGroupData >*
PBTaskList::mutable_taskgroups() {
  return &taskgroups_;
}
inline const ::PBTaskGroupData& PBTaskList::taskgroups(int index) const {
  return taskgroups_.Get(index);
}
inline ::PBTaskGroupData* PBTaskList::mutable_taskgroups(int index) {
  return taskgroups_.Mutable(index);
}
inline ::PBTaskGroupData* PBTaskList::add_taskgroups() {
  return taskgroups_.Add();
}

// optional uint32 CompletedTragedy = 12;
inline bool PBTaskList::has_completedtragedy() const {
  return _has_bit(11);
}
inline void PBTaskList::clear_completedtragedy() {
  completedtragedy_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBTaskList::completedtragedy() const {
  return completedtragedy_;
}
inline void PBTaskList::set_completedtragedy(::google::protobuf::uint32 value) {
  _set_bit(11);
  completedtragedy_ = value;
}

// optional fixed32 LastLogOff = 13;
inline bool PBTaskList::has_lastlogoff() const {
  return _has_bit(12);
}
inline void PBTaskList::clear_lastlogoff() {
  lastlogoff_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBTaskList::lastlogoff() const {
  return lastlogoff_;
}
inline void PBTaskList::set_lastlogoff(::google::protobuf::uint32 value) {
  _set_bit(12);
  lastlogoff_ = value;
}

// optional uint32 RedirectFailTask = 14;
inline bool PBTaskList::has_redirectfailtask() const {
  return _has_bit(13);
}
inline void PBTaskList::clear_redirectfailtask() {
  redirectfailtask_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBTaskList::redirectfailtask() const {
  return redirectfailtask_;
}
inline void PBTaskList::set_redirectfailtask(::google::protobuf::uint32 value) {
  _set_bit(13);
  redirectfailtask_ = value;
}

// optional .PBChairManTaskData ChairManTask = 15;
inline bool PBTaskList::has_chairmantask() const {
  return _has_bit(14);
}
inline void PBTaskList::clear_chairmantask() {
  if (chairmantask_ != NULL) chairmantask_->::PBChairManTaskData::Clear();
  _clear_bit(14);
}
inline const ::PBChairManTaskData& PBTaskList::chairmantask() const {
  return chairmantask_ != NULL ? *chairmantask_ : *default_instance_->chairmantask_;
}
inline ::PBChairManTaskData* PBTaskList::mutable_chairmantask() {
  _set_bit(14);
  if (chairmantask_ == NULL) chairmantask_ = new ::PBChairManTaskData;
  return chairmantask_;
}

// optional uint32 TodayTeamLoopNum = 16;
inline bool PBTaskList::has_todayteamloopnum() const {
  return _has_bit(15);
}
inline void PBTaskList::clear_todayteamloopnum() {
  todayteamloopnum_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBTaskList::todayteamloopnum() const {
  return todayteamloopnum_;
}
inline void PBTaskList::set_todayteamloopnum(::google::protobuf::uint32 value) {
  _set_bit(15);
  todayteamloopnum_ = value;
}

// repeated .PBRefreshTaskData RefreshData = 17;
inline int PBTaskList::refreshdata_size() const {
  return refreshdata_.size();
}
inline void PBTaskList::clear_refreshdata() {
  refreshdata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRefreshTaskData >&
PBTaskList::refreshdata() const {
  return refreshdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRefreshTaskData >*
PBTaskList::mutable_refreshdata() {
  return &refreshdata_;
}
inline const ::PBRefreshTaskData& PBTaskList::refreshdata(int index) const {
  return refreshdata_.Get(index);
}
inline ::PBRefreshTaskData* PBTaskList::mutable_refreshdata(int index) {
  return refreshdata_.Mutable(index);
}
inline ::PBRefreshTaskData* PBTaskList::add_refreshdata() {
  return refreshdata_.Add();
}

// repeated uint32 RepeateTask = 18;
inline int PBTaskList::repeatetask_size() const {
  return repeatetask_.size();
}
inline void PBTaskList::clear_repeatetask() {
  repeatetask_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::repeatetask() const {
  return repeatetask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_repeatetask() {
  return &repeatetask_;
}
inline ::google::protobuf::uint32 PBTaskList::repeatetask(int index) const {
  return repeatetask_.Get(index);
}
inline void PBTaskList::set_repeatetask(int index, ::google::protobuf::uint32 value) {
  repeatetask_.Set(index, value);
}
inline void PBTaskList::add_repeatetask(::google::protobuf::uint32 value) {
  repeatetask_.Add(value);
}

// repeated uint32 EndTime = 19;
inline int PBTaskList::endtime_size() const {
  return endtime_.size();
}
inline void PBTaskList::clear_endtime() {
  endtime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::endtime() const {
  return endtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_endtime() {
  return &endtime_;
}
inline ::google::protobuf::uint32 PBTaskList::endtime(int index) const {
  return endtime_.Get(index);
}
inline void PBTaskList::set_endtime(int index, ::google::protobuf::uint32 value) {
  endtime_.Set(index, value);
}
inline void PBTaskList::add_endtime(::google::protobuf::uint32 value) {
  endtime_.Add(value);
}

// repeated .GroupPublishData CorpsPublish = 20;
inline int PBTaskList::corpspublish_size() const {
  return corpspublish_.size();
}
inline void PBTaskList::clear_corpspublish() {
  corpspublish_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::GroupPublishData >&
PBTaskList::corpspublish() const {
  return corpspublish_;
}
inline ::google::protobuf::RepeatedPtrField< ::GroupPublishData >*
PBTaskList::mutable_corpspublish() {
  return &corpspublish_;
}
inline const ::GroupPublishData& PBTaskList::corpspublish(int index) const {
  return corpspublish_.Get(index);
}
inline ::GroupPublishData* PBTaskList::mutable_corpspublish(int index) {
  return corpspublish_.Mutable(index);
}
inline ::GroupPublishData* PBTaskList::add_corpspublish() {
  return corpspublish_.Add();
}

// -------------------------------------------------------------------

// PBMapData

// optional uint32 Direction = 1;
inline bool PBMapData::has_direction() const {
  return _has_bit(0);
}
inline void PBMapData::clear_direction() {
  direction_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMapData::direction() const {
  return direction_;
}
inline void PBMapData::set_direction(::google::protobuf::uint32 value) {
  _set_bit(0);
  direction_ = value;
}

// optional uint32 PosX = 2;
inline bool PBMapData::has_posx() const {
  return _has_bit(1);
}
inline void PBMapData::clear_posx() {
  posx_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMapData::posx() const {
  return posx_;
}
inline void PBMapData::set_posx(::google::protobuf::uint32 value) {
  _set_bit(1);
  posx_ = value;
}

// optional uint32 PosY = 3;
inline bool PBMapData::has_posy() const {
  return _has_bit(2);
}
inline void PBMapData::clear_posy() {
  posy_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMapData::posy() const {
  return posy_;
}
inline void PBMapData::set_posy(::google::protobuf::uint32 value) {
  _set_bit(2);
  posy_ = value;
}

// optional uint32 AliveStatus = 4;
inline bool PBMapData::has_alivestatus() const {
  return _has_bit(3);
}
inline void PBMapData::clear_alivestatus() {
  alivestatus_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMapData::alivestatus() const {
  return alivestatus_;
}
inline void PBMapData::set_alivestatus(::google::protobuf::uint32 value) {
  _set_bit(3);
  alivestatus_ = value;
}

// -------------------------------------------------------------------

// PBFriendGlobalData

// repeated string GroupNames = 1;
inline int PBFriendGlobalData::groupnames_size() const {
  return groupnames_.size();
}
inline void PBFriendGlobalData::clear_groupnames() {
  groupnames_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBFriendGlobalData::groupnames() const {
  return groupnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBFriendGlobalData::mutable_groupnames() {
  return &groupnames_;
}
inline const ::std::string& PBFriendGlobalData::groupnames(int index) const {
  return groupnames_.Get(index);
}
inline ::std::string* PBFriendGlobalData::mutable_groupnames(int index) {
  return groupnames_.Mutable(index);
}
inline void PBFriendGlobalData::set_groupnames(int index, const ::std::string& value) {
  groupnames_.Mutable(index)->assign(value);
}
inline void PBFriendGlobalData::set_groupnames(int index, const char* value) {
  groupnames_.Mutable(index)->assign(value);
}
inline void PBFriendGlobalData::set_groupnames(int index, const char* value, size_t size) {
  groupnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFriendGlobalData::add_groupnames() {
  return groupnames_.Add();
}
inline void PBFriendGlobalData::add_groupnames(const ::std::string& value) {
  groupnames_.Add()->assign(value);
}
inline void PBFriendGlobalData::add_groupnames(const char* value) {
  groupnames_.Add()->assign(value);
}
inline void PBFriendGlobalData::add_groupnames(const char* value, size_t size) {
  groupnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional uint32 IsRefuseAll = 2;
inline bool PBFriendGlobalData::has_isrefuseall() const {
  return _has_bit(1);
}
inline void PBFriendGlobalData::clear_isrefuseall() {
  isrefuseall_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBFriendGlobalData::isrefuseall() const {
  return isrefuseall_;
}
inline void PBFriendGlobalData::set_isrefuseall(::google::protobuf::uint32 value) {
  _set_bit(1);
  isrefuseall_ = value;
}

// -------------------------------------------------------------------

// PBFriendData

// repeated uint32 PlayerId = 1;
inline int PBFriendData::playerid_size() const {
  return playerid_.size();
}
inline void PBFriendData::clear_playerid() {
  playerid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::playerid() const {
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_playerid() {
  return &playerid_;
}
inline ::google::protobuf::uint32 PBFriendData::playerid(int index) const {
  return playerid_.Get(index);
}
inline void PBFriendData::set_playerid(int index, ::google::protobuf::uint32 value) {
  playerid_.Set(index, value);
}
inline void PBFriendData::add_playerid(::google::protobuf::uint32 value) {
  playerid_.Add(value);
}

// repeated uint32 GroupID = 2;
inline int PBFriendData::groupid_size() const {
  return groupid_.size();
}
inline void PBFriendData::clear_groupid() {
  groupid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::groupid() const {
  return groupid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_groupid() {
  return &groupid_;
}
inline ::google::protobuf::uint32 PBFriendData::groupid(int index) const {
  return groupid_.Get(index);
}
inline void PBFriendData::set_groupid(int index, ::google::protobuf::uint32 value) {
  groupid_.Set(index, value);
}
inline void PBFriendData::add_groupid(::google::protobuf::uint32 value) {
  groupid_.Add(value);
}

// repeated uint32 Rel2Me = 3;
inline int PBFriendData::rel2me_size() const {
  return rel2me_.size();
}
inline void PBFriendData::clear_rel2me() {
  rel2me_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::rel2me() const {
  return rel2me_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_rel2me() {
  return &rel2me_;
}
inline ::google::protobuf::uint32 PBFriendData::rel2me(int index) const {
  return rel2me_.Get(index);
}
inline void PBFriendData::set_rel2me(int index, ::google::protobuf::uint32 value) {
  rel2me_.Set(index, value);
}
inline void PBFriendData::add_rel2me(::google::protobuf::uint32 value) {
  rel2me_.Add(value);
}

// optional uint32 BlessTimes = 4;
inline bool PBFriendData::has_blesstimes() const {
  return _has_bit(3);
}
inline void PBFriendData::clear_blesstimes() {
  blesstimes_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBFriendData::blesstimes() const {
  return blesstimes_;
}
inline void PBFriendData::set_blesstimes(::google::protobuf::uint32 value) {
  _set_bit(3);
  blesstimes_ = value;
}

// repeated uint32 IntimacyDegree = 5;
inline int PBFriendData::intimacydegree_size() const {
  return intimacydegree_.size();
}
inline void PBFriendData::clear_intimacydegree() {
  intimacydegree_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::intimacydegree() const {
  return intimacydegree_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_intimacydegree() {
  return &intimacydegree_;
}
inline ::google::protobuf::uint32 PBFriendData::intimacydegree(int index) const {
  return intimacydegree_.Get(index);
}
inline void PBFriendData::set_intimacydegree(int index, ::google::protobuf::uint32 value) {
  intimacydegree_.Set(index, value);
}
inline void PBFriendData::add_intimacydegree(::google::protobuf::uint32 value) {
  intimacydegree_.Add(value);
}

// repeated uint32 LastTimeAllOnline = 6;
inline int PBFriendData::lasttimeallonline_size() const {
  return lasttimeallonline_.size();
}
inline void PBFriendData::clear_lasttimeallonline() {
  lasttimeallonline_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::lasttimeallonline() const {
  return lasttimeallonline_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_lasttimeallonline() {
  return &lasttimeallonline_;
}
inline ::google::protobuf::uint32 PBFriendData::lasttimeallonline(int index) const {
  return lasttimeallonline_.Get(index);
}
inline void PBFriendData::set_lasttimeallonline(int index, ::google::protobuf::uint32 value) {
  lasttimeallonline_.Set(index, value);
}
inline void PBFriendData::add_lasttimeallonline(::google::protobuf::uint32 value) {
  lasttimeallonline_.Add(value);
}

// repeated uint32 DailyIntimacy = 7;
inline int PBFriendData::dailyintimacy_size() const {
  return dailyintimacy_.size();
}
inline void PBFriendData::clear_dailyintimacy() {
  dailyintimacy_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::dailyintimacy() const {
  return dailyintimacy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_dailyintimacy() {
  return &dailyintimacy_;
}
inline ::google::protobuf::uint32 PBFriendData::dailyintimacy(int index) const {
  return dailyintimacy_.Get(index);
}
inline void PBFriendData::set_dailyintimacy(int index, ::google::protobuf::uint32 value) {
  dailyintimacy_.Set(index, value);
}
inline void PBFriendData::add_dailyintimacy(::google::protobuf::uint32 value) {
  dailyintimacy_.Add(value);
}

// repeated uint32 LastUpdateTime = 8;
inline int PBFriendData::lastupdatetime_size() const {
  return lastupdatetime_.size();
}
inline void PBFriendData::clear_lastupdatetime() {
  lastupdatetime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriendData::lastupdatetime() const {
  return lastupdatetime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriendData::mutable_lastupdatetime() {
  return &lastupdatetime_;
}
inline ::google::protobuf::uint32 PBFriendData::lastupdatetime(int index) const {
  return lastupdatetime_.Get(index);
}
inline void PBFriendData::set_lastupdatetime(int index, ::google::protobuf::uint32 value) {
  lastupdatetime_.Set(index, value);
}
inline void PBFriendData::add_lastupdatetime(::google::protobuf::uint32 value) {
  lastupdatetime_.Add(value);
}

// -------------------------------------------------------------------

// PBEnemyData

// repeated uint32 PlayerId = 1;
inline int PBEnemyData::playerid_size() const {
  return playerid_.size();
}
inline void PBEnemyData::clear_playerid() {
  playerid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEnemyData::playerid() const {
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEnemyData::mutable_playerid() {
  return &playerid_;
}
inline ::google::protobuf::uint32 PBEnemyData::playerid(int index) const {
  return playerid_.Get(index);
}
inline void PBEnemyData::set_playerid(int index, ::google::protobuf::uint32 value) {
  playerid_.Set(index, value);
}
inline void PBEnemyData::add_playerid(::google::protobuf::uint32 value) {
  playerid_.Add(value);
}

// repeated uint32 Killed = 2;
inline int PBEnemyData::killed_size() const {
  return killed_.size();
}
inline void PBEnemyData::clear_killed() {
  killed_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEnemyData::killed() const {
  return killed_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEnemyData::mutable_killed() {
  return &killed_;
}
inline ::google::protobuf::uint32 PBEnemyData::killed(int index) const {
  return killed_.Get(index);
}
inline void PBEnemyData::set_killed(int index, ::google::protobuf::uint32 value) {
  killed_.Set(index, value);
}
inline void PBEnemyData::add_killed(::google::protobuf::uint32 value) {
  killed_.Add(value);
}

// repeated uint32 BeKilled = 3;
inline int PBEnemyData::bekilled_size() const {
  return bekilled_.size();
}
inline void PBEnemyData::clear_bekilled() {
  bekilled_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEnemyData::bekilled() const {
  return bekilled_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEnemyData::mutable_bekilled() {
  return &bekilled_;
}
inline ::google::protobuf::uint32 PBEnemyData::bekilled(int index) const {
  return bekilled_.Get(index);
}
inline void PBEnemyData::set_bekilled(int index, ::google::protobuf::uint32 value) {
  bekilled_.Set(index, value);
}
inline void PBEnemyData::add_bekilled(::google::protobuf::uint32 value) {
  bekilled_.Add(value);
}

// repeated uint32 IsLocked = 4;
inline int PBEnemyData::islocked_size() const {
  return islocked_.size();
}
inline void PBEnemyData::clear_islocked() {
  islocked_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEnemyData::islocked() const {
  return islocked_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEnemyData::mutable_islocked() {
  return &islocked_;
}
inline ::google::protobuf::uint32 PBEnemyData::islocked(int index) const {
  return islocked_.Get(index);
}
inline void PBEnemyData::set_islocked(int index, ::google::protobuf::uint32 value) {
  islocked_.Set(index, value);
}
inline void PBEnemyData::add_islocked(::google::protobuf::uint32 value) {
  islocked_.Add(value);
}

// repeated uint32 KillTime = 5;
inline int PBEnemyData::killtime_size() const {
  return killtime_.size();
}
inline void PBEnemyData::clear_killtime() {
  killtime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEnemyData::killtime() const {
  return killtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEnemyData::mutable_killtime() {
  return &killtime_;
}
inline ::google::protobuf::uint32 PBEnemyData::killtime(int index) const {
  return killtime_.Get(index);
}
inline void PBEnemyData::set_killtime(int index, ::google::protobuf::uint32 value) {
  killtime_.Set(index, value);
}
inline void PBEnemyData::add_killtime(::google::protobuf::uint32 value) {
  killtime_.Add(value);
}

// -------------------------------------------------------------------

// PBFriend

// optional .PBFriendGlobalData Global = 1;
inline bool PBFriend::has_global() const {
  return _has_bit(0);
}
inline void PBFriend::clear_global() {
  if (global_ != NULL) global_->::PBFriendGlobalData::Clear();
  _clear_bit(0);
}
inline const ::PBFriendGlobalData& PBFriend::global() const {
  return global_ != NULL ? *global_ : *default_instance_->global_;
}
inline ::PBFriendGlobalData* PBFriend::mutable_global() {
  _set_bit(0);
  if (global_ == NULL) global_ = new ::PBFriendGlobalData;
  return global_;
}

// optional .PBFriendData Friend = 2;
inline bool PBFriend::has_friend_() const {
  return _has_bit(1);
}
inline void PBFriend::clear_friend_() {
  if (friend__ != NULL) friend__->::PBFriendData::Clear();
  _clear_bit(1);
}
inline const ::PBFriendData& PBFriend::friend_() const {
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
}
inline ::PBFriendData* PBFriend::mutable_friend_() {
  _set_bit(1);
  if (friend__ == NULL) friend__ = new ::PBFriendData;
  return friend__;
}

// optional .PBEnemyData Enemy = 3;
inline bool PBFriend::has_enemy() const {
  return _has_bit(2);
}
inline void PBFriend::clear_enemy() {
  if (enemy_ != NULL) enemy_->::PBEnemyData::Clear();
  _clear_bit(2);
}
inline const ::PBEnemyData& PBFriend::enemy() const {
  return enemy_ != NULL ? *enemy_ : *default_instance_->enemy_;
}
inline ::PBEnemyData* PBFriend::mutable_enemy() {
  _set_bit(2);
  if (enemy_ == NULL) enemy_ = new ::PBEnemyData;
  return enemy_;
}

// repeated uint32 BlackList = 4;
inline int PBFriend::blacklist_size() const {
  return blacklist_.size();
}
inline void PBFriend::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriend::blacklist() const {
  return blacklist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriend::mutable_blacklist() {
  return &blacklist_;
}
inline ::google::protobuf::uint32 PBFriend::blacklist(int index) const {
  return blacklist_.Get(index);
}
inline void PBFriend::set_blacklist(int index, ::google::protobuf::uint32 value) {
  blacklist_.Set(index, value);
}
inline void PBFriend::add_blacklist(::google::protobuf::uint32 value) {
  blacklist_.Add(value);
}

// repeated uint32 LatestContact = 5;
inline int PBFriend::latestcontact_size() const {
  return latestcontact_.size();
}
inline void PBFriend::clear_latestcontact() {
  latestcontact_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFriend::latestcontact() const {
  return latestcontact_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFriend::mutable_latestcontact() {
  return &latestcontact_;
}
inline ::google::protobuf::uint32 PBFriend::latestcontact(int index) const {
  return latestcontact_.Get(index);
}
inline void PBFriend::set_latestcontact(int index, ::google::protobuf::uint32 value) {
  latestcontact_.Set(index, value);
}
inline void PBFriend::add_latestcontact(::google::protobuf::uint32 value) {
  latestcontact_.Add(value);
}

// -------------------------------------------------------------------

// PBRepetionData

// optional uint32 Index = 1;
inline bool PBRepetionData::has_index() const {
  return _has_bit(0);
}
inline void PBRepetionData::clear_index() {
  index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRepetionData::index() const {
  return index_;
}
inline void PBRepetionData::set_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  index_ = value;
}

// optional uint32 Data = 2;
inline bool PBRepetionData::has_data() const {
  return _has_bit(1);
}
inline void PBRepetionData::clear_data() {
  data_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRepetionData::data() const {
  return data_;
}
inline void PBRepetionData::set_data(::google::protobuf::uint32 value) {
  _set_bit(1);
  data_ = value;
}

// -------------------------------------------------------------------

// PBRepetionMap

// optional uint32 MapID = 1;
inline bool PBRepetionMap::has_mapid() const {
  return _has_bit(0);
}
inline void PBRepetionMap::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRepetionMap::mapid() const {
  return mapid_;
}
inline void PBRepetionMap::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 Count = 2;
inline bool PBRepetionMap::has_count() const {
  return _has_bit(1);
}
inline void PBRepetionMap::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRepetionMap::count() const {
  return count_;
}
inline void PBRepetionMap::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// repeated .PBRepetionData Data = 3;
inline int PBRepetionMap::data_size() const {
  return data_.size();
}
inline void PBRepetionMap::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionData >&
PBRepetionMap::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepetionData >*
PBRepetionMap::mutable_data() {
  return &data_;
}
inline const ::PBRepetionData& PBRepetionMap::data(int index) const {
  return data_.Get(index);
}
inline ::PBRepetionData* PBRepetionMap::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PBRepetionData* PBRepetionMap::add_data() {
  return data_.Add();
}

// optional uint32 WeekCount = 4;
inline bool PBRepetionMap::has_weekcount() const {
  return _has_bit(3);
}
inline void PBRepetionMap::clear_weekcount() {
  weekcount_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBRepetionMap::weekcount() const {
  return weekcount_;
}
inline void PBRepetionMap::set_weekcount(::google::protobuf::uint32 value) {
  _set_bit(3);
  weekcount_ = value;
}

// -------------------------------------------------------------------

// PBRepetionRepe

// repeated .PBRepetionData RepetionData = 1;
inline int PBRepetionRepe::repetiondata_size() const {
  return repetiondata_.size();
}
inline void PBRepetionRepe::clear_repetiondata() {
  repetiondata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionData >&
PBRepetionRepe::repetiondata() const {
  return repetiondata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepetionData >*
PBRepetionRepe::mutable_repetiondata() {
  return &repetiondata_;
}
inline const ::PBRepetionData& PBRepetionRepe::repetiondata(int index) const {
  return repetiondata_.Get(index);
}
inline ::PBRepetionData* PBRepetionRepe::mutable_repetiondata(int index) {
  return repetiondata_.Mutable(index);
}
inline ::PBRepetionData* PBRepetionRepe::add_repetiondata() {
  return repetiondata_.Add();
}

// optional uint32 RepeIndex = 2;
inline bool PBRepetionRepe::has_repeindex() const {
  return _has_bit(1);
}
inline void PBRepetionRepe::clear_repeindex() {
  repeindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRepetionRepe::repeindex() const {
  return repeindex_;
}
inline void PBRepetionRepe::set_repeindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  repeindex_ = value;
}

// optional uint32 Count = 3;
inline bool PBRepetionRepe::has_count() const {
  return _has_bit(2);
}
inline void PBRepetionRepe::clear_count() {
  count_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBRepetionRepe::count() const {
  return count_;
}
inline void PBRepetionRepe::set_count(::google::protobuf::uint32 value) {
  _set_bit(2);
  count_ = value;
}

// optional uint32 WeekCount = 4;
inline bool PBRepetionRepe::has_weekcount() const {
  return _has_bit(3);
}
inline void PBRepetionRepe::clear_weekcount() {
  weekcount_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBRepetionRepe::weekcount() const {
  return weekcount_;
}
inline void PBRepetionRepe::set_weekcount(::google::protobuf::uint32 value) {
  _set_bit(3);
  weekcount_ = value;
}

// optional uint32 SignUp = 5;
inline bool PBRepetionRepe::has_signup() const {
  return _has_bit(4);
}
inline void PBRepetionRepe::clear_signup() {
  signup_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBRepetionRepe::signup() const {
  return signup_;
}
inline void PBRepetionRepe::set_signup(::google::protobuf::uint32 value) {
  _set_bit(4);
  signup_ = value;
}

// optional uint32 IntoTime = 6;
inline bool PBRepetionRepe::has_intotime() const {
  return _has_bit(5);
}
inline void PBRepetionRepe::clear_intotime() {
  intotime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBRepetionRepe::intotime() const {
  return intotime_;
}
inline void PBRepetionRepe::set_intotime(::google::protobuf::uint32 value) {
  _set_bit(5);
  intotime_ = value;
}

// optional uint32 DieCount = 7;
inline bool PBRepetionRepe::has_diecount() const {
  return _has_bit(6);
}
inline void PBRepetionRepe::clear_diecount() {
  diecount_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBRepetionRepe::diecount() const {
  return diecount_;
}
inline void PBRepetionRepe::set_diecount(::google::protobuf::uint32 value) {
  _set_bit(6);
  diecount_ = value;
}

// -------------------------------------------------------------------

// PBRepetion

// optional uint32 BackLineID = 1;
inline bool PBRepetion::has_backlineid() const {
  return _has_bit(0);
}
inline void PBRepetion::clear_backlineid() {
  backlineid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRepetion::backlineid() const {
  return backlineid_;
}
inline void PBRepetion::set_backlineid(::google::protobuf::uint32 value) {
  _set_bit(0);
  backlineid_ = value;
}

// optional uint32 BackMapID = 2;
inline bool PBRepetion::has_backmapid() const {
  return _has_bit(1);
}
inline void PBRepetion::clear_backmapid() {
  backmapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRepetion::backmapid() const {
  return backmapid_;
}
inline void PBRepetion::set_backmapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  backmapid_ = value;
}

// optional uint32 BackPosX = 3;
inline bool PBRepetion::has_backposx() const {
  return _has_bit(2);
}
inline void PBRepetion::clear_backposx() {
  backposx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBRepetion::backposx() const {
  return backposx_;
}
inline void PBRepetion::set_backposx(::google::protobuf::uint32 value) {
  _set_bit(2);
  backposx_ = value;
}

// optional uint32 BackPosY = 4;
inline bool PBRepetion::has_backposy() const {
  return _has_bit(3);
}
inline void PBRepetion::clear_backposy() {
  backposy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBRepetion::backposy() const {
  return backposy_;
}
inline void PBRepetion::set_backposy(::google::protobuf::uint32 value) {
  _set_bit(3);
  backposy_ = value;
}

// repeated .PBRepetionMap MapInfo = 5;
inline int PBRepetion::mapinfo_size() const {
  return mapinfo_.size();
}
inline void PBRepetion::clear_mapinfo() {
  mapinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionMap >&
PBRepetion::mapinfo() const {
  return mapinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepetionMap >*
PBRepetion::mutable_mapinfo() {
  return &mapinfo_;
}
inline const ::PBRepetionMap& PBRepetion::mapinfo(int index) const {
  return mapinfo_.Get(index);
}
inline ::PBRepetionMap* PBRepetion::mutable_mapinfo(int index) {
  return mapinfo_.Mutable(index);
}
inline ::PBRepetionMap* PBRepetion::add_mapinfo() {
  return mapinfo_.Add();
}

// optional uint64 Key = 6;
inline bool PBRepetion::has_key() const {
  return _has_bit(5);
}
inline void PBRepetion::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 PBRepetion::key() const {
  return key_;
}
inline void PBRepetion::set_key(::google::protobuf::uint64 value) {
  _set_bit(5);
  key_ = value;
}

// optional uint32 CampID = 7;
inline bool PBRepetion::has_campid() const {
  return _has_bit(6);
}
inline void PBRepetion::clear_campid() {
  campid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBRepetion::campid() const {
  return campid_;
}
inline void PBRepetion::set_campid(::google::protobuf::uint32 value) {
  _set_bit(6);
  campid_ = value;
}

// repeated .PBRepetionRepe RepeInfo = 8;
inline int PBRepetion::repeinfo_size() const {
  return repeinfo_.size();
}
inline void PBRepetion::clear_repeinfo() {
  repeinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepetionRepe >&
PBRepetion::repeinfo() const {
  return repeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepetionRepe >*
PBRepetion::mutable_repeinfo() {
  return &repeinfo_;
}
inline const ::PBRepetionRepe& PBRepetion::repeinfo(int index) const {
  return repeinfo_.Get(index);
}
inline ::PBRepetionRepe* PBRepetion::mutable_repeinfo(int index) {
  return repeinfo_.Mutable(index);
}
inline ::PBRepetionRepe* PBRepetion::add_repeinfo() {
  return repeinfo_.Add();
}

// optional uint32 InRepetion = 9;
inline bool PBRepetion::has_inrepetion() const {
  return _has_bit(8);
}
inline void PBRepetion::clear_inrepetion() {
  inrepetion_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBRepetion::inrepetion() const {
  return inrepetion_;
}
inline void PBRepetion::set_inrepetion(::google::protobuf::uint32 value) {
  _set_bit(8);
  inrepetion_ = value;
}

// optional uint32 RepetionIndex = 10;
inline bool PBRepetion::has_repetionindex() const {
  return _has_bit(9);
}
inline void PBRepetion::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBRepetion::repetionindex() const {
  return repetionindex_;
}
inline void PBRepetion::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(9);
  repetionindex_ = value;
}

// optional uint32 CheckResult = 11;
inline bool PBRepetion::has_checkresult() const {
  return _has_bit(10);
}
inline void PBRepetion::clear_checkresult() {
  checkresult_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBRepetion::checkresult() const {
  return checkresult_;
}
inline void PBRepetion::set_checkresult(::google::protobuf::uint32 value) {
  _set_bit(10);
  checkresult_ = value;
}

// optional uint32 AnswerCount = 12;
inline bool PBRepetion::has_answercount() const {
  return _has_bit(11);
}
inline void PBRepetion::clear_answercount() {
  answercount_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBRepetion::answercount() const {
  return answercount_;
}
inline void PBRepetion::set_answercount(::google::protobuf::uint32 value) {
  _set_bit(11);
  answercount_ = value;
}

// optional uint32 GlobalSceneStatus = 13;
inline bool PBRepetion::has_globalscenestatus() const {
  return _has_bit(12);
}
inline void PBRepetion::clear_globalscenestatus() {
  globalscenestatus_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBRepetion::globalscenestatus() const {
  return globalscenestatus_;
}
inline void PBRepetion::set_globalscenestatus(::google::protobuf::uint32 value) {
  _set_bit(12);
  globalscenestatus_ = value;
}

// optional uint32 GlobalWarOffLineTime = 14;
inline bool PBRepetion::has_globalwarofflinetime() const {
  return _has_bit(13);
}
inline void PBRepetion::clear_globalwarofflinetime() {
  globalwarofflinetime_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBRepetion::globalwarofflinetime() const {
  return globalwarofflinetime_;
}
inline void PBRepetion::set_globalwarofflinetime(::google::protobuf::uint32 value) {
  _set_bit(13);
  globalwarofflinetime_ = value;
}

// optional uint64 RepetionKey = 15;
inline bool PBRepetion::has_repetionkey() const {
  return _has_bit(14);
}
inline void PBRepetion::clear_repetionkey() {
  repetionkey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::uint64 PBRepetion::repetionkey() const {
  return repetionkey_;
}
inline void PBRepetion::set_repetionkey(::google::protobuf::uint64 value) {
  _set_bit(14);
  repetionkey_ = value;
}

// -------------------------------------------------------------------

// PBMember

// optional uint32 EntityID = 1;
inline bool PBMember::has_entityid() const {
  return _has_bit(0);
}
inline void PBMember::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMember::entityid() const {
  return entityid_;
}
inline void PBMember::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 CharID = 2;
inline bool PBMember::has_charid() const {
  return _has_bit(1);
}
inline void PBMember::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMember::charid() const {
  return charid_;
}
inline void PBMember::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional string Name = 3;
inline bool PBMember::has_name() const {
  return _has_bit(2);
}
inline void PBMember::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBMember::name() const {
  return *name_;
}
inline void PBMember::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMember::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMember::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMember::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 AccountID = 4;
inline bool PBMember::has_accountid() const {
  return _has_bit(3);
}
inline void PBMember::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMember::accountid() const {
  return accountid_;
}
inline void PBMember::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 Type = 5;
inline bool PBMember::has_type() const {
  return _has_bit(4);
}
inline void PBMember::clear_type() {
  type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMember::type() const {
  return type_;
}
inline void PBMember::set_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  type_ = value;
}

// optional uint32 Face = 6;
inline bool PBMember::has_face() const {
  return _has_bit(5);
}
inline void PBMember::clear_face() {
  face_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMember::face() const {
  return face_;
}
inline void PBMember::set_face(::google::protobuf::uint32 value) {
  _set_bit(5);
  face_ = value;
}

// optional uint32 Metier = 7;
inline bool PBMember::has_metier() const {
  return _has_bit(6);
}
inline void PBMember::clear_metier() {
  metier_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMember::metier() const {
  return metier_;
}
inline void PBMember::set_metier(::google::protobuf::uint32 value) {
  _set_bit(6);
  metier_ = value;
}

// optional uint32 Level = 8;
inline bool PBMember::has_level() const {
  return _has_bit(7);
}
inline void PBMember::clear_level() {
  level_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMember::level() const {
  return level_;
}
inline void PBMember::set_level(::google::protobuf::uint32 value) {
  _set_bit(7);
  level_ = value;
}

// optional uint32 Sex = 9;
inline bool PBMember::has_sex() const {
  return _has_bit(8);
}
inline void PBMember::clear_sex() {
  sex_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMember::sex() const {
  return sex_;
}
inline void PBMember::set_sex(::google::protobuf::uint32 value) {
  _set_bit(8);
  sex_ = value;
}

// optional uint32 LineID = 10;
inline bool PBMember::has_lineid() const {
  return _has_bit(9);
}
inline void PBMember::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMember::lineid() const {
  return lineid_;
}
inline void PBMember::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(9);
  lineid_ = value;
}

// optional uint32 MapID = 11;
inline bool PBMember::has_mapid() const {
  return _has_bit(10);
}
inline void PBMember::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMember::mapid() const {
  return mapid_;
}
inline void PBMember::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(10);
  mapid_ = value;
}

// optional uint32 HP = 12;
inline bool PBMember::has_hp() const {
  return _has_bit(11);
}
inline void PBMember::clear_hp() {
  hp_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMember::hp() const {
  return hp_;
}
inline void PBMember::set_hp(::google::protobuf::uint32 value) {
  _set_bit(11);
  hp_ = value;
}

// optional uint32 MP = 13;
inline bool PBMember::has_mp() const {
  return _has_bit(12);
}
inline void PBMember::clear_mp() {
  mp_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBMember::mp() const {
  return mp_;
}
inline void PBMember::set_mp(::google::protobuf::uint32 value) {
  _set_bit(12);
  mp_ = value;
}

// optional uint32 AP = 14;
inline bool PBMember::has_ap() const {
  return _has_bit(13);
}
inline void PBMember::clear_ap() {
  ap_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBMember::ap() const {
  return ap_;
}
inline void PBMember::set_ap(::google::protobuf::uint32 value) {
  _set_bit(13);
  ap_ = value;
}

// optional uint32 XPos = 15;
inline bool PBMember::has_xpos() const {
  return _has_bit(14);
}
inline void PBMember::clear_xpos() {
  xpos_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBMember::xpos() const {
  return xpos_;
}
inline void PBMember::set_xpos(::google::protobuf::uint32 value) {
  _set_bit(14);
  xpos_ = value;
}

// optional uint32 YPos = 16;
inline bool PBMember::has_ypos() const {
  return _has_bit(15);
}
inline void PBMember::clear_ypos() {
  ypos_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBMember::ypos() const {
  return ypos_;
}
inline void PBMember::set_ypos(::google::protobuf::uint32 value) {
  _set_bit(15);
  ypos_ = value;
}

// optional uint32 CommState = 17;
inline bool PBMember::has_commstate() const {
  return _has_bit(16);
}
inline void PBMember::clear_commstate() {
  commstate_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBMember::commstate() const {
  return commstate_;
}
inline void PBMember::set_commstate(::google::protobuf::uint32 value) {
  _set_bit(16);
  commstate_ = value;
}

// optional .PBBuffList BuffList = 18;
inline bool PBMember::has_bufflist() const {
  return _has_bit(17);
}
inline void PBMember::clear_bufflist() {
  if (bufflist_ != NULL) bufflist_->::PBBuffList::Clear();
  _clear_bit(17);
}
inline const ::PBBuffList& PBMember::bufflist() const {
  return bufflist_ != NULL ? *bufflist_ : *default_instance_->bufflist_;
}
inline ::PBBuffList* PBMember::mutable_bufflist() {
  _set_bit(17);
  if (bufflist_ == NULL) bufflist_ = new ::PBBuffList;
  return bufflist_;
}

// optional uint32 RepetionMapIndex = 19;
inline bool PBMember::has_repetionmapindex() const {
  return _has_bit(18);
}
inline void PBMember::clear_repetionmapindex() {
  repetionmapindex_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBMember::repetionmapindex() const {
  return repetionmapindex_;
}
inline void PBMember::set_repetionmapindex(::google::protobuf::uint32 value) {
  _set_bit(18);
  repetionmapindex_ = value;
}

// optional uint32 Order = 20;
inline bool PBMember::has_order() const {
  return _has_bit(19);
}
inline void PBMember::clear_order() {
  order_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBMember::order() const {
  return order_;
}
inline void PBMember::set_order(::google::protobuf::uint32 value) {
  _set_bit(19);
  order_ = value;
}

// -------------------------------------------------------------------

// PBTeamMsg

// optional uint32 Type = 1;
inline bool PBTeamMsg::has_type() const {
  return _has_bit(0);
}
inline void PBTeamMsg::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTeamMsg::type() const {
  return type_;
}
inline void PBTeamMsg::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 CharID = 2;
inline bool PBTeamMsg::has_charid() const {
  return _has_bit(1);
}
inline void PBTeamMsg::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTeamMsg::charid() const {
  return charid_;
}
inline void PBTeamMsg::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional string Name = 3;
inline bool PBTeamMsg::has_name() const {
  return _has_bit(2);
}
inline void PBTeamMsg::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBTeamMsg::name() const {
  return *name_;
}
inline void PBTeamMsg::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamMsg::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamMsg::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamMsg::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Metier = 4;
inline bool PBTeamMsg::has_metier() const {
  return _has_bit(3);
}
inline void PBTeamMsg::clear_metier() {
  metier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTeamMsg::metier() const {
  return metier_;
}
inline void PBTeamMsg::set_metier(::google::protobuf::uint32 value) {
  _set_bit(3);
  metier_ = value;
}

// optional uint32 Level = 5;
inline bool PBTeamMsg::has_level() const {
  return _has_bit(4);
}
inline void PBTeamMsg::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTeamMsg::level() const {
  return level_;
}
inline void PBTeamMsg::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 MaxLevel = 6;
inline bool PBTeamMsg::has_maxlevel() const {
  return _has_bit(5);
}
inline void PBTeamMsg::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTeamMsg::maxlevel() const {
  return maxlevel_;
}
inline void PBTeamMsg::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxlevel_ = value;
}

// optional uint32 MinLevel = 7;
inline bool PBTeamMsg::has_minlevel() const {
  return _has_bit(6);
}
inline void PBTeamMsg::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTeamMsg::minlevel() const {
  return minlevel_;
}
inline void PBTeamMsg::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  minlevel_ = value;
}

// optional string Content = 8;
inline bool PBTeamMsg::has_content() const {
  return _has_bit(7);
}
inline void PBTeamMsg::clear_content() {
  if (content_ != &_default_content_) {
    content_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& PBTeamMsg::content() const {
  return *content_;
}
inline void PBTeamMsg::set_content(const ::std::string& value) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PBTeamMsg::set_content(const char* value) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PBTeamMsg::set_content(const char* value, size_t size) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamMsg::mutable_content() {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  return content_;
}

// optional uint32 Count = 9;
inline bool PBTeamMsg::has_count() const {
  return _has_bit(8);
}
inline void PBTeamMsg::clear_count() {
  count_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBTeamMsg::count() const {
  return count_;
}
inline void PBTeamMsg::set_count(::google::protobuf::uint32 value) {
  _set_bit(8);
  count_ = value;
}

// optional uint32 RootStyle = 10;
inline bool PBTeamMsg::has_rootstyle() const {
  return _has_bit(9);
}
inline void PBTeamMsg::clear_rootstyle() {
  rootstyle_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTeamMsg::rootstyle() const {
  return rootstyle_;
}
inline void PBTeamMsg::set_rootstyle(::google::protobuf::uint32 value) {
  _set_bit(9);
  rootstyle_ = value;
}

// optional uint32 SubStyle = 11;
inline bool PBTeamMsg::has_substyle() const {
  return _has_bit(10);
}
inline void PBTeamMsg::clear_substyle() {
  substyle_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBTeamMsg::substyle() const {
  return substyle_;
}
inline void PBTeamMsg::set_substyle(::google::protobuf::uint32 value) {
  _set_bit(10);
  substyle_ = value;
}

// -------------------------------------------------------------------

// PBStallInfo

// optional string StallName = 1;
inline bool PBStallInfo::has_stallname() const {
  return _has_bit(0);
}
inline void PBStallInfo::clear_stallname() {
  if (stallname_ != &_default_stallname_) {
    stallname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBStallInfo::stallname() const {
  return *stallname_;
}
inline void PBStallInfo::set_stallname(const ::std::string& value) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void PBStallInfo::set_stallname(const char* value) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void PBStallInfo::set_stallname(const char* value, size_t size) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBStallInfo::mutable_stallname() {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  return stallname_;
}

// optional string AdContent = 2;
inline bool PBStallInfo::has_adcontent() const {
  return _has_bit(1);
}
inline void PBStallInfo::clear_adcontent() {
  if (adcontent_ != &_default_adcontent_) {
    adcontent_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBStallInfo::adcontent() const {
  return *adcontent_;
}
inline void PBStallInfo::set_adcontent(const ::std::string& value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void PBStallInfo::set_adcontent(const char* value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void PBStallInfo::set_adcontent(const char* value, size_t size) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBStallInfo::mutable_adcontent() {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  return adcontent_;
}

// optional uint32 HasFlag = 3;
inline bool PBStallInfo::has_hasflag() const {
  return _has_bit(2);
}
inline void PBStallInfo::clear_hasflag() {
  hasflag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBStallInfo::hasflag() const {
  return hasflag_;
}
inline void PBStallInfo::set_hasflag(::google::protobuf::uint32 value) {
  _set_bit(2);
  hasflag_ = value;
}

// optional int32 StallType = 4;
inline bool PBStallInfo::has_stalltype() const {
  return _has_bit(3);
}
inline void PBStallInfo::clear_stalltype() {
  stalltype_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBStallInfo::stalltype() const {
  return stalltype_;
}
inline void PBStallInfo::set_stalltype(::google::protobuf::int32 value) {
  _set_bit(3);
  stalltype_ = value;
}

// -------------------------------------------------------------------

// PBLifeSkill

// optional uint32 LifeSkillType = 1;
inline bool PBLifeSkill::has_lifeskilltype() const {
  return _has_bit(0);
}
inline void PBLifeSkill::clear_lifeskilltype() {
  lifeskilltype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLifeSkill::lifeskilltype() const {
  return lifeskilltype_;
}
inline void PBLifeSkill::set_lifeskilltype(::google::protobuf::uint32 value) {
  _set_bit(0);
  lifeskilltype_ = value;
}

// optional uint32 LifeSkillLevel = 2;
inline bool PBLifeSkill::has_lifeskilllevel() const {
  return _has_bit(1);
}
inline void PBLifeSkill::clear_lifeskilllevel() {
  lifeskilllevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBLifeSkill::lifeskilllevel() const {
  return lifeskilllevel_;
}
inline void PBLifeSkill::set_lifeskilllevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  lifeskilllevel_ = value;
}

// optional uint32 SpecializedDegree = 3;
inline bool PBLifeSkill::has_specializeddegree() const {
  return _has_bit(2);
}
inline void PBLifeSkill::clear_specializeddegree() {
  specializeddegree_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBLifeSkill::specializeddegree() const {
  return specializeddegree_;
}
inline void PBLifeSkill::set_specializeddegree(::google::protobuf::uint32 value) {
  _set_bit(2);
  specializeddegree_ = value;
}

// optional uint32 LifeSkillStatus = 4;
inline bool PBLifeSkill::has_lifeskillstatus() const {
  return _has_bit(3);
}
inline void PBLifeSkill::clear_lifeskillstatus() {
  lifeskillstatus_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBLifeSkill::lifeskillstatus() const {
  return lifeskillstatus_;
}
inline void PBLifeSkill::set_lifeskillstatus(::google::protobuf::uint32 value) {
  _set_bit(3);
  lifeskillstatus_ = value;
}

// optional uint32 LifeSkillKind = 5;
inline bool PBLifeSkill::has_lifeskillkind() const {
  return _has_bit(4);
}
inline void PBLifeSkill::clear_lifeskillkind() {
  lifeskillkind_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBLifeSkill::lifeskillkind() const {
  return lifeskillkind_;
}
inline void PBLifeSkill::set_lifeskillkind(::google::protobuf::uint32 value) {
  _set_bit(4);
  lifeskillkind_ = value;
}

// repeated uint32 ComposeID = 6;
inline int PBLifeSkill::composeid_size() const {
  return composeid_.size();
}
inline void PBLifeSkill::clear_composeid() {
  composeid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLifeSkill::composeid() const {
  return composeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLifeSkill::mutable_composeid() {
  return &composeid_;
}
inline ::google::protobuf::uint32 PBLifeSkill::composeid(int index) const {
  return composeid_.Get(index);
}
inline void PBLifeSkill::set_composeid(int index, ::google::protobuf::uint32 value) {
  composeid_.Set(index, value);
}
inline void PBLifeSkill::add_composeid(::google::protobuf::uint32 value) {
  composeid_.Add(value);
}

// -------------------------------------------------------------------

// PBLifeSkillBox

// repeated .PBLifeSkill LifeSkill = 1;
inline int PBLifeSkillBox::lifeskill_size() const {
  return lifeskill_.size();
}
inline void PBLifeSkillBox::clear_lifeskill() {
  lifeskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLifeSkill >&
PBLifeSkillBox::lifeskill() const {
  return lifeskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLifeSkill >*
PBLifeSkillBox::mutable_lifeskill() {
  return &lifeskill_;
}
inline const ::PBLifeSkill& PBLifeSkillBox::lifeskill(int index) const {
  return lifeskill_.Get(index);
}
inline ::PBLifeSkill* PBLifeSkillBox::mutable_lifeskill(int index) {
  return lifeskill_.Mutable(index);
}
inline ::PBLifeSkill* PBLifeSkillBox::add_lifeskill() {
  return lifeskill_.Add();
}

// -------------------------------------------------------------------

// PBExpTimeInfo

// optional uint32 OffLineTimeLength = 1;
inline bool PBExpTimeInfo::has_offlinetimelength() const {
  return _has_bit(0);
}
inline void PBExpTimeInfo::clear_offlinetimelength() {
  offlinetimelength_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::offlinetimelength() const {
  return offlinetimelength_;
}
inline void PBExpTimeInfo::set_offlinetimelength(::google::protobuf::uint32 value) {
  _set_bit(0);
  offlinetimelength_ = value;
}

// optional uint32 EffectiveOffTimeLength = 2;
inline bool PBExpTimeInfo::has_effectiveofftimelength() const {
  return _has_bit(1);
}
inline void PBExpTimeInfo::clear_effectiveofftimelength() {
  effectiveofftimelength_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::effectiveofftimelength() const {
  return effectiveofftimelength_;
}
inline void PBExpTimeInfo::set_effectiveofftimelength(::google::protobuf::uint32 value) {
  _set_bit(1);
  effectiveofftimelength_ = value;
}

// optional uint32 LastEffectiveTimeLength = 3;
inline bool PBExpTimeInfo::has_lasteffectivetimelength() const {
  return _has_bit(2);
}
inline void PBExpTimeInfo::clear_lasteffectivetimelength() {
  lasteffectivetimelength_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::lasteffectivetimelength() const {
  return lasteffectivetimelength_;
}
inline void PBExpTimeInfo::set_lasteffectivetimelength(::google::protobuf::uint32 value) {
  _set_bit(2);
  lasteffectivetimelength_ = value;
}

// optional uint32 LastCalculateTime = 4;
inline bool PBExpTimeInfo::has_lastcalculatetime() const {
  return _has_bit(3);
}
inline void PBExpTimeInfo::clear_lastcalculatetime() {
  lastcalculatetime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::lastcalculatetime() const {
  return lastcalculatetime_;
}
inline void PBExpTimeInfo::set_lastcalculatetime(::google::protobuf::uint32 value) {
  _set_bit(3);
  lastcalculatetime_ = value;
}

// optional uint32 BlackPillsTime = 5;
inline bool PBExpTimeInfo::has_blackpillstime() const {
  return _has_bit(4);
}
inline void PBExpTimeInfo::clear_blackpillstime() {
  blackpillstime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::blackpillstime() const {
  return blackpillstime_;
}
inline void PBExpTimeInfo::set_blackpillstime(::google::protobuf::uint32 value) {
  _set_bit(4);
  blackpillstime_ = value;
}

// optional uint32 BlackPillID = 6;
inline bool PBExpTimeInfo::has_blackpillid() const {
  return _has_bit(5);
}
inline void PBExpTimeInfo::clear_blackpillid() {
  blackpillid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::blackpillid() const {
  return blackpillid_;
}
inline void PBExpTimeInfo::set_blackpillid(::google::protobuf::uint32 value) {
  _set_bit(5);
  blackpillid_ = value;
}

// optional uint32 ExpFromOffLine = 7;
inline bool PBExpTimeInfo::has_expfromoffline() const {
  return _has_bit(6);
}
inline void PBExpTimeInfo::clear_expfromoffline() {
  expfromoffline_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBExpTimeInfo::expfromoffline() const {
  return expfromoffline_;
}
inline void PBExpTimeInfo::set_expfromoffline(::google::protobuf::uint32 value) {
  _set_bit(6);
  expfromoffline_ = value;
}

// -------------------------------------------------------------------

// PBSinglePublishInfo

// optional uint32 PubNum = 1;
inline bool PBSinglePublishInfo::has_pubnum() const {
  return _has_bit(0);
}
inline void PBSinglePublishInfo::clear_pubnum() {
  pubnum_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSinglePublishInfo::pubnum() const {
  return pubnum_;
}
inline void PBSinglePublishInfo::set_pubnum(::google::protobuf::uint32 value) {
  _set_bit(0);
  pubnum_ = value;
}

// optional uint32 RecvAwards = 2;
inline bool PBSinglePublishInfo::has_recvawards() const {
  return _has_bit(1);
}
inline void PBSinglePublishInfo::clear_recvawards() {
  recvawards_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSinglePublishInfo::recvawards() const {
  return recvawards_;
}
inline void PBSinglePublishInfo::set_recvawards(::google::protobuf::uint32 value) {
  _set_bit(1);
  recvawards_ = value;
}

// -------------------------------------------------------------------

// PBTaskPublishInfo

// repeated .PBSinglePublishInfo SingleData = 1;
inline int PBTaskPublishInfo::singledata_size() const {
  return singledata_.size();
}
inline void PBTaskPublishInfo::clear_singledata() {
  singledata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePublishInfo >&
PBTaskPublishInfo::singledata() const {
  return singledata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSinglePublishInfo >*
PBTaskPublishInfo::mutable_singledata() {
  return &singledata_;
}
inline const ::PBSinglePublishInfo& PBTaskPublishInfo::singledata(int index) const {
  return singledata_.Get(index);
}
inline ::PBSinglePublishInfo* PBTaskPublishInfo::mutable_singledata(int index) {
  return singledata_.Mutable(index);
}
inline ::PBSinglePublishInfo* PBTaskPublishInfo::add_singledata() {
  return singledata_.Add();
}

// optional uint32 TodayPublishNum = 2;
inline bool PBTaskPublishInfo::has_todaypublishnum() const {
  return _has_bit(1);
}
inline void PBTaskPublishInfo::clear_todaypublishnum() {
  todaypublishnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTaskPublishInfo::todaypublishnum() const {
  return todaypublishnum_;
}
inline void PBTaskPublishInfo::set_todaypublishnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  todaypublishnum_ = value;
}

// optional uint32 OncePublishNum = 3;
inline bool PBTaskPublishInfo::has_oncepublishnum() const {
  return _has_bit(2);
}
inline void PBTaskPublishInfo::clear_oncepublishnum() {
  oncepublishnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTaskPublishInfo::oncepublishnum() const {
  return oncepublishnum_;
}
inline void PBTaskPublishInfo::set_oncepublishnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  oncepublishnum_ = value;
}

// optional uint32 TotalFinishNum = 4;
inline bool PBTaskPublishInfo::has_totalfinishnum() const {
  return _has_bit(3);
}
inline void PBTaskPublishInfo::clear_totalfinishnum() {
  totalfinishnum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTaskPublishInfo::totalfinishnum() const {
  return totalfinishnum_;
}
inline void PBTaskPublishInfo::set_totalfinishnum(::google::protobuf::uint32 value) {
  _set_bit(3);
  totalfinishnum_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerInfo

// optional uint32 role_id = 1;
inline bool CMessagePlayerInfo::has_role_id() const {
  return _has_bit(0);
}
inline void CMessagePlayerInfo::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_id() const {
  return role_id_;
}
inline void CMessagePlayerInfo::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  role_id_ = value;
}

// optional uint32 account_id = 2;
inline bool CMessagePlayerInfo::has_account_id() const {
  return _has_bit(1);
}
inline void CMessagePlayerInfo::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::account_id() const {
  return account_id_;
}
inline void CMessagePlayerInfo::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_ = value;
}

// optional string role_name = 3;
inline bool CMessagePlayerInfo::has_role_name() const {
  return _has_bit(2);
}
inline void CMessagePlayerInfo::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessagePlayerInfo::role_name() const {
  return *role_name_;
}
inline void CMessagePlayerInfo::set_role_name(const ::std::string& value) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CMessagePlayerInfo::set_role_name(const char* value) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CMessagePlayerInfo::set_role_name(const char* value, size_t size) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInfo::mutable_role_name() {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional uint32 gender_id = 4;
inline bool CMessagePlayerInfo::has_gender_id() const {
  return _has_bit(3);
}
inline void CMessagePlayerInfo::clear_gender_id() {
  gender_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::gender_id() const {
  return gender_id_;
}
inline void CMessagePlayerInfo::set_gender_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  gender_id_ = value;
}

// optional uint32 metier_id = 5;
inline bool CMessagePlayerInfo::has_metier_id() const {
  return _has_bit(4);
}
inline void CMessagePlayerInfo::clear_metier_id() {
  metier_id_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::metier_id() const {
  return metier_id_;
}
inline void CMessagePlayerInfo::set_metier_id(::google::protobuf::uint32 value) {
  _set_bit(4);
  metier_id_ = value;
}

// optional uint32 nationality_id = 6;
inline bool CMessagePlayerInfo::has_nationality_id() const {
  return _has_bit(5);
}
inline void CMessagePlayerInfo::clear_nationality_id() {
  nationality_id_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::nationality_id() const {
  return nationality_id_;
}
inline void CMessagePlayerInfo::set_nationality_id(::google::protobuf::uint32 value) {
  _set_bit(5);
  nationality_id_ = value;
}

// optional uint32 face_type = 7;
inline bool CMessagePlayerInfo::has_face_type() const {
  return _has_bit(6);
}
inline void CMessagePlayerInfo::clear_face_type() {
  face_type_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::face_type() const {
  return face_type_;
}
inline void CMessagePlayerInfo::set_face_type(::google::protobuf::uint32 value) {
  _set_bit(6);
  face_type_ = value;
}

// optional uint32 line_id = 8;
inline bool CMessagePlayerInfo::has_line_id() const {
  return _has_bit(7);
}
inline void CMessagePlayerInfo::clear_line_id() {
  line_id_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::line_id() const {
  return line_id_;
}
inline void CMessagePlayerInfo::set_line_id(::google::protobuf::uint32 value) {
  _set_bit(7);
  line_id_ = value;
}

// optional uint32 map_id = 9;
inline bool CMessagePlayerInfo::has_map_id() const {
  return _has_bit(8);
}
inline void CMessagePlayerInfo::clear_map_id() {
  map_id_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::map_id() const {
  return map_id_;
}
inline void CMessagePlayerInfo::set_map_id(::google::protobuf::uint32 value) {
  _set_bit(8);
  map_id_ = value;
}

// optional uint32 role_level = 10;
inline bool CMessagePlayerInfo::has_role_level() const {
  return _has_bit(9);
}
inline void CMessagePlayerInfo::clear_role_level() {
  role_level_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_level() const {
  return role_level_;
}
inline void CMessagePlayerInfo::set_role_level(::google::protobuf::uint32 value) {
  _set_bit(9);
  role_level_ = value;
}

// optional uint64 role_expr = 11;
inline bool CMessagePlayerInfo::has_role_expr() const {
  return _has_bit(10);
}
inline void CMessagePlayerInfo::clear_role_expr() {
  role_expr_ = GOOGLE_ULONGLONG(0);
  _clear_bit(10);
}
inline ::google::protobuf::uint64 CMessagePlayerInfo::role_expr() const {
  return role_expr_;
}
inline void CMessagePlayerInfo::set_role_expr(::google::protobuf::uint64 value) {
  _set_bit(10);
  role_expr_ = value;
}

// optional uint32 role_money = 12;
inline bool CMessagePlayerInfo::has_role_money() const {
  return _has_bit(11);
}
inline void CMessagePlayerInfo::clear_role_money() {
  role_money_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_money() const {
  return role_money_;
}
inline void CMessagePlayerInfo::set_role_money(::google::protobuf::uint32 value) {
  _set_bit(11);
  role_money_ = value;
}

// optional int32 pos_x = 13;
inline bool CMessagePlayerInfo::has_pos_x() const {
  return _has_bit(12);
}
inline void CMessagePlayerInfo::clear_pos_x() {
  pos_x_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 CMessagePlayerInfo::pos_x() const {
  return pos_x_;
}
inline void CMessagePlayerInfo::set_pos_x(::google::protobuf::int32 value) {
  _set_bit(12);
  pos_x_ = value;
}

// optional int32 pos_y = 14;
inline bool CMessagePlayerInfo::has_pos_y() const {
  return _has_bit(13);
}
inline void CMessagePlayerInfo::clear_pos_y() {
  pos_y_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 CMessagePlayerInfo::pos_y() const {
  return pos_y_;
}
inline void CMessagePlayerInfo::set_pos_y(::google::protobuf::int32 value) {
  _set_bit(13);
  pos_y_ = value;
}

// optional uint32 is_alive = 15;
inline bool CMessagePlayerInfo::has_is_alive() const {
  return _has_bit(14);
}
inline void CMessagePlayerInfo::clear_is_alive() {
  is_alive_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::is_alive() const {
  return is_alive_;
}
inline void CMessagePlayerInfo::set_is_alive(::google::protobuf::uint32 value) {
  _set_bit(14);
  is_alive_ = value;
}

// optional uint32 login_time = 16;
inline bool CMessagePlayerInfo::has_login_time() const {
  return _has_bit(15);
}
inline void CMessagePlayerInfo::clear_login_time() {
  login_time_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::login_time() const {
  return login_time_;
}
inline void CMessagePlayerInfo::set_login_time(::google::protobuf::uint32 value) {
  _set_bit(15);
  login_time_ = value;
}

// optional uint32 online_duration = 17;
inline bool CMessagePlayerInfo::has_online_duration() const {
  return _has_bit(16);
}
inline void CMessagePlayerInfo::clear_online_duration() {
  online_duration_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::online_duration() const {
  return online_duration_;
}
inline void CMessagePlayerInfo::set_online_duration(::google::protobuf::uint32 value) {
  _set_bit(16);
  online_duration_ = value;
}

// optional uint32 save_status = 18;
inline bool CMessagePlayerInfo::has_save_status() const {
  return _has_bit(17);
}
inline void CMessagePlayerInfo::clear_save_status() {
  save_status_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::save_status() const {
  return save_status_;
}
inline void CMessagePlayerInfo::set_save_status(::google::protobuf::uint32 value) {
  _set_bit(17);
  save_status_ = value;
}

// optional uint32 save_bitflag = 19;
inline bool CMessagePlayerInfo::has_save_bitflag() const {
  return _has_bit(18);
}
inline void CMessagePlayerInfo::clear_save_bitflag() {
  save_bitflag_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::save_bitflag() const {
  return save_bitflag_;
}
inline void CMessagePlayerInfo::set_save_bitflag(::google::protobuf::uint32 value) {
  _set_bit(18);
  save_bitflag_ = value;
}

// optional uint32 bounded_money = 20;
inline bool CMessagePlayerInfo::has_bounded_money() const {
  return _has_bit(19);
}
inline void CMessagePlayerInfo::clear_bounded_money() {
  bounded_money_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::bounded_money() const {
  return bounded_money_;
}
inline void CMessagePlayerInfo::set_bounded_money(::google::protobuf::uint32 value) {
  _set_bit(19);
  bounded_money_ = value;
}

// optional uint32 check_sum = 21;
inline bool CMessagePlayerInfo::has_check_sum() const {
  return _has_bit(20);
}
inline void CMessagePlayerInfo::clear_check_sum() {
  check_sum_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::check_sum() const {
  return check_sum_;
}
inline void CMessagePlayerInfo::set_check_sum(::google::protobuf::uint32 value) {
  _set_bit(20);
  check_sum_ = value;
}

// optional uint32 silver_yb = 22;
inline bool CMessagePlayerInfo::has_silver_yb() const {
  return _has_bit(21);
}
inline void CMessagePlayerInfo::clear_silver_yb() {
  silver_yb_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::silver_yb() const {
  return silver_yb_;
}
inline void CMessagePlayerInfo::set_silver_yb(::google::protobuf::uint32 value) {
  _set_bit(21);
  silver_yb_ = value;
}

// optional uint32 storage_money = 23;
inline bool CMessagePlayerInfo::has_storage_money() const {
  return _has_bit(22);
}
inline void CMessagePlayerInfo::clear_storage_money() {
  storage_money_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::storage_money() const {
  return storage_money_;
}
inline void CMessagePlayerInfo::set_storage_money(::google::protobuf::uint32 value) {
  _set_bit(22);
  storage_money_ = value;
}

// optional uint32 storage_bounded_money = 24;
inline bool CMessagePlayerInfo::has_storage_bounded_money() const {
  return _has_bit(23);
}
inline void CMessagePlayerInfo::clear_storage_bounded_money() {
  storage_bounded_money_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::storage_bounded_money() const {
  return storage_bounded_money_;
}
inline void CMessagePlayerInfo::set_storage_bounded_money(::google::protobuf::uint32 value) {
  _set_bit(23);
  storage_bounded_money_ = value;
}

// optional uint32 role_status_param = 25;
inline bool CMessagePlayerInfo::has_role_status_param() const {
  return _has_bit(24);
}
inline void CMessagePlayerInfo::clear_role_status_param() {
  role_status_param_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_status_param() const {
  return role_status_param_;
}
inline void CMessagePlayerInfo::set_role_status_param(::google::protobuf::uint32 value) {
  _set_bit(24);
  role_status_param_ = value;
}

// optional int32 country_id = 26;
inline bool CMessagePlayerInfo::has_country_id() const {
  return _has_bit(25);
}
inline void CMessagePlayerInfo::clear_country_id() {
  country_id_ = 0;
  _clear_bit(25);
}
inline ::google::protobuf::int32 CMessagePlayerInfo::country_id() const {
  return country_id_;
}
inline void CMessagePlayerInfo::set_country_id(::google::protobuf::int32 value) {
  _set_bit(25);
  country_id_ = value;
}

// optional uint32 role_familyid = 27;
inline bool CMessagePlayerInfo::has_role_familyid() const {
  return _has_bit(26);
}
inline void CMessagePlayerInfo::clear_role_familyid() {
  role_familyid_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_familyid() const {
  return role_familyid_;
}
inline void CMessagePlayerInfo::set_role_familyid(::google::protobuf::uint32 value) {
  _set_bit(26);
  role_familyid_ = value;
}

// optional uint32 role_corpsid = 28;
inline bool CMessagePlayerInfo::has_role_corpsid() const {
  return _has_bit(27);
}
inline void CMessagePlayerInfo::clear_role_corpsid() {
  role_corpsid_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_corpsid() const {
  return role_corpsid_;
}
inline void CMessagePlayerInfo::set_role_corpsid(::google::protobuf::uint32 value) {
  _set_bit(27);
  role_corpsid_ = value;
}

// optional uint32 charged_silver_yb = 29;
inline bool CMessagePlayerInfo::has_charged_silver_yb() const {
  return _has_bit(28);
}
inline void CMessagePlayerInfo::clear_charged_silver_yb() {
  charged_silver_yb_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::charged_silver_yb() const {
  return charged_silver_yb_;
}
inline void CMessagePlayerInfo::set_charged_silver_yb(::google::protobuf::uint32 value) {
  _set_bit(28);
  charged_silver_yb_ = value;
}

// optional uint32 consumed_silver_yb = 30;
inline bool CMessagePlayerInfo::has_consumed_silver_yb() const {
  return _has_bit(29);
}
inline void CMessagePlayerInfo::clear_consumed_silver_yb() {
  consumed_silver_yb_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::consumed_silver_yb() const {
  return consumed_silver_yb_;
}
inline void CMessagePlayerInfo::set_consumed_silver_yb(::google::protobuf::uint32 value) {
  _set_bit(29);
  consumed_silver_yb_ = value;
}

// optional uint32 role_protecttime = 31;
inline bool CMessagePlayerInfo::has_role_protecttime() const {
  return _has_bit(30);
}
inline void CMessagePlayerInfo::clear_role_protecttime() {
  role_protecttime_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_protecttime() const {
  return role_protecttime_;
}
inline void CMessagePlayerInfo::set_role_protecttime(::google::protobuf::uint32 value) {
  _set_bit(30);
  role_protecttime_ = value;
}

// optional string role_password = 32;
inline bool CMessagePlayerInfo::has_role_password() const {
  return _has_bit(31);
}
inline void CMessagePlayerInfo::clear_role_password() {
  if (role_password_ != &_default_role_password_) {
    role_password_->clear();
  }
  _clear_bit(31);
}
inline const ::std::string& CMessagePlayerInfo::role_password() const {
  return *role_password_;
}
inline void CMessagePlayerInfo::set_role_password(const ::std::string& value) {
  _set_bit(31);
  if (role_password_ == &_default_role_password_) {
    role_password_ = new ::std::string;
  }
  role_password_->assign(value);
}
inline void CMessagePlayerInfo::set_role_password(const char* value) {
  _set_bit(31);
  if (role_password_ == &_default_role_password_) {
    role_password_ = new ::std::string;
  }
  role_password_->assign(value);
}
inline void CMessagePlayerInfo::set_role_password(const char* value, size_t size) {
  _set_bit(31);
  if (role_password_ == &_default_role_password_) {
    role_password_ = new ::std::string;
  }
  role_password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInfo::mutable_role_password() {
  _set_bit(31);
  if (role_password_ == &_default_role_password_) {
    role_password_ = new ::std::string;
  }
  return role_password_;
}

// optional uint32 role_vip_flag = 33;
inline bool CMessagePlayerInfo::has_role_vip_flag() const {
  return _has_bit(32);
}
inline void CMessagePlayerInfo::clear_role_vip_flag() {
  role_vip_flag_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_vip_flag() const {
  return role_vip_flag_;
}
inline void CMessagePlayerInfo::set_role_vip_flag(::google::protobuf::uint32 value) {
  _set_bit(32);
  role_vip_flag_ = value;
}

// optional uint32 role_vip_time = 34;
inline bool CMessagePlayerInfo::has_role_vip_time() const {
  return _has_bit(33);
}
inline void CMessagePlayerInfo::clear_role_vip_time() {
  role_vip_time_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_vip_time() const {
  return role_vip_time_;
}
inline void CMessagePlayerInfo::set_role_vip_time(::google::protobuf::uint32 value) {
  _set_bit(33);
  role_vip_time_ = value;
}

// optional uint32 role_marriageid = 35;
inline bool CMessagePlayerInfo::has_role_marriageid() const {
  return _has_bit(34);
}
inline void CMessagePlayerInfo::clear_role_marriageid() {
  role_marriageid_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_marriageid() const {
  return role_marriageid_;
}
inline void CMessagePlayerInfo::set_role_marriageid(::google::protobuf::uint32 value) {
  _set_bit(34);
  role_marriageid_ = value;
}

// optional uint32 role_changecamp_time = 36;
inline bool CMessagePlayerInfo::has_role_changecamp_time() const {
  return _has_bit(35);
}
inline void CMessagePlayerInfo::clear_role_changecamp_time() {
  role_changecamp_time_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_changecamp_time() const {
  return role_changecamp_time_;
}
inline void CMessagePlayerInfo::set_role_changecamp_time(::google::protobuf::uint32 value) {
  _set_bit(35);
  role_changecamp_time_ = value;
}

// optional uint32 role_status = 37;
inline bool CMessagePlayerInfo::has_role_status() const {
  return _has_bit(36);
}
inline void CMessagePlayerInfo::clear_role_status() {
  role_status_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_status() const {
  return role_status_;
}
inline void CMessagePlayerInfo::set_role_status(::google::protobuf::uint32 value) {
  _set_bit(36);
  role_status_ = value;
}

// optional uint32 role_swornid = 38;
inline bool CMessagePlayerInfo::has_role_swornid() const {
  return _has_bit(37);
}
inline void CMessagePlayerInfo::clear_role_swornid() {
  role_swornid_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 CMessagePlayerInfo::role_swornid() const {
  return role_swornid_;
}
inline void CMessagePlayerInfo::set_role_swornid(::google::protobuf::uint32 value) {
  _set_bit(37);
  role_swornid_ = value;
}

// -------------------------------------------------------------------

// PBAwardRecord

// repeated uint32 AwardID = 1;
inline int PBAwardRecord::awardid_size() const {
  return awardid_.size();
}
inline void PBAwardRecord::clear_awardid() {
  awardid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAwardRecord::awardid() const {
  return awardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAwardRecord::mutable_awardid() {
  return &awardid_;
}
inline ::google::protobuf::uint32 PBAwardRecord::awardid(int index) const {
  return awardid_.Get(index);
}
inline void PBAwardRecord::set_awardid(int index, ::google::protobuf::uint32 value) {
  awardid_.Set(index, value);
}
inline void PBAwardRecord::add_awardid(::google::protobuf::uint32 value) {
  awardid_.Add(value);
}

// repeated uint32 Times = 2;
inline int PBAwardRecord::times_size() const {
  return times_.size();
}
inline void PBAwardRecord::clear_times() {
  times_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAwardRecord::times() const {
  return times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAwardRecord::mutable_times() {
  return &times_;
}
inline ::google::protobuf::uint32 PBAwardRecord::times(int index) const {
  return times_.Get(index);
}
inline void PBAwardRecord::set_times(int index, ::google::protobuf::uint32 value) {
  times_.Set(index, value);
}
inline void PBAwardRecord::add_times(::google::protobuf::uint32 value) {
  times_.Add(value);
}

// -------------------------------------------------------------------

// PBMatrixInfo

// repeated uint32 MasterID = 1;
inline int PBMatrixInfo::masterid_size() const {
  return masterid_.size();
}
inline void PBMatrixInfo::clear_masterid() {
  masterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixInfo::masterid() const {
  return masterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixInfo::mutable_masterid() {
  return &masterid_;
}
inline ::google::protobuf::uint32 PBMatrixInfo::masterid(int index) const {
  return masterid_.Get(index);
}
inline void PBMatrixInfo::set_masterid(int index, ::google::protobuf::uint32 value) {
  masterid_.Set(index, value);
}
inline void PBMatrixInfo::add_masterid(::google::protobuf::uint32 value) {
  masterid_.Add(value);
}

// repeated uint32 SlaveID = 2;
inline int PBMatrixInfo::slaveid_size() const {
  return slaveid_.size();
}
inline void PBMatrixInfo::clear_slaveid() {
  slaveid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixInfo::slaveid() const {
  return slaveid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixInfo::mutable_slaveid() {
  return &slaveid_;
}
inline ::google::protobuf::uint32 PBMatrixInfo::slaveid(int index) const {
  return slaveid_.Get(index);
}
inline void PBMatrixInfo::set_slaveid(int index, ::google::protobuf::uint32 value) {
  slaveid_.Set(index, value);
}
inline void PBMatrixInfo::add_slaveid(::google::protobuf::uint32 value) {
  slaveid_.Add(value);
}

// repeated uint32 SlaveValue = 3;
inline int PBMatrixInfo::slavevalue_size() const {
  return slavevalue_.size();
}
inline void PBMatrixInfo::clear_slavevalue() {
  slavevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixInfo::slavevalue() const {
  return slavevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixInfo::mutable_slavevalue() {
  return &slavevalue_;
}
inline ::google::protobuf::uint32 PBMatrixInfo::slavevalue(int index) const {
  return slavevalue_.Get(index);
}
inline void PBMatrixInfo::set_slavevalue(int index, ::google::protobuf::uint32 value) {
  slavevalue_.Set(index, value);
}
inline void PBMatrixInfo::add_slavevalue(::google::protobuf::uint32 value) {
  slavevalue_.Add(value);
}

// optional uint32 SlavePoint = 4;
inline bool PBMatrixInfo::has_slavepoint() const {
  return _has_bit(3);
}
inline void PBMatrixInfo::clear_slavepoint() {
  slavepoint_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMatrixInfo::slavepoint() const {
  return slavepoint_;
}
inline void PBMatrixInfo::set_slavepoint(::google::protobuf::uint32 value) {
  _set_bit(3);
  slavepoint_ = value;
}

// optional uint32 MasterPoint = 5;
inline bool PBMatrixInfo::has_masterpoint() const {
  return _has_bit(4);
}
inline void PBMatrixInfo::clear_masterpoint() {
  masterpoint_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMatrixInfo::masterpoint() const {
  return masterpoint_;
}
inline void PBMatrixInfo::set_masterpoint(::google::protobuf::uint32 value) {
  _set_bit(4);
  masterpoint_ = value;
}

// optional uint32 SlaveTotal = 6;
inline bool PBMatrixInfo::has_slavetotal() const {
  return _has_bit(5);
}
inline void PBMatrixInfo::clear_slavetotal() {
  slavetotal_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMatrixInfo::slavetotal() const {
  return slavetotal_;
}
inline void PBMatrixInfo::set_slavetotal(::google::protobuf::uint32 value) {
  _set_bit(5);
  slavetotal_ = value;
}

// optional uint32 MasterTotal = 7;
inline bool PBMatrixInfo::has_mastertotal() const {
  return _has_bit(6);
}
inline void PBMatrixInfo::clear_mastertotal() {
  mastertotal_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMatrixInfo::mastertotal() const {
  return mastertotal_;
}
inline void PBMatrixInfo::set_mastertotal(::google::protobuf::uint32 value) {
  _set_bit(6);
  mastertotal_ = value;
}

// repeated uint32 MasterPercent = 8;
inline int PBMatrixInfo::masterpercent_size() const {
  return masterpercent_.size();
}
inline void PBMatrixInfo::clear_masterpercent() {
  masterpercent_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixInfo::masterpercent() const {
  return masterpercent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixInfo::mutable_masterpercent() {
  return &masterpercent_;
}
inline ::google::protobuf::uint32 PBMatrixInfo::masterpercent(int index) const {
  return masterpercent_.Get(index);
}
inline void PBMatrixInfo::set_masterpercent(int index, ::google::protobuf::uint32 value) {
  masterpercent_.Set(index, value);
}
inline void PBMatrixInfo::add_masterpercent(::google::protobuf::uint32 value) {
  masterpercent_.Add(value);
}

// optional uint32 MasterTimes = 9;
inline bool PBMatrixInfo::has_mastertimes() const {
  return _has_bit(8);
}
inline void PBMatrixInfo::clear_mastertimes() {
  mastertimes_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMatrixInfo::mastertimes() const {
  return mastertimes_;
}
inline void PBMatrixInfo::set_mastertimes(::google::protobuf::uint32 value) {
  _set_bit(8);
  mastertimes_ = value;
}

// optional uint32 SlaveNum = 10;
inline bool PBMatrixInfo::has_slavenum() const {
  return _has_bit(9);
}
inline void PBMatrixInfo::clear_slavenum() {
  slavenum_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMatrixInfo::slavenum() const {
  return slavenum_;
}
inline void PBMatrixInfo::set_slavenum(::google::protobuf::uint32 value) {
  _set_bit(9);
  slavenum_ = value;
}

// optional uint32 MasterGive = 11;
inline bool PBMatrixInfo::has_mastergive() const {
  return _has_bit(10);
}
inline void PBMatrixInfo::clear_mastergive() {
  mastergive_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMatrixInfo::mastergive() const {
  return mastergive_;
}
inline void PBMatrixInfo::set_mastergive(::google::protobuf::uint32 value) {
  _set_bit(10);
  mastergive_ = value;
}

// optional uint32 BeginnerNum = 12;
inline bool PBMatrixInfo::has_beginnernum() const {
  return _has_bit(11);
}
inline void PBMatrixInfo::clear_beginnernum() {
  beginnernum_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMatrixInfo::beginnernum() const {
  return beginnernum_;
}
inline void PBMatrixInfo::set_beginnernum(::google::protobuf::uint32 value) {
  _set_bit(11);
  beginnernum_ = value;
}

// optional uint32 FormalNum = 13;
inline bool PBMatrixInfo::has_formalnum() const {
  return _has_bit(12);
}
inline void PBMatrixInfo::clear_formalnum() {
  formalnum_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBMatrixInfo::formalnum() const {
  return formalnum_;
}
inline void PBMatrixInfo::set_formalnum(::google::protobuf::uint32 value) {
  _set_bit(12);
  formalnum_ = value;
}

// -------------------------------------------------------------------

// PBCharm

// optional uint32 CharmValue = 1;
inline bool PBCharm::has_charmvalue() const {
  return _has_bit(0);
}
inline void PBCharm::clear_charmvalue() {
  charmvalue_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCharm::charmvalue() const {
  return charmvalue_;
}
inline void PBCharm::set_charmvalue(::google::protobuf::uint32 value) {
  _set_bit(0);
  charmvalue_ = value;
}

// optional uint32 WeekIncCharm = 2;
inline bool PBCharm::has_weekinccharm() const {
  return _has_bit(1);
}
inline void PBCharm::clear_weekinccharm() {
  weekinccharm_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCharm::weekinccharm() const {
  return weekinccharm_;
}
inline void PBCharm::set_weekinccharm(::google::protobuf::uint32 value) {
  _set_bit(1);
  weekinccharm_ = value;
}

// optional uint32 LastWeekIncCharm = 3;
inline bool PBCharm::has_lastweekinccharm() const {
  return _has_bit(2);
}
inline void PBCharm::clear_lastweekinccharm() {
  lastweekinccharm_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBCharm::lastweekinccharm() const {
  return lastweekinccharm_;
}
inline void PBCharm::set_lastweekinccharm(::google::protobuf::uint32 value) {
  _set_bit(2);
  lastweekinccharm_ = value;
}

// -------------------------------------------------------------------

// PBGuideData

// optional uint32 LevelBak = 1;
inline bool PBGuideData::has_levelbak() const {
  return _has_bit(0);
}
inline void PBGuideData::clear_levelbak() {
  levelbak_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBGuideData::levelbak() const {
  return levelbak_;
}
inline void PBGuideData::set_levelbak(::google::protobuf::uint32 value) {
  _set_bit(0);
  levelbak_ = value;
}

// optional uint32 ExpBak = 2;
inline bool PBGuideData::has_expbak() const {
  return _has_bit(1);
}
inline void PBGuideData::clear_expbak() {
  expbak_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBGuideData::expbak() const {
  return expbak_;
}
inline void PBGuideData::set_expbak(::google::protobuf::uint32 value) {
  _set_bit(1);
  expbak_ = value;
}

// optional uint32 HonorBak = 3;
inline bool PBGuideData::has_honorbak() const {
  return _has_bit(2);
}
inline void PBGuideData::clear_honorbak() {
  honorbak_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBGuideData::honorbak() const {
  return honorbak_;
}
inline void PBGuideData::set_honorbak(::google::protobuf::uint32 value) {
  _set_bit(2);
  honorbak_ = value;
}

// optional uint32 AchiveBak = 4;
inline bool PBGuideData::has_achivebak() const {
  return _has_bit(3);
}
inline void PBGuideData::clear_achivebak() {
  achivebak_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBGuideData::achivebak() const {
  return achivebak_;
}
inline void PBGuideData::set_achivebak(::google::protobuf::uint32 value) {
  _set_bit(3);
  achivebak_ = value;
}

// optional uint32 KillBak = 5;
inline bool PBGuideData::has_killbak() const {
  return _has_bit(4);
}
inline void PBGuideData::clear_killbak() {
  killbak_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBGuideData::killbak() const {
  return killbak_;
}
inline void PBGuideData::set_killbak(::google::protobuf::uint32 value) {
  _set_bit(4);
  killbak_ = value;
}

// -------------------------------------------------------------------

// PBSingleTimes

// optional uint32 Key = 1;
inline bool PBSingleTimes::has_key() const {
  return _has_bit(0);
}
inline void PBSingleTimes::clear_key() {
  key_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSingleTimes::key() const {
  return key_;
}
inline void PBSingleTimes::set_key(::google::protobuf::uint32 value) {
  _set_bit(0);
  key_ = value;
}

// optional uint32 Value = 2;
inline bool PBSingleTimes::has_value() const {
  return _has_bit(1);
}
inline void PBSingleTimes::clear_value() {
  value_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleTimes::value() const {
  return value_;
}
inline void PBSingleTimes::set_value(::google::protobuf::uint32 value) {
  _set_bit(1);
  value_ = value;
}

// -------------------------------------------------------------------

// PBTimes

// repeated .PBSingleTimes timesinfo = 1;
inline int PBTimes::timesinfo_size() const {
  return timesinfo_.size();
}
inline void PBTimes::clear_timesinfo() {
  timesinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleTimes >&
PBTimes::timesinfo() const {
  return timesinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleTimes >*
PBTimes::mutable_timesinfo() {
  return &timesinfo_;
}
inline const ::PBSingleTimes& PBTimes::timesinfo(int index) const {
  return timesinfo_.Get(index);
}
inline ::PBSingleTimes* PBTimes::mutable_timesinfo(int index) {
  return timesinfo_.Mutable(index);
}
inline ::PBSingleTimes* PBTimes::add_timesinfo() {
  return timesinfo_.Add();
}

// -------------------------------------------------------------------

// PBTreasureBowlItem

// optional uint32 ItemID = 1;
inline bool PBTreasureBowlItem::has_itemid() const {
  return _has_bit(0);
}
inline void PBTreasureBowlItem::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTreasureBowlItem::itemid() const {
  return itemid_;
}
inline void PBTreasureBowlItem::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 UsedTimes = 2;
inline bool PBTreasureBowlItem::has_usedtimes() const {
  return _has_bit(1);
}
inline void PBTreasureBowlItem::clear_usedtimes() {
  usedtimes_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTreasureBowlItem::usedtimes() const {
  return usedtimes_;
}
inline void PBTreasureBowlItem::set_usedtimes(::google::protobuf::uint32 value) {
  _set_bit(1);
  usedtimes_ = value;
}

// -------------------------------------------------------------------

// PBTreasureBowl

// optional uint32 TotalNum = 1;
inline bool PBTreasureBowl::has_totalnum() const {
  return _has_bit(0);
}
inline void PBTreasureBowl::clear_totalnum() {
  totalnum_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTreasureBowl::totalnum() const {
  return totalnum_;
}
inline void PBTreasureBowl::set_totalnum(::google::protobuf::uint32 value) {
  _set_bit(0);
  totalnum_ = value;
}

// optional uint32 ExchangeTime = 2;
inline bool PBTreasureBowl::has_exchangetime() const {
  return _has_bit(1);
}
inline void PBTreasureBowl::clear_exchangetime() {
  exchangetime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTreasureBowl::exchangetime() const {
  return exchangetime_;
}
inline void PBTreasureBowl::set_exchangetime(::google::protobuf::uint32 value) {
  _set_bit(1);
  exchangetime_ = value;
}

// repeated .PBTreasureBowlItem TreasureBowlItem = 3;
inline int PBTreasureBowl::treasurebowlitem_size() const {
  return treasurebowlitem_.size();
}
inline void PBTreasureBowl::clear_treasurebowlitem() {
  treasurebowlitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTreasureBowlItem >&
PBTreasureBowl::treasurebowlitem() const {
  return treasurebowlitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTreasureBowlItem >*
PBTreasureBowl::mutable_treasurebowlitem() {
  return &treasurebowlitem_;
}
inline const ::PBTreasureBowlItem& PBTreasureBowl::treasurebowlitem(int index) const {
  return treasurebowlitem_.Get(index);
}
inline ::PBTreasureBowlItem* PBTreasureBowl::mutable_treasurebowlitem(int index) {
  return treasurebowlitem_.Mutable(index);
}
inline ::PBTreasureBowlItem* PBTreasureBowl::add_treasurebowlitem() {
  return treasurebowlitem_.Add();
}

// -------------------------------------------------------------------

// PBRepetDataToClient

// optional uint32 RepetIndex = 1;
inline bool PBRepetDataToClient::has_repetindex() const {
  return _has_bit(0);
}
inline void PBRepetDataToClient::clear_repetindex() {
  repetindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRepetDataToClient::repetindex() const {
  return repetindex_;
}
inline void PBRepetDataToClient::set_repetindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetindex_ = value;
}

// optional uint32 RepetData = 2;
inline bool PBRepetDataToClient::has_repetdata() const {
  return _has_bit(1);
}
inline void PBRepetDataToClient::clear_repetdata() {
  repetdata_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRepetDataToClient::repetdata() const {
  return repetdata_;
}
inline void PBRepetDataToClient::set_repetdata(::google::protobuf::uint32 value) {
  _set_bit(1);
  repetdata_ = value;
}

// -------------------------------------------------------------------

// PBRepetDataList

// repeated .PBRepetDataToClient RepetDataToClient = 1;
inline int PBRepetDataList::repetdatatoclient_size() const {
  return repetdatatoclient_.size();
}
inline void PBRepetDataList::clear_repetdatatoclient() {
  repetdatatoclient_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepetDataToClient >&
PBRepetDataList::repetdatatoclient() const {
  return repetdatatoclient_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepetDataToClient >*
PBRepetDataList::mutable_repetdatatoclient() {
  return &repetdatatoclient_;
}
inline const ::PBRepetDataToClient& PBRepetDataList::repetdatatoclient(int index) const {
  return repetdatatoclient_.Get(index);
}
inline ::PBRepetDataToClient* PBRepetDataList::mutable_repetdatatoclient(int index) {
  return repetdatatoclient_.Mutable(index);
}
inline ::PBRepetDataToClient* PBRepetDataList::add_repetdatatoclient() {
  return repetdatatoclient_.Add();
}

// -------------------------------------------------------------------

// PBSwornMember

// optional uint32 RoleID = 1;
inline bool PBSwornMember::has_roleid() const {
  return _has_bit(0);
}
inline void PBSwornMember::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSwornMember::roleid() const {
  return roleid_;
}
inline void PBSwornMember::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 TeamPos = 2;
inline bool PBSwornMember::has_teampos() const {
  return _has_bit(1);
}
inline void PBSwornMember::clear_teampos() {
  teampos_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSwornMember::teampos() const {
  return teampos_;
}
inline void PBSwornMember::set_teampos(::google::protobuf::uint32 value) {
  _set_bit(1);
  teampos_ = value;
}

// -------------------------------------------------------------------

// PBSwornTeam

// repeated .PBSwornMember SwornMember = 1;
inline int PBSwornTeam::swornmember_size() const {
  return swornmember_.size();
}
inline void PBSwornTeam::clear_swornmember() {
  swornmember_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSwornMember >&
PBSwornTeam::swornmember() const {
  return swornmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSwornMember >*
PBSwornTeam::mutable_swornmember() {
  return &swornmember_;
}
inline const ::PBSwornMember& PBSwornTeam::swornmember(int index) const {
  return swornmember_.Get(index);
}
inline ::PBSwornMember* PBSwornTeam::mutable_swornmember(int index) {
  return swornmember_.Mutable(index);
}
inline ::PBSwornMember* PBSwornTeam::add_swornmember() {
  return swornmember_.Add();
}

#endif  // PROTOBUF_property_5fpb_2ehxx__INCLUDED
